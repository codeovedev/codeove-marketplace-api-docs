openapi: 3.0.1
info:
  title: Codeove API
  contact:
    name: Codeove API
    email: contact@codeove.com
  version: '1.0'
paths:
  /ActivityLog:
    get:
      tags:
        - ActivityLog
      summary: Gets the activity logs by product id.
      parameters:
        - name: productId
          in: query
          description: The product id.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetActivityLogsByProductIdOutput'
            application/json:
              schema:
                $ref: '#/components/schemas/GetActivityLogsByProductIdOutput'
            text/json:
              schema:
                $ref: '#/components/schemas/GetActivityLogsByProductIdOutput'
  /Albums:
    get:
      tags:
        - Albums
      summary: Gets the albums.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlbumIEnumerableStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/AlbumIEnumerableStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/AlbumIEnumerableStringApiResponseObject'
    post:
      tags:
        - Albums
      summary: Creates the new album.
      requestBody:
        description: The album.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
          text/json:
            schema:
              $ref: '#/components/schemas/Album'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Album'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlbumStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/AlbumStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/AlbumStringApiResponseObject'
  /AppealFiles:
    get:
      tags:
        - AppealFiles
      summary: List all Appeal Files.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppealFileQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppealFileQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppealFileQuery'
    post:
      tags:
        - AppealFiles
      summary: Create a new appeal file.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                Name:
                  type: string
                IsActive:
                  type: boolean
                Summary:
                  type: string
                Desc:
                  type: string
                file:
                  type: string
                  format: binary
            encoding:
              Name:
                style: form
              IsActive:
                style: form
              Summary:
                style: form
              Desc:
                style: form
              file:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppealFileQueryIEnumerableAppealFileCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/AppealFileQueryIEnumerableAppealFileCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/AppealFileQueryIEnumerableAppealFileCreateApiResponseObject'
  /AppealFiles/{id}:
    get:
      tags:
        - AppealFiles
      summary: Get specific appeal file.
      parameters:
        - name: id
          in: path
          description: Appeal file id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppealFileVersionQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/AppealFileVersionQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/AppealFileVersionQuery'
    delete:
      tags:
        - AppealFiles
      summary: Delete specific appeal file.
      parameters:
        - name: id
          in: path
          description: Appeal file id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppealFileQueryIEnumerableStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/AppealFileQueryIEnumerableStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/AppealFileQueryIEnumerableStringApiResponseObject'
  /AppealFiles/{id}/AddVersion:
    post:
      tags:
        - AppealFiles
      summary: Create a new appeal file version.
      parameters:
        - name: id
          in: path
          description: Appeal file id
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                Summary:
                  type: string
                Desc:
                  type: string
                Version:
                  type: integer
                  format: int32
                Url:
                  type: string
                file:
                  type: string
                  format: binary
            encoding:
              Summary:
                style: form
              Desc:
                style: form
              Version:
                style: form
              Url:
                style: form
              file:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppealFileQueryIEnumerableAppealFileVersionCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/AppealFileQueryIEnumerableAppealFileVersionCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/AppealFileQueryIEnumerableAppealFileVersionCreateApiResponseObject'
  /AppealFiles/{id}/UpdateAppealFile:
    post:
      tags:
        - AppealFiles
      summary: Updates the appeal file.
      parameters:
        - name: id
          in: path
          description: The appeal file id.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                Name:
                  type: string
                IsActive:
                  type: boolean
                Url:
                  type: string
                Version:
                  type: integer
                  format: int32
                Desc:
                  type: string
                Summary:
                  type: string
                file:
                  type: string
                  format: binary
            encoding:
              Name:
                style: form
              IsActive:
                style: form
              Url:
                style: form
              Version:
                style: form
              Desc:
                style: form
              Summary:
                style: form
              file:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppealFileQueryIEnumerableAppealFileUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/AppealFileQueryIEnumerableAppealFileUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/AppealFileQueryIEnumerableAppealFileUpdateApiResponseObject'
  /AppealFiles/{id}/UpdateActivate:
    post:
      tags:
        - AppealFiles
      summary: Update appeal file active.
      parameters:
        - name: id
          in: path
          description: Appeal file id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppealFileUpdateActive'
          text/json:
            schema:
              $ref: '#/components/schemas/AppealFileUpdateActive'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AppealFileUpdateActive'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppealFileQueryIEnumerableAppealFileUpdateActiveApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/AppealFileQueryIEnumerableAppealFileUpdateActiveApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/AppealFileQueryIEnumerableAppealFileUpdateActiveApiResponseObject'
  /Banners:
    get:
      tags:
        - Banners
      summary: Gets all banners.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BannerQueryIEnumerableStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BannerQueryIEnumerableStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BannerQueryIEnumerableStringApiResponseObject'
    post:
      tags:
        - Banners
      summary: Add new banner.
      requestBody:
        description: The model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BannerCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/BannerCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BannerCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BannerQueryBannerCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BannerQueryBannerCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BannerQueryBannerCreateApiResponseObject'
  /Banners/{id}:
    get:
      tags:
        - Banners
      summary: Get banner by id.
      parameters:
        - name: id
          in: path
          description: Banner id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BannerQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BannerQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BannerQueryStringApiResponseObject'
    put:
      tags:
        - Banners
      summary: Update banner by id.
      parameters:
        - name: id
          in: path
          description: Banner id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BannerUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/BannerUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BannerUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BannerQueryBannerUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BannerQueryBannerUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BannerQueryBannerUpdateApiResponseObject'
    delete:
      tags:
        - Banners
      summary: Delete banner by id.
      parameters:
        - name: id
          in: path
          description: Banner id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Banners/UpdateStatus/{id}:
    put:
      tags:
        - Banners
      summary: Update banner status.
      parameters:
        - name: id
          in: path
          description: Banner id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BannerUpdateStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/BannerUpdateStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BannerUpdateStatus'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BannerUpdateStatusBannerUpdateStatusApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BannerUpdateStatusBannerUpdateStatusApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BannerUpdateStatusBannerUpdateStatusApiResponseObject'
  /BinNumbers:
    get:
      tags:
        - BinNumbers
      summary: List all bin numbers.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BinNumberQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BinNumberQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BinNumberQueryListStringApiResponseObject'
    post:
      tags:
        - BinNumbers
      summary: Create a new bin number.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BinNumberCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/BinNumberCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BinNumberCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BinNumberQueryBinNumberCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BinNumberQueryBinNumberCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BinNumberQueryBinNumberCreateApiResponseObject'
  /BinNumbers/{id}:
    get:
      tags:
        - BinNumbers
      summary: Get specific bin number.
      parameters:
        - name: id
          in: path
          description: Bin number id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BinNumberQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BinNumberQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BinNumberQueryStringApiResponseObject'
    put:
      tags:
        - BinNumbers
      summary: Update specific bin number.
      parameters:
        - name: id
          in: path
          description: Bin number id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BinNumberUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/BinNumberUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BinNumberUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BinNumberQueryBinNumberUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BinNumberQueryBinNumberUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BinNumberQueryBinNumberUpdateApiResponseObject'
    delete:
      tags:
        - BinNumbers
      summary: Delete specific bin number by id.
      parameters:
        - name: id
          in: path
          description: Bin number id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Brands:
    get:
      tags:
        - Brands
      summary: Gets brand list.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BrandQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BrandQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BrandQueryListStringApiResponseObject'
    post:
      tags:
        - Brands
      summary: Create a new Brand.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/BrandCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BrandCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BrandQueryBrandCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BrandQueryBrandCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BrandQueryBrandCreateApiResponseObject'
  /Brands/{id}:
    get:
      tags:
        - Brands
      summary: Get specific brand by id.
      parameters:
        - name: id
          in: path
          description: Brand id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BrandQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BrandQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BrandQueryStringApiResponseObject'
    put:
      tags:
        - Brands
      summary: Update specific brand by id.
      parameters:
        - name: id
          in: path
          description: Brand id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/BrandUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BrandUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BrandQueryBrandUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BrandQueryBrandUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BrandQueryBrandUpdateApiResponseObject'
    delete:
      tags:
        - Brands
      summary: Delete specific brand by id.
      parameters:
        - name: id
          in: path
          description: Brand id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Cargoes/GetCargoLink/{cargoCompany}:
    get:
      tags:
        - Cargoes
      summary: Bir kargo firmasına ait kargo takip linkini döner. Sonuna takip numarası ekleyinde kargo takip linki oluşur.
      parameters:
        - name: cargoCompany
          in: path
          description: Cargo Company enum id.
          required: true
          schema:
            enum:
              - YUTRICI = 1
              - ARAS = 2
              - MNG = 3
              - SURAT = 4
              - PTT = 5
              - UPS = 6
              - HOROZ = 7
              - CEVA = 8
              - BORUSAN = 9
              - FILLO = 10
              - TNT = 11
              - DHL = 12
              - InterGlobal = 13
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CargoViewModelCargoCompanyApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CargoViewModelCargoCompanyApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CargoViewModelCargoCompanyApiResponseObject'
  /Cargoes/GetCargoCompanies:
    get:
      tags:
        - Cargoes
      summary: Sistemde tanımlı kargo firmaları listesini döner
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CargoSettingsListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CargoSettingsListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CargoSettingsListStringApiResponseObject'
  /CargoPrices:
    get:
      tags:
        - CargoPrices
      summary: Gets cargo prices.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CargoPriceModelListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CargoPriceModelListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CargoPriceModelListStringApiResponseObject'
    post:
      tags:
        - CargoPrices
      summary: Create a new Cart.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CargoPriceCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/CargoPriceCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CargoPriceCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CargoPriceModelCargoPriceCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CargoPriceModelCargoPriceCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CargoPriceModelCargoPriceCreateApiResponseObject'
  /CargoPrices/GetById/{id}:
    get:
      tags:
        - CargoPrices
      summary: Gets the cargo price by identifier.
      parameters:
        - name: id
          in: path
          description: The cargo price id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CargoPriceModelStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CargoPriceModelStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CargoPriceModelStringApiResponseObject'
  /CargoPrices/GetByDesi/{desi}:
    get:
      tags:
        - CargoPrices
      summary: Gets the cargo price by desi.
      parameters:
        - name: desi
          in: path
          description: The desi.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CargoPriceModelStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CargoPriceModelStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CargoPriceModelStringApiResponseObject'
  /CargoPrices/{id}/UpdateCargoPrice:
    put:
      tags:
        - CargoPrices
      summary: Updates the cargo price.
      parameters:
        - name: id
          in: path
          description: Cargo price id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CargoPriceUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/CargoPriceUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CargoPriceUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanCargoPriceUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanCargoPriceUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanCargoPriceUpdateApiResponseObject'
  /CargoPrices/{id}:
    delete:
      tags:
        - CargoPrices
      summary: Delete specific Cart.
      parameters:
        - name: id
          in: path
          description: Cargo price id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Int64StringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/Int64StringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/Int64StringApiResponseObject'
  /Carts:
    get:
      tags:
        - Carts
      summary: Get specific Cart.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CartQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CartQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CartQueryStringApiResponseObject'
    post:
      tags:
        - Carts
      summary: Create a new Cart.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/CartCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CartCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CartQueryCartCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CartQueryCartCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CartQueryCartCreateApiResponseObject'
  /Carts/ProductParametersFileUpload:
    post:
      tags:
        - Carts
      summary: Products the parameters file upload.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
            encoding:
              file:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CartProductParametersResponseModelStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CartProductParametersResponseModelStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CartProductParametersResponseModelStringApiResponseObject'
  /Carts/GetCargoPrice:
    post:
      tags:
        - Carts
      summary: Gets the cargo price.
      requestBody:
        description: The request.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CargoPriceQueryModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CargoPriceQueryModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CargoPriceQueryModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CargoPriceResponseModelCargoPriceQueryModelListApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CargoPriceResponseModelCargoPriceQueryModelListApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CargoPriceResponseModelCargoPriceQueryModelListApiResponseObject'
  /Carts/CartItemMerchantChange:
    post:
      tags:
        - Carts
      summary: Aynı lokasyona aynı gün kargo gönderen satıcının ürünü ile değiştirir.
      requestBody:
        description: Cart information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemMerchantChangeModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CartItemMerchantChangeModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CartItemMerchantChangeModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CartQueryCartItemMerchantChangeModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CartQueryCartItemMerchantChangeModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CartQueryCartItemMerchantChangeModelApiResponseObject'
  /Carts/Sync:
    post:
      tags:
        - Carts
      summary: Create a new Carts
      requestBody:
        description: Cart information
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CartCreate'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CartCreate'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CartCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CartResponseListModelCartCreateListApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CartResponseListModelCartCreateListApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CartResponseListModelCartCreateListApiResponseObject'
  /Carts/UpdateCartAmount:
    put:
      tags:
        - Carts
      summary: Update cart amount.
      requestBody:
        description: The model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAmountModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateAmountModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateAmountModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CartQueryUpdateAmountModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CartQueryUpdateAmountModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CartQueryUpdateAmountModelApiResponseObject'
  /Carts/UpdateOrderInfo/{id}:
    put:
      tags:
        - Carts
      summary: Update Order info.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCartOrderInfoModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateCartOrderInfoModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateCartOrderInfoModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CartQueryUpdateCartOrderInfoModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CartQueryUpdateCartOrderInfoModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CartQueryUpdateCartOrderInfoModelApiResponseObject'
  /Carts/CartInstallmentUpdate:
    put:
      tags:
        - Carts
      summary: Sipariş oluşturma öncesi Taksit bilgilerini Update yapıyor.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartInstallmentUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CartInstallmentUpdateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CartInstallmentUpdateRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CartQueryCartInstallmentUpdateRequestApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CartQueryCartInstallmentUpdateRequestApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CartQueryCartInstallmentUpdateRequestApiResponseObject'
  /Carts/CartInstallmentReset:
    put:
      tags:
        - Carts
      summary: Sepetteki taksit alanını resetliyor.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CartQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CartQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CartQueryStringApiResponseObject'
  /Carts/{id}:
    delete:
      tags:
        - Carts
      summary: Delete specific Cart.
      parameters:
        - name: id
          in: path
          description: Cart id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CartQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CartQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CartQueryStringApiResponseObject'
  /Carts/DeleteCartItem/{cartId}/{cartItemId}:
    delete:
      tags:
        - Carts
      summary: Delete specific Cart item.
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
        - name: cartItemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CartQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CartQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CartQueryStringApiResponseObject'
  /Categories:
    get:
      tags:
        - Categories
      summary: Tüm kategorileri döndürür.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CategoryQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryListStringApiResponseObject'
    post:
      tags:
        - Categories
      summary: Create a new category.
      requestBody:
        description: category information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/CategoryCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CategoryCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CategoryQueryCategoryCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryCategoryCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryCategoryCreateApiResponseObject'
  /Categories/GetClean:
    get:
      tags:
        - Categories
      summary: Kategoriler cacheden getirir.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CategoryCleanQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryCleanQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CategoryCleanQueryListStringApiResponseObject'
  /Categories/GetMerchantReadonly:
    get:
      tags:
        - Categories
      summary: List all Categories for merchant.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CategoryMerchantQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryMerchantQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CategoryMerchantQueryListStringApiResponseObject'
  /Categories/{id}:
    get:
      tags:
        - Categories
      summary: Get specific Category.
      parameters:
        - name: id
          in: path
          description: Category id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CategoryQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryListStringApiResponseObject'
    put:
      tags:
        - Categories
      summary: Update specific Category.
      parameters:
        - name: id
          in: path
          description: Category id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/CategoryUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CategoryUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CategoryQueryCategoryUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryCategoryUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryCategoryUpdateApiResponseObject'
    delete:
      tags:
        - Categories
      summary: Delete specific Category.
      parameters:
        - name: id
          in: path
          description: Category id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Categories/GetParentCategories:
    get:
      tags:
        - Categories
      summary: Get only parent category list.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryQuery'
  /Categories/GetChildCategories/{parentCategoryId}:
    get:
      tags:
        - Categories
      summary: Get only child category list.
      parameters:
        - name: parentCategoryId
          in: path
          description: Parent category id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryQuery'
  /Categories/GetParentCategoriesWihtChildCategoryId/{childCategoryId}:
    get:
      tags:
        - Categories
      summary: Get only parent category list with child category id.
      parameters:
        - name: childCategoryId
          in: path
          description: child category id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryQuery'
  /Categories/MultiUpdateRowNumber:
    post:
      tags:
        - Categories
      summary: Category multi update row number.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoryRowNumberUpdate'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoryRowNumberUpdate'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CategoryRowNumberUpdate'
      responses:
        '200':
          description: Success
  /Categories/UpdateLogo:
    post:
      tags:
        - Categories
      summary: Masaütsü logosunu upload ederek kategoriyi update eder.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: string
                file:
                  type: string
                  format: binary
            encoding:
              id:
                style: form
              file:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CategoryQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryStringApiResponseObject'
  /Categories/UpdateMobileLogo:
    post:
      tags:
        - Categories
      summary: Mobil logosunu upload ederek kategoriyi update eder
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: string
                file:
                  type: string
                  format: binary
            encoding:
              id:
                style: form
              file:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CategoryQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryStringApiResponseObject'
  /Categories/UpdateBase/{id}:
    put:
      tags:
        - Categories
      summary: Update specific fields Category.
      parameters:
        - name: id
          in: path
          description: Category id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/CategoryUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CategoryUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CategoryQueryCategoryUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryCategoryUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryCategoryUpdateApiResponseObject'
  /Categories/SetPopularCategory/{id}:
    put:
      tags:
        - Categories
      summary: Set or remove popupler category.
      parameters:
        - name: id
          in: path
          description: Category id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CategoryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CategoryStringApiResponseObject'
  /Categories/SetOpenToProduct/{id}:
    put:
      tags:
        - Categories
      summary: Sets the open to product.
      parameters:
        - name: id
          in: path
          description: Category id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CategoryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CategoryStringApiResponseObject'
  /Categories/SetActivePasiveCategory/{id}:
    put:
      tags:
        - Categories
      summary: set active pasive popupler Category.
      parameters:
        - name: id
          in: path
          description: Category id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CategoryQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CategoryQueryStringApiResponseObject'
  /Categories/UpdateAllSlug:
    put:
      tags:
        - Categories
      summary: Kategoriler için sluglara "-c-Id" değerini ekler.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Categories/UpdateTermDayCount/{count}:
    put:
      tags:
        - Categories
      summary: Kategori taksit adedi değerlerini günceller.
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Categories/UpdateVatRate/{id}/{vatRate}:
    put:
      tags:
        - Categories
      summary: Kategoriye ait ürünlerin kdv oranlarının değiştirilmesi için kullanılıyor.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: vatRate
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringUpdateVatRateModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringUpdateVatRateModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringUpdateVatRateModelApiResponseObject'
  /Categories/UpdateMaxInstallmentCount/{id}:
    put:
      tags:
        - Categories
      summary: Kategoriye ait max taksit tutarını güncelliyor.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaxInstallmentCountUpdateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MaxInstallmentCountUpdateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MaxInstallmentCountUpdateModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringMaxInstallmentCountUpdateModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringMaxInstallmentCountUpdateModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringMaxInstallmentCountUpdateModelApiResponseObject'
  /Feedbacks/SearchAdmin:
    post:
      tags:
        - Feedbacks
      summary: Get specific feedback list for admin.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackFilterModel'
          text/json:
            schema:
              $ref: '#/components/schemas/FeedbackFilterModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FeedbackFilterModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FeedbackQueryListFeedbackFilterModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackQueryListFeedbackFilterModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/FeedbackQueryListFeedbackFilterModelApiResponseObject'
  /Feedbacks/SearchMerchant:
    post:
      tags:
        - Feedbacks
      summary: Get specific feedback list for merchant.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackFilterModel'
          text/json:
            schema:
              $ref: '#/components/schemas/FeedbackFilterModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FeedbackFilterModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FeedbackQueryListFeedbackFilterModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackQueryListFeedbackFilterModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/FeedbackQueryListFeedbackFilterModelApiResponseObject'
  /Feedbacks:
    post:
      tags:
        - Feedbacks
      summary: Create a new Feedback.
      requestBody:
        description: Feedback information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/FeedbackCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FeedbackCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FeedbackQueryFeedbackCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackQueryFeedbackCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/FeedbackQueryFeedbackCreateApiResponseObject'
  /Feedbacks/UpdateState/{id}/{feedbackState}:
    put:
      tags:
        - Feedbacks
      summary: Change feedback state.
      parameters:
        - name: id
          in: path
          description: Feedback id.
          required: true
          schema:
            type: string
        - name: feedbackState
          in: path
          description: feedback state enum.
          required: true
          schema:
            enum:
              - NewRecord = 0
              - UnderReview = 1
              - Completed = 2
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FeedbackQueryFeedbackStateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackQueryFeedbackStateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/FeedbackQueryFeedbackStateApiResponseObject'
  /Feedbacks/{id}:
    delete:
      tags:
        - Feedbacks
      summary: Delete specific feedback.
      parameters:
        - name: id
          in: path
          description: Feedback id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /FileUploads/FileTags:
    get:
      tags:
        - FileUploads
      summary: Kullanıcıya ait dosya etiketleridir.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileTagListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/FileTagListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/FileTagListStringApiResponseObject'
  /FileUploads/GetGallery:
    post:
      tags:
        - FileUploads
      summary: Kullanıcıya ait görsellerin çekilmesini sağlıyor.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetContentRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/GetContentRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetContentRequestModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetGalleryResponseModelGetContentRequestModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/GetGalleryResponseModelGetContentRequestModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/GetGalleryResponseModelGetContentRequestModelApiResponseObject'
  /FileUploads/AddFile:
    post:
      tags:
        - FileUploads
      summary: Satıcı ve admin tarafında kullanılıyor. Veritabanına etiketleri ile birlikte kayıt ediliyor.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                documentName:
                  type: string
                resolution:
                  type: string
                tags:
                  type: string
                uploadedFile:
                  type: string
                  format: binary
            encoding:
              name:
                style: form
              documentName:
                style: form
              resolution:
                style: form
              tags:
                style: form
              uploadedFile:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/FileStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/FileStringApiResponseObject'
  /FileUploads:
    post:
      tags:
        - FileUploads
      summary: Upload gallery item
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                documentName:
                  type: string
                name:
                  type: string
                files:
                  type: array
                  items:
                    type: string
                    format: binary
            encoding:
              documentName:
                style: form
              name:
                style: form
              files:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringListStringApiResponseObject'
  /FileUploads/UploadWithType:
    post:
      tags:
        - FileUploads
      parameters:
        - name: type
          in: query
          schema:
            enum:
              - MerchantFile = 1
              - Product = 2
              - Category = 3
              - Membercontracts = 4
              - Merchantcontracts = 5
              - Ordercontracts = 6
              - Banners = 7
              - Slides = 8
              - Sitemaps = 9
              - Cimri = 10
              - CategoryMobile = 11
              - ProductComment = 12
              - MerchantExportProducts = 13
              - MerchantImportProducts = 14
              - LeadDatas = 15
              - OrderRefundImages = 16
              - ProductExcels = 17
              - ProductParameters = 18
            type: integer
            format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                files:
                  type: array
                  items:
                    type: string
                    format: binary
            encoding:
              id:
                style: form
              name:
                style: form
              files:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringListStringApiResponseObject'
  /FileUploads/DeleteMerchantImage:
    post:
      tags:
        - FileUploads
      summary: Delete merchant image.
      requestBody:
        description: The model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMerchantImage'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteMerchantImage'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteMerchantImage'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringDeleteMerchantImageApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringDeleteMerchantImageApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringDeleteMerchantImageApiResponseObject'
  /FileUploads/{id}:
    put:
      tags:
        - FileUploads
      summary: Dosyanın güncellenmesini sağlar.
      parameters:
        - name: id
          in: path
          description: The identifier.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/FileUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FileUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FileQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/FileQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/FileQueryListStringApiResponseObject'
  /FileUploads/DeleteFile:
    post:
      tags:
        - FileUploads
      summary: Veritabanından ve Blob storage içerisinden dosyayı siler
      requestBody:
        description: DeleteFileModel model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFileModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteFileModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteFileModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /FixedPageSettings:
    get:
      tags:
        - FixedPageSettings
      summary: List all Fixed Page Settings.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQueryListStringApiResponseObject'
    post:
      tags:
        - FixedPageSettings
      summary: Add new fixed page setting.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FixedPageSettingCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/FixedPageSettingCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FixedPageSettingCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQueryFixedPageSettingCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQueryFixedPageSettingCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQueryFixedPageSettingCreateApiResponseObject'
  /FixedPageSettings/{id}:
    get:
      tags:
        - FixedPageSettings
      summary: Get Fixed Page Setting by id.
      parameters:
        - name: id
          in: path
          description: Fixed Page Setting Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQueryStringApiResponseObject'
    put:
      tags:
        - FixedPageSettings
      summary: Update Fixed page setting by id.
      parameters:
        - name: id
          in: path
          description: Fixed page setting id
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FixedPageSettingUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/FixedPageSettingUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FixedPageSettingUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQueryFixedPageSettingUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQueryFixedPageSettingUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQueryFixedPageSettingUpdateApiResponseObject'
    delete:
      tags:
        - FixedPageSettings
      summary: Delete fixed page setting by id.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /FixedPageSettings/GetWithName/{name}:
    get:
      tags:
        - FixedPageSettings
      summary: isim ile sabit sayfa detayını getirir
      parameters:
        - name: name
          in: path
          description: Fixed Page Setting Name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQueryStringApiResponseObject'
  /GiftVouchers:
    get:
      tags:
        - GiftVouchers
      summary: Tüm Hediye kuponları.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GiftVoucherQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/GiftVoucherQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/GiftVoucherQueryListStringApiResponseObject'
  /GiftVouchers/{id}:
    get:
      tags:
        - GiftVouchers
      summary: Gets the specified identifier.
      parameters:
        - name: id
          in: path
          description: The identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GiftVoucherQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/GiftVoucherQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/GiftVoucherQueryStringApiResponseObject'
    post:
      tags:
        - GiftVouchers
      summary: Lead Data bilgilerine göre Hediye kuponu oluşturuluyor.
      parameters:
        - name: id
          in: path
          description: Lead Data id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiftVoucherCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/GiftVoucherCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GiftVoucherCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringListGiftVoucherCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringListGiftVoucherCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringListGiftVoucherCreateApiResponseObject'
    put:
      tags:
        - GiftVouchers
      summary: Hediye kuponu güncelleme.
      parameters:
        - name: id
          in: path
          description: The identifier.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiftVoucherUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/GiftVoucherUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GiftVoucherUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringGiftVoucherUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringGiftVoucherUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringGiftVoucherUpdateApiResponseObject'
  /GiftVouchers/MemberGiftVouchers:
    get:
      tags:
        - GiftVouchers
      summary: Tüm Hediye kuponları döndürür.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GiftVoucherQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/GiftVoucherQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/GiftVoucherQueryListStringApiResponseObject'
  /Init/Stop:
    get:
      tags:
        - Init
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /Init/Start:
    get:
      tags:
        - Init
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /Integration/GenerateToken:
    post:
      tags:
        - Integration
      summary: Entegrasyon api'sini kullanmak için bir token oluşturma işlemini yapar. Dönen token ile entegrasyon apilerine istek gönderilebilir.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Integration/SetWebhookEndPoint:
    post:
      tags:
        - Integration
      summary: Entegrasyon api'sini kullanmak için bir token oluşturma işlemini yapar. Dönen token ile entegrasyon apilerine istek gönderilebilir.
      requestBody:
        description: The model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegratorSetWebhookEndPointModel'
          text/json:
            schema:
              $ref: '#/components/schemas/IntegratorSetWebhookEndPointModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IntegratorSetWebhookEndPointModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringIntegratorSetWebhookEndPointModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringIntegratorSetWebhookEndPointModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringIntegratorSetWebhookEndPointModelApiResponseObject'
  /Integration/UpdateOnSale:
    put:
      tags:
        - Integration
      summary: Bir ürünü Satış açıp-kapama işlemini yapar. Gönderilen ürün eğer satışta ise satıştan çıkartır, satışta değilse satışa alarak update eder. Parametre olarak güncellemek istediğiniz Urün Id ve Varyant Id değerlerini liste halinde gönderebilirsiniz.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IntegratorUpdateOnSaleViewModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IntegratorUpdateOnSaleViewModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IntegratorUpdateOnSaleViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Integration/UpdatePrice:
    post:
      tags:
        - Integration
      summary: Bir ürünün satış fiyatı günceller. Parametre olarak güncellemek istediğiniz Urün Id ve Varyant Id değerlerini liste halinde gönderebilirsiniz.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IntegratorUpdatePriceViewModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IntegratorUpdatePriceViewModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IntegratorUpdatePriceViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Integration/UpdateStockAmount:
    post:
      tags:
        - Integration
      summary: Bir ürünün stok miktarını günceller. Parametre olarak güncellemek istediğiniz Urün Id ve Varyant Id değerlerini liste halinde gönderebilirsiniz.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IntegratorUpdateStockAmountViewModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IntegratorUpdateStockAmountViewModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IntegratorUpdateStockAmountViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Integration/UpdatePriceAndStockAmount:
    post:
      tags:
        - Integration
      summary: Bir ürünün stok miktarını ve fiyatını günceller. Parametre olarak güncellemek istediğiniz Urün Id ve Varyant Id değerlerini liste halinde gönderebilirsiniz.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IntegratorUpdatePriceAndStockAmountViewModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IntegratorUpdatePriceAndStockAmountViewModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IntegratorUpdatePriceAndStockAmountViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Integration/SearchProduct:
    post:
      tags:
        - Integration
      summary: Kataloğunuzda bulunan ürünlerin listesini döner. Filtre parametrelerini kullanarak ürün arama yapabilirsiniz. Query parametresine ürün adını, barkodunu veya adını göndererek filtre uygulayabilirsiniz.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductListOptionFilterViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductListOptionFilterViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductListOptionFilterViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantProductListOptionResultViewModelListProductListOptionFilterViewModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantProductListOptionResultViewModelListProductListOptionFilterViewModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantProductListOptionResultViewModelListProductListOptionFilterViewModelApiResponseObject'
  /Integration/SearchProductCatalogue:
    post:
      tags:
        - Integration
      summary: Website kataloğunda ürün aramak için kullanılır.
      parameters:
        - name: query
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductQueryPagingDataViewModelListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductQueryPagingDataViewModelListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductQueryPagingDataViewModelListStringApiResponseObject'
  /Integration/AddProductCatalogue:
    post:
      tags:
        - Integration
      summary: Katalogdan bulduğunuz bir ürünü kendi kataloğuna eklemek için kullanılır. SearchProductCatalogue metodu ile bulduğunuz ürünleri varyantları ile bu metoda göndererek kataloğunuza ekleyebilirsiniz. Fiyatını, kargoya veriliiş süresi, stok kodu gibi bilgileri gönderebilirsiniz.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantProductCreateForIntegration'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantProductCreateForIntegration'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantProductCreateForIntegration'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryMerchantProductCreateForIntegrationApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryMerchantProductCreateForIntegrationApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryMerchantProductCreateForIntegrationApiResponseObject'
  /Integration/AddNewProduct:
    post:
      tags:
        - Integration
      summary: website kataloğunda olmayan bir ürünü, website kataloğuna ekleme işlemini yapar. Eklenen ürünlerin website tarafından onaylanması gerekir. Onaylanmayan ürünleri kataloğunuza ekleyemezsiniz. Maksimum 50 ürün gönderebilirsiniz.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IntegratorNewProduct'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IntegratorNewProduct'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IntegratorNewProduct'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IntegratorNewProductResultModelListIntegratorNewProductListApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratorNewProductResultModelListIntegratorNewProductListApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/IntegratorNewProductResultModelListIntegratorNewProductListApiResponseObject'
  /Integration/OrderList:
    post:
      tags:
        - Integration
      summary: website.com üzerinden almış olduğunuz siparişlerin listesini geriye döner. Filtre verilerini doldurarak sipariş listesinde arama yapabilirsiniz.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegratorOrderFilterRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/IntegratorOrderFilterRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IntegratorOrderFilterRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderQueryListIntegratorOrderFilterRequestApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderQueryListIntegratorOrderFilterRequestApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/OrderQueryListIntegratorOrderFilterRequestApiResponseObject'
  /IntegrationDocs:
    get:
      tags:
        - IntegrationDocs
      summary: List all integration docs.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IntegrationDocQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationDocQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/IntegrationDocQueryListStringApiResponseObject'
    post:
      tags:
        - IntegrationDocs
      summary: Add IntegrationDoc
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationDocCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/IntegrationDocCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IntegrationDocCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IntegrationDocQueryIntegrationDocCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationDocQueryIntegrationDocCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/IntegrationDocQueryIntegrationDocCreateApiResponseObject'
  /IntegrationDocs/GetOnlyActiveDocs:
    get:
      tags:
        - IntegrationDocs
      summary: List only active integration docs.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IntegrationDocQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationDocQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/IntegrationDocQueryListStringApiResponseObject'
  /IntegrationDocs/{id}:
    get:
      tags:
        - IntegrationDocs
      summary: Get integration doc by id.
      parameters:
        - name: id
          in: path
          description: Entegrasyon dokümanı id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IntegrationDocQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationDocQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/IntegrationDocQueryStringApiResponseObject'
    put:
      tags:
        - IntegrationDocs
      summary: Update integration doc.
      parameters:
        - name: id
          in: path
          description: Integration doc id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationDocUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/IntegrationDocUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IntegrationDocUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IntegrationDocQueryIntegrationDocUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationDocQueryIntegrationDocUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/IntegrationDocQueryIntegrationDocUpdateApiResponseObject'
    delete:
      tags:
        - IntegrationDocs
      summary: Delete integration doc by id.
      parameters:
        - name: id
          in: path
          description: Integration doc id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /IntegrationDocs/UpdateStatus/{id}:
    put:
      tags:
        - IntegrationDocs
      summary: Update Entegrasyon dokümanı durumu.
      parameters:
        - name: id
          in: path
          description: Integration doc id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationDocUpdateStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/IntegrationDocUpdateStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IntegrationDocUpdateStatus'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IntegrationDocUpdateStatusIntegrationDocUpdateStatusApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationDocUpdateStatusIntegrationDocUpdateStatusApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/IntegrationDocUpdateStatusIntegrationDocUpdateStatusApiResponseObject'
  /LeadDatas:
    get:
      tags:
        - LeadDatas
      summary: Tüm lead datalar.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LeadDataQueryListEmptyResultApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/LeadDataQueryListEmptyResultApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/LeadDataQueryListEmptyResultApiResponseObject'
    post:
      tags:
        - LeadDatas
      summary: Create a new lead.
      requestBody:
        description: Lead data information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadDataCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/LeadDataCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LeadDataCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LeadDataQueryLeadDataCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/LeadDataQueryLeadDataCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/LeadDataQueryLeadDataCreateApiResponseObject'
  /LeadDatas/{id}:
    get:
      tags:
        - LeadDatas
      summary: Id'ye göre lead data döndürür.
      parameters:
        - name: id
          in: path
          description: Lead data id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LeadDataQueryEmptyResultApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/LeadDataQueryEmptyResultApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/LeadDataQueryEmptyResultApiResponseObject'
    put:
      tags:
        - LeadDatas
      summary: Lead data bilgilerini günceller.
      parameters:
        - name: id
          in: path
          description: Lead data id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadDataUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/LeadDataUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LeadDataUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LeadDataQueryLeadDataUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/LeadDataQueryLeadDataUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/LeadDataQueryLeadDataUpdateApiResponseObject'
  /LeadDatas/ExportDatas:
    get:
      tags:
        - LeadDatas
      summary: Lead data excel export.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: string
                format: binary
            text/json:
              schema:
                type: string
                format: binary
  /LeadDatas/CreateAccount/{id}:
    post:
      tags:
        - LeadDatas
      summary: Lead Data bilgilerine göre yeni Member oluşturulması.
      parameters:
        - name: id
          in: path
          description: Lead data id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberQueryStringApiResponseObject'
  /Locations:
    get:
      tags:
        - Locations
      summary: Gets location list.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LocationQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/LocationQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/LocationQueryListStringApiResponseObject'
    post:
      tags:
        - Locations
      summary: Add new location.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/LocationCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LocationCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LocationQueryLocationCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/LocationQueryLocationCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/LocationQueryLocationCreateApiResponseObject'
  /Locations/{id}:
    get:
      tags:
        - Locations
      summary: Get location by id.
      parameters:
        - name: id
          in: path
          description: Location id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LocationQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/LocationQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/LocationQueryStringApiResponseObject'
    put:
      tags:
        - Locations
      summary: Update the location by specified identifier.
      parameters:
        - name: id
          in: path
          description: The location id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/LocationUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LocationUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LocationQueryLocationUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/LocationQueryLocationUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/LocationQueryLocationUpdateApiResponseObject'
    delete:
      tags:
        - Locations
      summary: Deletes the location by specified identifier.
      parameters:
        - name: id
          in: path
          description: The identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Logs/GetLogs/{pageNumber}/{pageSize}:
    post:
      tags:
        - Logs
      summary: Gets the logs.
      parameters:
        - name: pageNumber
          in: path
          description: The page number.
          required: true
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: path
          description: Size of the page.
          required: true
          schema:
            type: integer
            format: int32
            default: 50
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogSelectFilterViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LogSelectFilterViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LogSelectFilterViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LogViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/LogViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/LogViewModel'
  /Logs:
    post:
      tags:
        - Logs
      summary: Create a new Log record
      parameters:
        - name: secretKey
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/LogCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LogCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LogLogCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/LogLogCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/LogLogCreateApiResponseObject'
  /Members:
    get:
      tags:
        - Members
      summary: List all Members.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberQueryListStringApiResponseObject'
    post:
      tags:
        - Members
      summary: Create a new Member
      requestBody:
        description: Member information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/MemberCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MemberCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberQueryMemberCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberQueryMemberCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberQueryMemberCreateApiResponseObject'
  /Members/GetById:
    get:
      tags:
        - Members
      summary: Get specific Member.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberQueryStringApiResponseObject'
  /Members/GetAddresses:
    get:
      tags:
        - Members
      summary: Member addresses.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AddressQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/AddressQueryListStringApiResponseObject'
  /Members/GetAddressesWithDistrict:
    get:
      tags:
        - Members
      summary: Get Member addresses with District.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AddressWebQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressWebQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/AddressWebQueryListStringApiResponseObject'
  /Members/GetFavorites:
    get:
      tags:
        - Members
      summary: Member get favorite products.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomUserProductQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserProductQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomUserProductQueryListStringApiResponseObject'
  /Members/GetStockAlarms:
    get:
      tags:
        - Members
      summary: Member get stock alarms products.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomUserProductQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserProductQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomUserProductQueryListStringApiResponseObject'
  /Members/GetStockAlarmWithProduct/{productId}:
    get:
      tags:
        - Members
      summary: Üye ve ürüne ait stok alarmı.
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomUserProductQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserProductQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomUserProductQueryListStringApiResponseObject'
  /Members/GetFavoritesMerchant:
    get:
      tags:
        - Members
      summary: Member get favorite products.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomUserMerchantQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserMerchantQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomUserMerchantQueryListStringApiResponseObject'
  /Members/GetPriceAlarms:
    get:
      tags:
        - Members
      summary: Member get stock alarms products.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomUserProductQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserProductQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomUserProductQueryListStringApiResponseObject'
  /Members/AddRemoveFavorite/{productId}/{variantId}:
    post:
      tags:
        - Members
      summary: Add favorite prodcut.
      parameters:
        - name: productId
          in: path
          description: product id.
          required: true
          schema:
            type: string
        - name: variantId
          in: path
          description: varyantid.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
  /Members/AddRemoveStockAlarm/{productId}/{variantId}:
    post:
      tags:
        - Members
      summary: Add favorite prodcut.
      parameters:
        - name: productId
          in: path
          description: product id.
          required: true
          schema:
            type: string
        - name: variantId
          in: path
          description: varyantid.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
  /Members/AddOrUpdatePriceAlarm/{productId}/{variantId}:
    post:
      tags:
        - Members
      summary: Add price alarm prodcut.
      parameters:
        - name: productId
          in: path
          description: product id.
          required: true
          schema:
            type: string
        - name: variantId
          in: path
          description: varyantid.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserProductPriceAlarmMember'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomUserProductPriceAlarmMember'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomUserProductPriceAlarmMember'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
  /Members/DeletePriceAlarm/{id}:
    delete:
      tags:
        - Members
      summary: Delete price alarm prodcut.
      parameters:
        - name: id
          in: path
          description: custom user alarm id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
  /Members/AddRemoveFavoriteMerchant/{merchantId}:
    post:
      tags:
        - Members
      summary: Add favorite merchant.
      parameters:
        - name: merchantId
          in: path
          description: merchant id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
  /Members/GetProductAlarms:
    post:
      tags:
        - Members
      summary: Kullanıcının, ürün için belirlediği ( favori ürün, stok kontrolü ve fiyat alarmı bilgilerini döndürür)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomProductAlarmsRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomProductAlarmsRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomProductAlarmsRequestModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomProductAlarmsResponseModelStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomProductAlarmsResponseModelStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomProductAlarmsResponseModelStringApiResponseObject'
  /Members/{id}:
    put:
      tags:
        - Members
      summary: Update specific Member.
      parameters:
        - name: id
          in: path
          description: Member id.
          required: true
          schema:
            type: string
      requestBody:
        description: Member model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/MemberUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MemberUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberQueryMemberUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberQueryMemberUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberQueryMemberUpdateApiResponseObject'
    delete:
      tags:
        - Members
      summary: Delete specific Member.
      parameters:
        - name: id
          in: path
          description: Member id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Members/UpdatePassword:
    put:
      tags:
        - Members
      summary: Update member password.
      requestBody:
        description: UserUpdatePassword model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberUpdatePassword'
          text/json:
            schema:
              $ref: '#/components/schemas/MemberUpdatePassword'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MemberUpdatePassword'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberQueryMemberUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberQueryMemberUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberQueryMemberUpdateApiResponseObject'
  /Members/CreateAddress:
    put:
      tags:
        - Members
      summary: Member add new address.
      requestBody:
        description: AddressCreate model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/AddressCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddressCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberQueryAddressCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberQueryAddressCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberQueryAddressCreateApiResponseObject'
  /Members/UpdateAddress/{addressId}:
    put:
      tags:
        - Members
      summary: Member update an address.
      parameters:
        - name: addressId
          in: path
          description: Address id.
          required: true
          schema:
            type: string
      requestBody:
        description: AddressUpdate model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/AddressUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddressUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberQueryAddressUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberQueryAddressUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberQueryAddressUpdateApiResponseObject'
  /Members/MakeDefaultAddress/{addressId}:
    put:
      tags:
        - Members
      summary: Make Default Address.
      parameters:
        - name: addressId
          in: path
          description: Address id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberQueryStringApiResponseObject'
  /Members/RemoveAddress/{addressId}:
    put:
      tags:
        - Members
      summary: Member remove an address.
      parameters:
        - name: addressId
          in: path
          description: Address id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberQueryStringApiResponseObject'
  /MerchantAppeals:
    get:
      tags:
        - MerchantAppeals
      summary: List all merchant appeals.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryIEnumerableStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryIEnumerableStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryIEnumerableStringApiResponseObject'
    post:
      tags:
        - MerchantAppeals
      summary: Create a new merchant
      requestBody:
        description: Merchant information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantAppealCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealCreateApiResponseObject'
  /MerchantAppeals/getMerchantAppeals:
    get:
      tags:
        - MerchantAppeals
      summary: List all merchant appeals with paging
      parameters:
        - name: query
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealsWithPagingResponseModelStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealsWithPagingResponseModelStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealsWithPagingResponseModelStringApiResponseObject'
  /MerchantAppeals/{id}:
    get:
      tags:
        - MerchantAppeals
      summary: Get specific merchant appeal.
      parameters:
        - name: id
          in: path
          description: Appeal id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryStringApiResponseObject'
    delete:
      tags:
        - MerchantAppeals
      summary: Delete specific merchant.
      parameters:
        - name: id
          in: path
          description: Merchant id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /MerchantAppeals/GetByMerchantId/{merchantId}:
    get:
      tags:
        - MerchantAppeals
      summary: Get appeal of a merchant.
      parameters:
        - name: merchantId
          in: path
          description: Merchant id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryStringApiResponseObject'
  /MerchantAppeals/GetUnReadMessagesCount:
    get:
      tags:
        - MerchantAppeals
      summary: Okunmamış mesajların sayısı
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Int32StringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/Int32StringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/Int32StringApiResponseObject'
  /MerchantAppeals/{id}/UpdateStatus:
    post:
      tags:
        - MerchantAppeals
      summary: Change merchant appeal and merchant status.
      parameters:
        - name: id
          in: path
          description: Merchant appeal id.
          required: true
          schema:
            type: string
      requestBody:
        description: MerchantAppealStatusUpdate model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealStatusUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealStatusUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantAppealStatusUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealStatusUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealStatusUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealStatusUpdateApiResponseObject'
  /MerchantAppeals/{id}/UpdateMembership:
    post:
      tags:
        - MerchantAppeals
      summary: Change merchant appeal membership.
      parameters:
        - name: id
          in: path
          description: Merchant appeal id.
          required: true
          schema:
            type: string
      requestBody:
        description: MerchantAppealMembershipUpdate model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealMembershipUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealMembershipUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantAppealMembershipUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealMembershipUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealMembershipUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealMembershipUpdateApiResponseObject'
  /MerchantAppeals/{id}/UpdateCompany:
    post:
      tags:
        - MerchantAppeals
      summary: Change merchant appeal company.
      parameters:
        - name: id
          in: path
          description: Merchant appeal id.
          required: true
          schema:
            type: string
      requestBody:
        description: MerchantAppealCompanyUpdate model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealCompanyUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealCompanyUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantAppealCompanyUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealCompanyUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealCompanyUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealCompanyUpdateApiResponseObject'
  /MerchantAppeals/{id}/UpdateBank:
    post:
      tags:
        - MerchantAppeals
      summary: Change merchant appeal bank.
      parameters:
        - name: id
          in: path
          description: Merchant appeal id.
          required: true
          schema:
            type: string
      requestBody:
        description: MerchantAppealBankUpdate model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealBankUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealBankUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantAppealBankUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealBankUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealBankUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealBankUpdateApiResponseObject'
  /MerchantAppeals/{id}/UpdateInvoice:
    post:
      tags:
        - MerchantAppeals
      summary: Change merchant appeal invoice.
      parameters:
        - name: id
          in: path
          description: Merchant appeal id.
          required: true
          schema:
            type: string
      requestBody:
        description: MerchantAppealInvoiceUpdate model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealInvoiceUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealInvoiceUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantAppealInvoiceUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealInvoiceUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealInvoiceUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealInvoiceUpdateApiResponseObject'
  /MerchantAppeals/{id}/UpdateTax:
    post:
      tags:
        - MerchantAppeals
      summary: Change merchant appeal tax.
      parameters:
        - name: id
          in: path
          description: Merchant appeal id.
          required: true
          schema:
            type: string
      requestBody:
        description: MerchantAppealTaxUpdate model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealTaxUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealTaxUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantAppealTaxUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealTaxUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealTaxUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealTaxUpdateApiResponseObject'
  /MerchantAppeals/{id}/UpdateSignatory:
    post:
      tags:
        - MerchantAppeals
      summary: Change merchant appeal signatory.
      parameters:
        - name: id
          in: path
          description: Merchant id.
          required: true
          schema:
            type: string
      requestBody:
        description: MerchantAppealSignatoryUpdate model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealSignatoryUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealSignatoryUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantAppealSignatoryUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealSignatoryUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealSignatoryUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealSignatoryUpdateApiResponseObject'
  /MerchantAppeals/MerchantAppealEmailControl:
    post:
      tags:
        - MerchantAppeals
      summary: Satıcı Email kontrolü.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantEmailModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantEmailModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantEmailModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanMerchantEmailModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanMerchantEmailModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanMerchantEmailModelApiResponseObject'
  /MerchantAppeals/MerchantAppealEmailControlForUpdate:
    post:
      tags:
        - MerchantAppeals
      summary: Satıcı Email kontrolü
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantEmailModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantEmailModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantEmailModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanMerchantEmailModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanMerchantEmailModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanMerchantEmailModelApiResponseObject'
  /MerchantAppeals/MerchantAppealSlugControl/{slug}:
    post:
      tags:
        - MerchantAppeals
      summary: Satıcı Slug kontrolü
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
  /MerchantAppeals/MerchantAppealSlugControlForUpdate/{slug}:
    post:
      tags:
        - MerchantAppeals
      summary: Satıcı Slug kontrolü
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
  /MerchantAppeals/MerchantAppealMaazaNameControl/{maazaName}:
    post:
      tags:
        - MerchantAppeals
      summary: Satıcı MagazaName Kontrolü
      parameters:
        - name: maazaName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
  /MerchantAppeals/MerchantAppealMaazaNameAndSlugControl:
    post:
      tags:
        - MerchantAppeals
      summary: Satıcı MaazaName ve Slug Kontrolü
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaazaNameAndSlugModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MaazaNameAndSlugModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MaazaNameAndSlugModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanMaazaNameAndSlugModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanMaazaNameAndSlugModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanMaazaNameAndSlugModelApiResponseObject'
  /MerchantAppeals/MerchantAppealMaazaNameAndSlugControlForUpdate:
    post:
      tags:
        - MerchantAppeals
      summary: Satıcı MaazaName ve Slug Kontrolü
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaazaNameAndSlugModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MaazaNameAndSlugModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MaazaNameAndSlugModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanMaazaNameAndSlugModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanMaazaNameAndSlugModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanMaazaNameAndSlugModelApiResponseObject'
  /MerchantAppeals/{id}/AddAppealFileFromMerchant:
    post:
      tags:
        - MerchantAppeals
      summary: Add merchant appeal file for admin.
      parameters:
        - name: id
          in: path
          description: Merchant appeal id.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                AppealFileId:
                  type: string
                Urls:
                  type: array
                  items:
                    $ref: '#/components/schemas/MerchantAppealFileUrl'
                StatusFrom:
                  type: string
                Message:
                  type: string
                files:
                  type: array
                  items:
                    type: string
                    format: binary
            encoding:
              AppealFileId:
                style: form
              Urls:
                style: form
              StatusFrom:
                style: form
              Message:
                style: form
              files:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealFileCreateFromMerchantApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealFileCreateFromMerchantApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealFileCreateFromMerchantApiResponseObject'
  /MerchantAppeals/{id}/AddAppealFileFromAdmin:
    post:
      tags:
        - MerchantAppeals
      summary: Add merchant appeal file for admin.
      parameters:
        - name: id
          in: path
          description: Merchant appeal id.
          required: true
          schema:
            type: string
      requestBody:
        description: MerchantAppealFileCreateFromAdmin model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealFileCreateFromAdmin'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealFileCreateFromAdmin'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantAppealFileCreateFromAdmin'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealFileQueryListMerchantAppealFileCreateFromAdminApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealFileQueryListMerchantAppealFileCreateFromAdminApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealFileQueryListMerchantAppealFileCreateFromAdminApiResponseObject'
  /MerchantAppeals/{id}/UpdateAppealFileStatus:
    post:
      tags:
        - MerchantAppeals
      summary: Change merchant appeal file status.
      parameters:
        - name: id
          in: path
          description: Merchant appeal file id.
          required: true
          schema:
            type: string
      requestBody:
        description: MerchantAppealFileStatusUpdate model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealFileStatusUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealFileStatusUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantAppealFileStatusUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealFileStatusUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealFileStatusUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealFileStatusUpdateApiResponseObject'
  /MerchantAppeals/{id}/AddMessage:
    post:
      tags:
        - MerchantAppeals
      summary: Add merchant appeal message.
      parameters:
        - name: id
          in: path
          description: Merchant appeal id.
          required: true
          schema:
            type: string
      requestBody:
        description: MerchantAppealMessageCreate model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealMessageCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealMessageCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantAppealMessageCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealMessageCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealMessageCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantAppealMessageCreateApiResponseObject'
  /MerchantAppeals/ReadMessages/{id}:
    post:
      tags:
        - MerchantAppeals
      summary: Set isRead = true for specified messages
      parameters:
        - name: id
          in: path
          description: Merchant appeal id.
          required: true
          schema:
            type: string
      requestBody:
        description: Message ids.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryStringApiResponseObject'
  /MerchantAppeals/{id}/{fileId}/DeleteAppealFile:
    delete:
      tags:
        - MerchantAppeals
      summary: Başvuru evraklarının tümünü siliyor.
      parameters:
        - name: id
          in: path
          description: Merchant appeal id.
          required: true
          schema:
            type: string
        - name: fileId
          in: path
          description: File id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealFileQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealFileQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealFileQueryListStringApiResponseObject'
  /MerchantAppeals/{id}/DeleteAppealFileUrl:
    post:
      tags:
        - MerchantAppeals
      summary: Başvuru evraklarının sadece gönderilen url'sini siliyor.
      parameters:
        - name: id
          in: path
          description: Merchant appeal id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealDeleteFileUrlModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantAppealDeleteFileUrlModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantAppealDeleteFileUrlModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealFileQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealFileQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealFileQueryListStringApiResponseObject'
  /MerchantPaymentLogs:
    get:
      tags:
        - MerchantPaymentLogs
      summary: Tüm Merchant payment logs
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantPaymentLogQueryListEmptyResultApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantPaymentLogQueryListEmptyResultApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantPaymentLogQueryListEmptyResultApiResponseObject'
  /MerchantPaymentLogs/{orderId}:
    get:
      tags:
        - MerchantPaymentLogs
      summary: Id'ye göre lead data döndürür.
      parameters:
        - name: orderId
          in: path
          description: Order id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantPaymentLogQueryListEmptyResultApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantPaymentLogQueryListEmptyResultApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantPaymentLogQueryListEmptyResultApiResponseObject'
  /MerchantProductListOptions:
    get:
      tags:
        - MerchantProductListOptions
      summary: List all products.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductQueryListStringApiResponseObject'
    post:
      tags:
        - MerchantProductListOptions
      summary: Posts the specified model.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantProductListOptionCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantProductListOptionCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantProductListOptionCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantProductListOptionQueryMerchantProductListOptionCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantProductListOptionQueryMerchantProductListOptionCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantProductListOptionQueryMerchantProductListOptionCreateApiResponseObject'
  /MerchantProductListOptions/{id}:
    get:
      tags:
        - MerchantProductListOptions
      summary: Get specific product list option.
      parameters:
        - name: id
          in: path
          description: Product list option id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductQueryStringApiResponseObject'
  /MerchantProductListOptions/SearchProduct:
    post:
      tags:
        - MerchantProductListOptions
      summary: Searches the product.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductListOptionFilterViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductListOptionFilterViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductListOptionFilterViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantProductListOptionResultViewModelListProductListOptionFilterViewModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantProductListOptionResultViewModelListProductListOptionFilterViewModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantProductListOptionResultViewModelListProductListOptionFilterViewModelApiResponseObject'
  /MerchantProducts:
    get:
      tags:
        - MerchantProducts
      summary: List all merchant products.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryListStringApiResponseObject'
    post:
      tags:
        - MerchantProducts
      summary: Create a new merchant product
      requestBody:
        description: The model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantProductCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantProductCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantProductCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryMerchantProductCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryMerchantProductCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryMerchantProductCreateApiResponseObject'
  /MerchantProducts/{id}:
    get:
      tags:
        - MerchantProducts
      summary: Get merchant product.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryStringApiResponseObject'
  /MerchantProducts/GetMerchantProducts:
    get:
      tags:
        - MerchantProducts
      summary: List all merchant products from merchant.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryListStringApiResponseObject'
  /MerchantProducts/ExportProducts/{id}:
    get:
      tags:
        - MerchantProducts
      summary: Satıcının ürünlerini dışarı çıkarır
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /MerchantProducts/GetParameters/{merchantId}/{productId}:
    get:
      tags:
        - MerchantProducts
      summary: Gets the parameters.
      parameters:
        - name: merchantId
          in: path
          description: The merchant identifier.
          required: true
          schema:
            type: string
        - name: productId
          in: path
          description: The product identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductParameterListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductParameterListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductParameterListStringApiResponseObject'
  /MerchantProducts/{id}/AddVariant:
    post:
      tags:
        - MerchantProducts
      summary: Adds the variant.
      parameters:
        - name: id
          in: path
          description: The identifier.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantProductVariantCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantProductVariantCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantProductVariantCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryMerchantProductVariantCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryMerchantProductVariantCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantProductQueryMerchantProductVariantCreateApiResponseObject'
  /MerchantProducts/AddParameter:
    post:
      tags:
        - MerchantProducts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantProductParameterCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantProductParameterCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantProductParameterCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanMerchantProductParameterCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanMerchantProductParameterCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanMerchantProductParameterCreateApiResponseObject'
  /MerchantProducts/UpdateProductFeature:
    post:
      tags:
        - MerchantProducts
      summary: Updates the product feature.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantProductListOptionResultViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantProductListOptionResultViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantProductListOptionResultViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanMerchantProductListOptionResultViewModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanMerchantProductListOptionResultViewModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanMerchantProductListOptionResultViewModelApiResponseObject'
  /MerchantProducts/UpdateOnSale/{productId}/{variantId}:
    post:
      tags:
        - MerchantProducts
      summary: Satış açıp-kapama
      parameters:
        - name: productId
          in: path
          description: Product id.
          required: true
          schema:
            type: string
        - name: variantId
          in: path
          description: Variant id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
  /MerchantProducts/ImportProducts:
    post:
      tags:
        - MerchantProducts
      summary: Satıcıya ait ürünlerin excelden güncellenmesini sağlar.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ContentType:
                  type: string
                ContentDisposition:
                  type: string
                Headers:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      type: string
                Length:
                  type: integer
                  format: int64
                Name:
                  type: string
                FileName:
                  type: string
            encoding:
              ContentType:
                style: form
              ContentDisposition:
                style: form
              Headers:
                style: form
              Length:
                style: form
              Name:
                style: form
              FileName:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /MerchantProducts/{productId}/{variantId}/{merchantId}:
    delete:
      tags:
        - MerchantProducts
      summary: delete a new merchant product
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: variantId
          in: path
          required: true
          schema:
            type: string
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Merchants:
    get:
      tags:
        - Merchants
      summary: List all merchants.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryListStringApiResponseObject'
    post:
      tags:
        - Merchants
      summary: Create a new merchant
      requestBody:
        description: The model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantQueryMerchantCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryMerchantCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryMerchantCreateApiResponseObject'
  /Merchants/{id}:
    get:
      tags:
        - Merchants
      summary: Get specific merchant.
      parameters:
        - name: id
          in: path
          description: Merchant id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryStringApiResponseObject'
    delete:
      tags:
        - Merchants
      summary: Delete specific merchant.
      parameters:
        - name: id
          in: path
          description: Merchant id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Merchants/GetAllApprovedMerchants:
    get:
      tags:
        - Merchants
      summary: Get approved merchants.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetAllApprovedMerchantsOutputStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllApprovedMerchantsOutputStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/GetAllApprovedMerchantsOutputStringApiResponseObject'
  /Merchants/GetGallery/{id}:
    get:
      tags:
        - Merchants
      summary: Gets the gallery image list.
      parameters:
        - name: id
          in: path
          description: The identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringListStringApiResponseObject'
  /Merchants/GetCategories:
    get:
      tags:
        - Merchants
      summary: Get categories in merchant sales product
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CategoryCleanQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryCleanQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/CategoryCleanQueryListStringApiResponseObject'
  /Merchants/ResetPassword:
    get:
      tags:
        - Merchants
      summary: Token kontrolü yapılıyor.
      parameters:
        - name: token
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryStringApiResponseObject'
    post:
      tags:
        - Merchants
      summary: Update Merchant password.
      parameters:
        - name: token
          in: query
          description: ''
          schema:
            type: string
      requestBody:
        description: Merchant model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantUpdatePasswordModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantUpdatePasswordModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantUpdatePasswordModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantQueryMerchantUpdatePasswordModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryMerchantUpdatePasswordModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryMerchantUpdatePasswordModelApiResponseObject'
  /Merchants/PendingAboutUsArticles:
    get:
      tags:
        - Merchants
      summary: Onay bekleyen Hakkımızda yazılarına ait liste
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryStringApiResponseObject'
  /Merchants/ConfirmEmail/{confirmCode}:
    post:
      tags:
        - Merchants
      summary: Confirm email
      parameters:
        - name: confirmCode
          in: path
          description: MerchantAppeal Activation code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryStringApiResponseObject'
  /Merchants/{id}/UpdateStatus:
    post:
      tags:
        - Merchants
      summary: Change merchant status.
      parameters:
        - name: id
          in: path
          description: Merchant id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantStatusUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantStatusUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantStatusUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantStatusQueryMerchantStatusUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantStatusQueryMerchantStatusUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantStatusQueryMerchantStatusUpdateApiResponseObject'
  /Merchants/Login:
    post:
      tags:
        - Merchants
      summary: Merchant Login User
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AuthModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantQueryAuthModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryAuthModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryAuthModelApiResponseObject'
  /Merchants/AddRemovePopularCategory/{categoryId}:
    post:
      tags:
        - Merchants
      summary: Add remove merchant popular categories
      parameters:
        - name: categoryId
          in: path
          description: Category Id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
  /Merchants/SendEmailConfirmMail:
    post:
      tags:
        - Merchants
      summary: Satıcıya email doğrulama linkini tekrar gönderebilmek için eklendi.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailConfirmModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SendEmailConfirmModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendEmailConfirmModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanSendEmailConfirmModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanSendEmailConfirmModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanSendEmailConfirmModelApiResponseObject'
  /Merchants/{id}/UpdateSector:
    post:
      tags:
        - Merchants
      summary: Sektörleri günceller
      parameters:
        - name: id
          in: path
          description: Merchant id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantSectorUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantSectorUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantSectorUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantSectorUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantSectorUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantAppealQueryMerchantSectorUpdateApiResponseObject'
  /Merchants/UpdateProfile/{id}:
    put:
      tags:
        - Merchants
      summary: Update merchant about.
      parameters:
        - name: id
          in: path
          description: Merchant id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantUpdateProfile'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantUpdateProfile'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantUpdateProfile'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanMerchantUpdateProfileApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanMerchantUpdateProfileApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanMerchantUpdateProfileApiResponseObject'
  /Merchants/UpdateMaazaName/{id}:
    put:
      tags:
        - Merchants
      summary: Update Merchant MaazaName
      parameters:
        - name: id
          in: path
          description: Magaza id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantUpdateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantUpdateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantUpdateModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /Merchants/UpdateAbout/{id}:
    put:
      tags:
        - Merchants
      summary: Update merchant about.
      parameters:
        - name: id
          in: path
          description: Merchant id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantNewAbout'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantNewAbout'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantNewAbout'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanMerchantNewAboutApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanMerchantNewAboutApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanMerchantNewAboutApiResponseObject'
  /Merchants/UpdatePassword:
    put:
      tags:
        - Merchants
      summary: Update Merchant password.
      requestBody:
        description: UserUpdatePassword model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantUpdatePasswordModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MerchantUpdatePasswordModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MerchantUpdatePasswordModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantQueryMerchantUpdatePasswordModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryMerchantUpdatePasswordModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantQueryMerchantUpdatePasswordModelApiResponseObject'
  /Merchants/ForgotPassword:
    put:
      tags:
        - Merchants
      summary: Forgot Password.
      requestBody:
        description: User email.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringForgotPasswordModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringForgotPasswordModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringForgotPasswordModelApiResponseObject'
  /Merchants/CancelMerchant/{id}:
    put:
      tags:
        - Merchants
      summary: Başvuru iptali veya hesap kapatma için kullanılır.
      parameters:
        - name: id
          in: path
          description: Merchant id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelMerchantModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CancelMerchantModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CancelMerchantModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Merchants/ChangeIsHide:
    put:
      tags:
        - Merchants
      summary: IsHide değerini true/false yapar
      parameters:
        - name: id
          in: query
          description: Merchant id.
          schema:
            type: string
      requestBody:
        description: Is hide model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IsHideModel'
          text/json:
            schema:
              $ref: '#/components/schemas/IsHideModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IsHideModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /MerchantSameDayDeliveryLocs:
    get:
      tags:
        - MerchantSameDayDeliveryLocs
      summary: Locations list
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantSameDayDeliveryLocQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantSameDayDeliveryLocQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantSameDayDeliveryLocQueryListStringApiResponseObject'
  /MerchantSameDayDeliveryLocs/{id}:
    get:
      tags:
        - MerchantSameDayDeliveryLocs
      summary: Gets the specified identifier.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantSameDayDeliveryLocListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantSameDayDeliveryLocListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantSameDayDeliveryLocListStringApiResponseObject'
  /MerchantSameDayDeliveryLocs/GetMerchantLocations:
    get:
      tags:
        - MerchantSameDayDeliveryLocs
      summary: Gets the merchant locations.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetMerchantLocationsOutputStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/GetMerchantLocationsOutputStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/GetMerchantLocationsOutputStringApiResponseObject'
  /MerchantSameDayDeliveryLocs/{disrictId}:
    post:
      tags:
        - MerchantSameDayDeliveryLocs
      summary: Add Merchant same Day Delivery Location
      parameters:
        - name: disrictId
          in: path
          description: The disrict identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
  /MerchantSameDayDeliveryLocs/MultipleUpdate:
    post:
      tags:
        - MerchantSameDayDeliveryLocs
      summary: Update multiples of disrict.
      requestBody:
        description: The disrict ids.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
          text/json:
            schema:
              type: array
              items:
                type: string
          application/*+json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringListApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringListApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringListApiResponseObject'
  /OrderPayments/{orderId}/GetOrderPaymentDetails:
    get:
      tags:
        - OrderPayments
      summary: Teslim edilen siparişlerin listelenmesi
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderPaymentQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPaymentQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/OrderPaymentQueryListStringApiResponseObject'
  /OrderPayments/GetOrderPaymentsFilter:
    post:
      tags:
        - OrderPayments
      summary: Siparişlerin ödeme adımlarını listeler (Admin portalında ödeme takibi yapılabilmesi)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPaymentsFilterRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderPaymentsFilterRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderPaymentsFilterRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderPaymentsGridVMListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPaymentsGridVMListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/OrderPaymentsGridVMListStringApiResponseObject'
  /Orders/{orderId}/OrderApprove:
    get:
      tags:
        - Orders
      summary: Sipariş onaylama
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /Orders/GetPendingPaymentOrders:
    get:
      tags:
        - Orders
      summary: Onay bekleyenler siparişler
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
  /Orders/GetAprovedOrders:
    get:
      tags:
        - Orders
      summary: Onaylanmış siparişler listelenir. Admin ise hepsi, mağaza ise kendini siparişleri oalnlar
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
  /Orders/GetOrdersShipped:
    get:
      tags:
        - Orders
      summary: Kargolanmış siparişler listelenir. Admin ise hepsi, mağaza ise kendini siparişleri olanlar
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
  /Orders/GetOrdersCancel:
    get:
      tags:
        - Orders
      summary: İptal edilen siparişler listelenir. Admin ise hepsi, mağaza ise kendini siparişleri olanlar
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
  /Orders/GetOrderDeliveries:
    get:
      tags:
        - Orders
      summary: Teslim edilen siparişlerin listelenmesi
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDeliveredGridVM'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDeliveredGridVM'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDeliveredGridVM'
  /Orders/GetWaitingRefunds:
    get:
      tags:
        - Orders
      summary: Bekleyen iade taleplerinin listelenmesi
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RefundDetailQueryOrdersGridVM'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RefundDetailQueryOrdersGridVM'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RefundDetailQueryOrdersGridVM'
  /Orders/GetContestedOrders:
    get:
      tags:
        - Orders
      summary: itilaflı siparişlerin listelenmesi
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RefundDetailQueryOrdersGridVM'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RefundDetailQueryOrdersGridVM'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RefundDetailQueryOrdersGridVM'
  /Orders/GetMerchantRefundAddress/{merchantId}:
    get:
      tags:
        - Orders
      summary: satıcının iade gönderilerinin yapılacağı adres bilgilerini döner
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantRefundAddressQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantRefundAddressQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantRefundAddressQuery'
  /Orders/GetSpeicalRefundOrders:
    get:
      tags:
        - Orders
      summary: Özel iade talepleri yapılan siparişlerin listelenmesi
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderQuery'
  /Orders/SpeicalRefundOrderApproved:
    post:
      tags:
        - Orders
      summary: Özel iade talebi onaylama ve red etme işlemi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDetailSpecialRefundRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderDetailSpecialRefundRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderDetailSpecialRefundRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /Orders/GetMerchantOrders:
    post:
      tags:
        - Orders
      summary: Sipariş durumuna göre listeleme
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMerchantOrderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/GetMerchantOrderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetMerchantOrderRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
  /Orders/SetOrderDelivered:
    post:
      tags:
        - Orders
      summary: Sipariş kalemlerini Teslim Edildi olarak ayarla
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSetDeliveredModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderSetDeliveredModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderSetDeliveredModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            text/json:
              schema:
                $ref: '#/components/schemas/Order'
  /Orders/SetOrderShipped:
    post:
      tags:
        - Orders
      summary: Sipariş kalemlerini Kargoya Verildi olarak ayarla
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSetShippedModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderSetShippedModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderSetShippedModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            text/json:
              schema:
                $ref: '#/components/schemas/Order'
  /Orders/{orderId}/GetOrderAddress:
    post:
      tags:
        - Orders
      summary: Bir siparişin teslimat ve fatura adreslerini listeler
      parameters:
        - name: orderId
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderAddressVM'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAddressVM'
            text/json:
              schema:
                $ref: '#/components/schemas/OrderAddressVM'
  /Orders/{orderId}/GetOrderContracts:
    post:
      tags:
        - Orders
      summary: Bir siparişin kontratlarını listeler
      parameters:
        - name: orderId
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderContractsVM'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderContractsVM'
            text/json:
              schema:
                $ref: '#/components/schemas/OrderContractsVM'
  /Orders/SetOrderDetailDeliver:
    post:
      tags:
        - Orders
      summary: Sipariş detayında teslim edildi olarak güncellenmesi
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDetailRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderDetailRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderDetailRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /Orders/{orderId}/GetOrderDetail:
    post:
      tags:
        - Orders
      summary: Bir siparişin detayını listeler
      parameters:
        - name: orderId
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/OrderQuery'
  /Orders/GetAllOrderFilters:
    post:
      tags:
        - Orders
      summary: filtreleyerek tüm siparişlerin listesini döner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderFilterRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderFilterRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderFilterRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderQuery'
  /Orders/GetOrderFilters:
    post:
      tags:
        - Orders
      summary: Admin panelinde tüm siparişlerin listelenmesi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderFilterRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderFilterRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderFilterRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetaiLightVMOrdersGridVM'
  /Orders/OrderDetailCancel:
    post:
      tags:
        - Orders
      summary: Sipariş içinden bir detayın iptali
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOrderDetailRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CancelOrderDetailRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CancelOrderDetailRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /Orders/OrderCancel:
    post:
      tags:
        - Orders
      summary: Siparişin tamamının iptali. Admn ise hepsini mağaza ise kendi ürünlerini iptal eder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOrderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CancelOrderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CancelOrderRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /Orders/GetCompletedRefunds:
    post:
      tags:
        - Orders
      summary: Tamamlanmış iadelerin filtrelenmesi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletedRefundRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CompletedRefundRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CompletedRefundRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RefundDetailQueryOrdersGridVM'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RefundDetailQueryOrdersGridVM'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RefundDetailQueryOrdersGridVM'
  /Orders/DoRefund:
    post:
      tags:
        - Orders
      summary: Ücret iadesi yap
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDetailRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderDetailRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderDetailRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /Orders/ContestedReport:
    post:
      tags:
        - Orders
      summary: İtilaflı durumun kaydedilmesi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContestedReportRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ContestedReportRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContestedReportRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /Orders/SendMessage:
    post:
      tags:
        - Orders
      summary: Sİpariş detayında mesaj göndermek
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderMessageQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderMessageQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/OrderMessageQuery'
  /Orders/ReadMessages:
    post:
      tags:
        - Orders
      summary: Gönderilen mesajları okundu olarak işaretler. Oturum açan kullanıcının kendi mesajlarını okundu yapmaz
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDetailReadMessageRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderDetailReadMessageRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderDetailReadMessageRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /Orders/GetOrderDetailMessages:
    post:
      tags:
        - Orders
      summary: Sipariş detayına ait olan mesajları listeler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDetailRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderDetailRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderDetailRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderMessageQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderMessageQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderMessageQuery'
  /Orders/MerchantPaymentApproval/{orderId}:
    put:
      tags:
        - Orders
      summary: Merchants the payment approval.
      parameters:
        - name: orderId
          in: path
          description: The order identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /Orders/SetMerchantPaymentDate:
    put:
      tags:
        - Orders
      summary: Sets the merchant payment date.
      requestBody:
        description: The request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderMerchantPaymentRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderMerchantPaymentRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderMerchantPaymentRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderMerchantPaymentRequest'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderMerchantPaymentRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/OrderMerchantPaymentRequest'
  /ProductComments/GetComments/{approveType}:
    post:
      tags:
        - ProductComments
      summary: Tipe göre yorumların listelenmesi. Onay beleyen, onaylanan veya reddedilen
      parameters:
        - name: approveType
          in: path
          required: true
          schema:
            enum:
              - AwaitingApproval = 0
              - Approved = 1
              - Reject = 2
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductCommentVMListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommentVMListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductCommentVMListStringApiResponseObject'
  /ProductComments/CommentApprove:
    post:
      tags:
        - ProductComments
      summary: Yorum onaylama/reddetme
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCommentApproveRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductCommentApproveRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductCommentApproveRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanStringApiResponseObject'
  /ProductCommits:
    get:
      tags:
        - ProductCommits
      summary: List all product commit.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommitResponseModel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommitResponseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommitResponseModel'
    post:
      tags:
        - ProductCommits
      summary: Create a new Product
      requestBody:
        description: Product information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCommitCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductCommitCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductCommitCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommit'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommit'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommit'
  /ProductCommits/GetProductCommitList/{isNotDenied}:
    get:
      tags:
        - ProductCommits
      summary: Get specific Product Commit for Merchant.
      parameters:
        - name: isNotDenied
          in: path
          required: true
          schema:
            type: boolean
        - name: query
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductCommitWithPagingResponseModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommitWithPagingResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductCommitWithPagingResponseModel'
  /ProductCommits/{id}:
    get:
      tags:
        - ProductCommits
      summary: Get specific Product Commit.
      parameters:
        - name: id
          in: path
          description: Product Commit id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
    delete:
      tags:
        - ProductCommits
      summary: Delete specific product commit.
      parameters:
        - name: id
          in: path
          description: Product Commit id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /ProductCommits/{id}/GetMerchantProductCommitList/{isNotDenied}:
    get:
      tags:
        - ProductCommits
      summary: Get specific Product Commit for Merchant.
      parameters:
        - name: id
          in: path
          description: Merchant id.
          required: true
          schema:
            type: string
        - name: isNotDenied
          in: path
          required: true
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommitResponseModel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommitResponseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommitResponseModel'
  /ProductCommits/{id}/GetNotes:
    get:
      tags:
        - ProductCommits
      summary: Update note product commit
      parameters:
        - name: id
          in: path
          description: Product Commit Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
  /ProductCommits/GetNewBarcode:
    get:
      tags:
        - ProductCommits
      summary: create new a unique barcode.
      responses:
        '200':
          description: Success
  /ProductCommits/{id}/UpdateProductCommit:
    post:
      tags:
        - ProductCommits
      summary: Update a Product Commit
      parameters:
        - name: id
          in: path
          description: Product Commit Id
          required: true
          schema:
            type: string
      requestBody:
        description: Product information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCommitUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductCommitUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductCommitUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
  /ProductCommits/{id}/AddMessage:
    post:
      tags:
        - ProductCommits
      summary: Add message product commit
      parameters:
        - name: id
          in: path
          description: Product Commit Id
          required: true
          schema:
            type: string
      requestBody:
        description: ProductMessageCreate model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductMessageCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductMessageCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductMessageCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
  /ProductCommits/{id}/AddAttribute:
    post:
      tags:
        - ProductCommits
      summary: Create a new product commit attributes
      parameters:
        - name: id
          in: path
          description: Product Commit Id
          required: true
          schema:
            type: string
      requestBody:
        description: ProductCommitAttributeCreate information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCommitAttributeCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductCommitAttributeCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductCommitAttributeCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
  /ProductCommits/{id}/AddNoteFromAdmin:
    post:
      tags:
        - ProductCommits
      summary: Add note product commit from admin
      parameters:
        - name: id
          in: path
          description: Product Commit Id
          required: true
          schema:
            type: string
      requestBody:
        description: ProductNoteCreate model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductNoteCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductNoteCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductNoteCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductNoteQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductNoteQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductNoteQuery'
  /ProductCommits/{id}/UpdateNote:
    post:
      tags:
        - ProductCommits
      summary: Update note product commit
      parameters:
        - name: id
          in: path
          description: Product Commit Id
          required: true
          schema:
            type: string
      requestBody:
        description: ProductNoteUpdate model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductNoteUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductNoteUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductNoteUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
  /ProductCommits/{id}/UpdateState:
    post:
      tags:
        - ProductCommits
      summary: Update state product commit
      parameters:
        - name: id
          in: path
          description: Product Commit Id
          required: true
          schema:
            type: string
      requestBody:
        description: ProductCommitStatusUpdate model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCommitStatusUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductCommitStatusUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductCommitStatusUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
  /ProductCommits/{id}/DeleteNote:
    post:
      tags:
        - ProductCommits
      summary: Delete note product commit
      parameters:
        - name: id
          in: path
          description: Product Commit Id
          required: true
          schema:
            type: string
      requestBody:
        description: ProductNoteUpdate model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductNoteUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductNoteUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductNoteUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductCommitQuery'
  /ProductCommits/BarcodeControl:
    post:
      tags:
        - ProductCommits
      summary: control barcode.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BarcodeRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/BarcodeRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BarcodeRequestModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BarcodeControlResponseModel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BarcodeControlResponseModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BarcodeControlResponseModel'
  /ProductCommits/GetSampleProductExcel/{categoryId}:
    get:
      tags:
        - ProductCommits
      summary: Ürün import etmek için kategoriye göre örnek excel oluşturmak için yazıldı.
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /ProductCommits/ImportProductFromExcel/{categoryId}/{merchantId}:
    post:
      tags:
        - ProductCommits
      summary: Excel ile gönderilen ürün ve özelliklerini import etmek için yazıldı.
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
            encoding:
              file:
                style: form
      responses:
        '200':
          description: Success
  /ProductListOptions:
    get:
      tags:
        - ProductListOptions
      summary: List all products.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductListOptionQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListOptionQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductListOptionQueryListStringApiResponseObject'
    post:
      tags:
        - ProductListOptions
      summary: Posts the specified model.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductListOptionCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductListOptionCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductListOptionCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductListOptionQueryProductListOptionCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListOptionQueryProductListOptionCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductListOptionQueryProductListOptionCreateApiResponseObject'
  /ProductListOptions/{id}:
    get:
      tags:
        - ProductListOptions
      summary: Get specific product list option.
      parameters:
        - name: id
          in: path
          description: Product list option id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AppealFileQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/AppealFileQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/AppealFileQueryStringApiResponseObject'
  /ProductListOptions/SearchProduct:
    post:
      tags:
        - ProductListOptions
      summary: Searches the product.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductListOptionFilterViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductListOptionFilterViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductListOptionFilterViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductListOptionResultViewModelListProductListOptionFilterViewModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListOptionResultViewModelListProductListOptionFilterViewModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductListOptionResultViewModelListProductListOptionFilterViewModelApiResponseObject'
  /ProductListOptions/SearchProductByFeature:
    post:
      tags:
        - ProductListOptions
      summary: Searches the product by feature.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductListOptionFilterViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductListOptionFilterViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductListOptionFilterViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductListOptionResultViewModelListProductListOptionFilterViewModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListOptionResultViewModelListProductListOptionFilterViewModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductListOptionResultViewModelListProductListOptionFilterViewModelApiResponseObject'
  /Products/GetProductDescriptionHistories/{productVariantId}:
    get:
      tags:
        - Products
      summary: List all product description history
      parameters:
        - name: productVariantId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetProductDescriptionHistoriesOutput'
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductDescriptionHistoriesOutput'
            text/json:
              schema:
                $ref: '#/components/schemas/GetProductDescriptionHistoriesOutput'
  /Products:
    get:
      tags:
        - Products
      summary: List all products.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductQuery'
  /Products/GetListForExcel:
    get:
      tags:
        - Products
      summary: Gets the list for excel.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductExcelModel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductExcelModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductExcelModel'
  /Products/GetProductCommitListForExcel:
    get:
      tags:
        - Products
      summary: Gets the product commit list for excel.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductExcelModel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductExcelModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductExcelModel'
  /Products/CreateExcel:
    get:
      tags:
        - Products
      summary: Günlük exceli oluşturur
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /Products/GetIdName:
    get:
      tags:
        - Products
      summary: List all products with Id and Name.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductQuery'
  /Products/GetIdName/{categoryId}:
    get:
      tags:
        - Products
      summary: List all products with Id and Name.
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductQuery'
  /Products/GetProductsCountWithoutPhotos:
    get:
      tags:
        - Products
      summary: Fotoğrafı boş olan ürünler ve varyantlarının sayısını döner
      responses:
        '200':
          description: Success
  /Products/SearchProducts:
    post:
      tags:
        - Products
      summary: search products.
      parameters:
        - name: query
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 50
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductQueryPagingDataViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductQueryPagingDataViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductQueryPagingDataViewModel'
  /Products/NewProduct:
    post:
      tags:
        - Products
      summary: Create a new Product
      requestBody:
        description: Product information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateFromProductCommit'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductCreateFromProductCommit'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductCreateFromProductCommit'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductQuery'
  /Products/{id}/NewProductVariant:
    post:
      tags:
        - Products
      summary: Create a new product variant
      parameters:
        - name: id
          in: path
          description: Product Id
          required: true
          schema:
            type: string
      requestBody:
        description: Product Commit Ids
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateFromProductCommit'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductCreateFromProductCommit'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductCreateFromProductCommit'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductQuery'
  /Products/{id}/AddVariantAttribute:
    post:
      tags:
        - Products
      summary: Create a new product attributes
      parameters:
        - name: id
          in: path
          description: Product Id
          required: true
          schema:
            type: string
      requestBody:
        description: VariantAttributeCreate information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductVariantAttributeCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductVariantAttributeCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductVariantAttributeCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductQuery'
  /Products/{id}/UpdateProduct:
    post:
      tags:
        - Products
      summary: Update a Product Commit
      parameters:
        - name: id
          in: path
          description: Product Id
          required: true
          schema:
            type: string
      requestBody:
        description: ProductUpdate information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductQuery'
  /Products/UpdateListPrice:
    post:
      tags:
        - Products
      summary: Ürününün liste fiyatını değiştirir.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductListPriceUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductListPriceUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductListPriceUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /Products/UpdateCoverPic:
    post:
      tags:
        - Products
      summary: Ürünün kapak fotoğrafını değiştirir.
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCoverPicUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/ProductCoverPicUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProductCoverPicUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /Products/{id}/SetRestrictedProduct:
    post:
      tags:
        - Products
      summary: Ürünün 18+ yaş kısıtlamasını değiştirir.
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /Products/UpdateAllReplacedTitle:
    put:
      tags:
        - Products
      summary: Tüm ürünlerin ReplacedTitle alanlarını günceller.
      responses:
        '200':
          description: Success
  /Products/UpdateAllSlugs:
    put:
      tags:
        - Products
      summary: Tüm ürünlerin Slug alanlarını günceller.
      responses:
        '200':
          description: Success
  /Products/SetImageFromCoverPic:
    put:
      tags:
        - Products
      summary: Tüm ürünlerin Slug alanlarını günceller.
      responses:
        '200':
          description: Success
  /Products/UpdateAttributesByCategory:
    put:
      tags:
        - Products
      summary: Tüm ürünlerin attributelerini
      responses:
        '200':
          description: Success
  /Products/{id}/{confirm}:
    delete:
      tags:
        - Products
      summary: Delete specific product.
      parameters:
        - name: id
          in: path
          description: Product id.
          required: true
          schema:
            type: string
        - name: confirm
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /Products/calis:
    get:
      tags:
        - Products
      summary: Add products to temp product list.
      responses:
        '200':
          description: Success
  /Sectors:
    get:
      tags:
        - Sectors
      summary: Tüm sektörleri getirir.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SectorQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/SectorQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/SectorQueryListStringApiResponseObject'
    post:
      tags:
        - Sectors
      summary: Sektör oluşturulur
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectorCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/SectorCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SectorCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SectorQuerySectorCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/SectorQuerySectorCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/SectorQuerySectorCreateApiResponseObject'
  /Sectors/{id}:
    get:
      tags:
        - Sectors
      summary: Id'si verilen sektör getirilir.
      parameters:
        - name: id
          in: path
          description: Sector id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SectorQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/SectorQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/SectorQueryStringApiResponseObject'
    put:
      tags:
        - Sectors
      summary: Sektör güncellenir
      parameters:
        - name: id
          in: path
          description: Sector id
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectorUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/SectorUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SectorUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SectorQuerySectorUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/SectorQuerySectorUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/SectorQuerySectorUpdateApiResponseObject'
    delete:
      tags:
        - Sectors
      summary: Sektörü siler.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Slides:
    get:
      tags:
        - Slides
      summary: List all slides
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SlideQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/SlideQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/SlideQueryListStringApiResponseObject'
    post:
      tags:
        - Slides
      summary: Add Slide
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlideCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/SlideCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SlideCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SlideQuerySlideCreateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/SlideQuerySlideCreateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/SlideQuerySlideCreateApiResponseObject'
  /Slides/{id}:
    get:
      tags:
        - Slides
      summary: Get slide by id
      parameters:
        - name: id
          in: path
          description: Slide Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SlideQueryStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/SlideQueryStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/SlideQueryStringApiResponseObject'
    put:
      tags:
        - Slides
      summary: Update Slide
      parameters:
        - name: id
          in: path
          description: Slide id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlideUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/SlideUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SlideUpdate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SlideQuerySlideUpdateApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/SlideQuerySlideUpdateApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/SlideQuerySlideUpdateApiResponseObject'
    delete:
      tags:
        - Slides
      summary: Delete slide
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/StringStringApiResponseObject'
  /Slides/UpdateStatus/{id}:
    put:
      tags:
        - Slides
      summary: Update Slide Status
      parameters:
        - name: id
          in: path
          description: Slide id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlideUpdateStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/SlideUpdateStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SlideUpdateStatus'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SlideQuerySlideUpdateStatusApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/SlideQuerySlideUpdateStatusApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/SlideQuerySlideUpdateStatusApiResponseObject'
  /TempMerchantProductLists:
    get:
      tags:
        - TempMerchantProductLists
      summary: Gets this instance.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TempMerchantProductListListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/TempMerchantProductListListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/TempMerchantProductListListStringApiResponseObject'
  /TempMerchantProductLists/AddTempProductList:
    post:
      tags:
        - TempMerchantProductLists
      summary: Satıcıya göre yardımcı tablo oluşturulması
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OkResult'
            application/json:
              schema:
                $ref: '#/components/schemas/OkResult'
            text/json:
              schema:
                $ref: '#/components/schemas/OkResult'
  /TempMerchantProductLists/SearchTempProductList/{id}:
    post:
      tags:
        - TempMerchantProductLists
      summary: Search temp product list.
      parameters:
        - name: id
          in: path
          description: Merchant id.
          required: true
          schema:
            type: string
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TempProductListSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TempProductListSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TempProductListSearchModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TempMerchantProductListSearchResponseModelTempProductListSearchModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/TempMerchantProductListSearchResponseModelTempProductListSearchModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/TempMerchantProductListSearchResponseModelTempProductListSearchModelApiResponseObject'
  /TempProductLists:
    get:
      tags:
        - TempProductLists
      summary: Gets this instance.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TempProductListListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/TempProductListListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/TempProductListListStringApiResponseObject'
  /TempProductLists/AddTempProductList:
    post:
      tags:
        - TempProductLists
      summary: Adds the temporary product list.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TempProductListQueryListStringApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/TempProductListQueryListStringApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/TempProductListQueryListStringApiResponseObject'
  /TempProductLists/SearchTempProductList:
    post:
      tags:
        - TempProductLists
      summary: Searches the temporary product list.
      requestBody:
        description: The model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TempProductListSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TempProductListSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TempProductListSearchModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TempProductListSearchResponseModelTempProductListSearchModelApiResponseObject'
            application/json:
              schema:
                $ref: '#/components/schemas/TempProductListSearchResponseModelTempProductListSearchModelApiResponseObject'
            text/json:
              schema:
                $ref: '#/components/schemas/TempProductListSearchResponseModelTempProductListSearchModelApiResponseObject'
  /Tickets:
    get:
      tags:
        - Tickets
      summary: Tüm ticketlar
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketQuery'
    post:
      tags:
        - Tickets
      summary: Yeni destek talebi oluşturma
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTicketCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/NewTicketCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NewTicketCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
  /Tickets/GetByAdminId:
    get:
      tags:
        - Tickets
      summary: Adminin ticketları
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketQuery'
  /Tickets/GetByMerchantId:
    get:
      tags:
        - Tickets
      summary: Satıcının ticketları
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketQuery'
  /Tickets/{id}:
    get:
      tags:
        - Tickets
      summary: Destek Talebi Id'ye göre getirilir.
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
  /Tickets/GetByTicketNo/{ticketNo}:
    get:
      tags:
        - Tickets
      summary: Destek Talebi TicketNo'ya göre getirilir.
      parameters:
        - name: ticketNo
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
  /Tickets/NewTicketMessageFromMerchant/{id}:
    post:
      tags:
        - Tickets
      summary: Satıcıdan giden yeni mesaj
      parameters:
        - name: id
          in: path
          description: Ticket Id
          required: true
          schema:
            type: string
      requestBody:
        description: NewTicketMessageFromMerchant model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTicketMessageFromMerchant'
          text/json:
            schema:
              $ref: '#/components/schemas/NewTicketMessageFromMerchant'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NewTicketMessageFromMerchant'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
  /Tickets/NewTicketMessageFromAdmin/{id}:
    post:
      tags:
        - Tickets
      summary: Adminden giden yeni mesaj
      parameters:
        - name: id
          in: path
          description: Ticket Id
          required: true
          schema:
            type: string
      requestBody:
        description: NewTicketMessageFromAdmin model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTicketMessageFromAdmin'
          text/json:
            schema:
              $ref: '#/components/schemas/NewTicketMessageFromAdmin'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NewTicketMessageFromAdmin'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
  /Tickets/ChangeStatus/{id}:
    put:
      tags:
        - Tickets
      summary: Durum güncelleme
      parameters:
        - name: id
          in: path
          description: Ticket Id
          required: true
          schema:
            type: string
      requestBody:
        description: UpdateStatusModel model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStatusModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateStatusModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateStatusModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
  /Tickets/ChangeProcessingUser/{id}:
    put:
      tags:
        - Tickets
      summary: Durum güncelleme
      parameters:
        - name: id
          in: path
          description: Ticket Id
          required: true
          schema:
            type: string
      requestBody:
        description: UpdateStatusModel model
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProcessingUserModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProcessingUserModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProcessingUserModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /Tickets/DeleteTicketDetail/{id}/{detailId}:
    delete:
      tags:
        - Tickets
      summary: Talep Detayını sil
      parameters:
        - name: id
          in: path
          description: Ticket Id
          required: true
          schema:
            type: string
        - name: detailId
          in: path
          description: TicketDetailId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
  /Tickets/DeleteTicket/{id}:
    delete:
      tags:
        - Tickets
      summary: Talep sil
      parameters:
        - name: id
          in: path
          description: Ticket Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/TicketQuery'
  /Users:
    get:
      tags:
        - Users
      summary: List all Users.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserQuery'
    post:
      tags:
        - Users
      summary: Create a new User
      requestBody:
        description: User information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          description: Success
  /Users/{id}:
    get:
      tags:
        - Users
      summary: Get specific User.
      parameters:
        - name: id
          in: path
          description: User id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/UserQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/UserQuery'
    put:
      tags:
        - Users
      summary: Update specific User.
      parameters:
        - name: id
          in: path
          description: User id.
          required: true
          schema:
            type: string
      requestBody:
        description: User model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Users
      summary: Delete specific User.
      parameters:
        - name: id
          in: path
          description: User id.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /Users/ResetPassword:
    get:
      tags:
        - Users
      summary: Token kontrolü yapılıyor.
      parameters:
        - name: token
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/UserQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/UserQuery'
    post:
      tags:
        - Users
      summary: Update User password.
      parameters:
        - name: token
          in: query
          description: ''
          schema:
            type: string
      requestBody:
        description: UserUpdatePassword model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdatePassword'
          text/json:
            schema:
              $ref: '#/components/schemas/UserUpdatePassword'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserUpdatePassword'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/UserQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/UserQuery'
  /Users/Login:
    post:
      tags:
        - Users
      summary: Login User
      requestBody:
        description: AutModel
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AuthModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/UserQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/UserQuery'
  /Users/UpdatePassword:
    put:
      tags:
        - Users
      summary: Update User password.
      requestBody:
        description: UserUpdatePassword model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdatePassword'
          text/json:
            schema:
              $ref: '#/components/schemas/UserUpdatePassword'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserUpdatePassword'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/UserQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/UserQuery'
  /Users/ForgotPassword:
    put:
      tags:
        - Users
      summary: Forgot Password.
      requestBody:
        description: User email.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/UserQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/UserQuery'
  /website/categories:
    get:
      tags:
        - WebSiteCategories
      summary: List all Categorys.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryCleanQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryCleanQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryCleanQuery'
  /website/categories/GetParentCategories:
    get:
      tags:
        - WebSiteCategories
      summary: Ana kategoriler liste olarak dönüyor.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryCleanQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryCleanQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryCleanQuery'
  /website/categories/GetTreeViewCategories:
    get:
      tags:
        - WebSiteCategories
      summary: Ana Kategori > Alt1 Kategori > Alt2 Kategori
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryTreeView'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryTreeView'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryTreeView'
  /website/categories/GetChildCategories/{parentCategoryId}:
    get:
      tags:
        - WebSiteCategories
      summary: ParentCategoryId'ye göre alt kategori listesi geliyor.
      parameters:
        - name: parentCategoryId
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryCleanQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryCleanQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryCleanQuery'
  /website/categories/GetNotCache:
    get:
      tags:
        - WebSiteCategories
      summary: List all categories.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryCleanQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryCleanQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryCleanQuery'
  /website/categories/GetAllCategories:
    get:
      tags:
        - WebSiteCategories
      summary: List all categories.
      parameters:
        - name: cache
          in: query
          schema:
            type: boolean
            default: true
        - name: onlyFullCategories
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryCleanQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryCleanQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryCleanQuery'
  /website/categories/PopularCategories/{count}:
    get:
      tags:
        - WebSiteCategories
      summary: List popular Categories.
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 5
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryQuery'
  /website/categories/MerchantCategoryProducts/{merchantId}/{categoryId}:
    get:
      tags:
        - WebSiteCategories
      summary: Merchant product list with categoruYd.
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductQuery'
  /website/categories/categorySlugHealt:
    get:
      tags:
        - WebSiteCategories
      summary: Categories the slug healt.
      responses:
        '200':
          description: Success
  /website/commons/sitemaps/{type}:
    get:
      tags:
        - WebSiteCommonsControllers
      summary: Verilen type'a göre sitemapleri listeler.
      parameters:
        - name: type
          in: path
          description: urunler, kategoriler, magazalar
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /website/commons/sitemaps/{type}/{count}:
    get:
      tags:
        - WebSiteCommonsControllers
      summary: Verilen type ve count değerine göre sitemap içeriğini getirir.
      parameters:
        - name: count
          in: path
          description: sitemap_1,2,3 olarak verilen numara
          required: true
          schema:
            type: string
        - name: type
          in: path
          description: urunler, kategoriler, magazalar
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /website/commons/CimriXml:
    get:
      tags:
        - WebSiteCommonsControllers
      summary: Cimri.com için xml getirir.
      responses:
        '200':
          description: Success
  /website/commons/ProductExcelExport:
    get:
      tags:
        - WebSiteCommonsControllers
      summary: Onaylanan, onay bekleyen ve satışta olan ürünler
      responses:
        '200':
          description: Success
  /website/commons/IsNewProductStatusChange:
    get:
      tags:
        - WebSiteCommonsControllers
      summary: Determines whether [is new product status change].
      responses:
        '200':
          description: Success
  /website/commons/GetSlides:
    get:
      tags:
        - WebSiteCommonsControllers
      summary: List all slides
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlideQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlideQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlideQuery'
  /website/commons/GetBanners:
    get:
      tags:
        - WebSiteCommonsControllers
      summary: List all slides
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BannerQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BannerQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BannerQuery'
  /website/commons:
    post:
      tags:
        - WebSiteCommonsControllers
      summary: Generate Sitemap
      responses:
        '200':
          description: Success
  /website/contracts/{tag}:
    get:
      tags:
        - WebSiteContracts
      summary: Gets the contracts by tag.
      parameters:
        - name: tag
          in: path
          description: The tag.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractQuery'
  /website/contracts/Detail/{contractId}:
    get:
      tags:
        - WebSiteContracts
      parameters:
        - name: contractId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractQuery'
  /website/contracts/Detail/{contractId}/{memberId}:
    get:
      tags:
        - WebSiteContracts
      summary: Gets the contract detail.
      parameters:
        - name: contractId
          in: path
          description: The contract identifier.
          required: true
          schema:
            type: string
        - name: memberId
          in: path
          description: The member identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractQuery'
  /website/fixedpagesettings/{name}:
    get:
      tags:
        - WebSiteFixedPageSettings
      summary: Name ile sabit sayfaların seo ayarlarını döner
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/FixedPageSettingQuery'
  /website/locations:
    get:
      tags:
        - WebSiteLocations
      summary: List all Locations.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationQuery'
  /website/locations/GetCities:
    get:
      tags:
        - WebSiteLocations
      summary: List all cities.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: string
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
  /website/locations/GetCounties:
    post:
      tags:
        - WebSiteLocations
      summary: List all Counties.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountyFilterModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CountyFilterModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CountyFilterModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: string
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
  /website/locations/GetDistricts:
    post:
      tags:
        - WebSiteLocations
      summary: List all Districts.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistrictFilterModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DistrictFilterModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DistrictFilterModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DistrictQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DistrictQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DistrictQuery'
  /website/members/GetById:
    get:
      tags:
        - WebSiteMembers
      summary: Get specific Member.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberQuery'
  /website/members/GetMyProductComments:
    get:
      tags:
        - WebSiteMembers
      summary: Müşterinin yaptığı tüm yorumlar listelenir. Onay bekleyen, Onaylanan ve Reddedilen
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommentVM'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommentVM'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommentVM'
  /website/members/ResetPassword:
    get:
      tags:
        - WebSiteMembers
      summary: Token kontrolü yapılıyor.
      parameters:
        - name: token
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
    post:
      tags:
        - WebSiteMembers
      summary: Reset password.
      parameters:
        - name: token
          in: query
          description: ''
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberUpdatePassword'
          text/json:
            schema:
              $ref: '#/components/schemas/MemberUpdatePassword'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MemberUpdatePassword'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberQuery'
  /website/members:
    post:
      tags:
        - WebSiteMembers
      summary: Create a new User
      requestBody:
        description: User information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/MemberCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MemberCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberQuery'
    put:
      tags:
        - WebSiteMembers
      summary: Update specific Member.
      requestBody:
        description: Member model.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/MemberUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MemberUpdate'
      responses:
        '200':
          description: Success
  /website/members/AddApnsId:
    post:
      tags:
        - WebSiteMembers
      summary: Üyenin ApnsId'sinin kaydedilmesi. Mobil kullanıcılar için.
      requestBody:
        description: MemberApnsIdCreate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberApnsIdCreate'
          text/json:
            schema:
              $ref: '#/components/schemas/MemberApnsIdCreate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MemberApnsIdCreate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /website/members/Login:
    post:
      tags:
        - WebSiteMembers
      summary: Login Member
      requestBody:
        description: AutModel
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AuthModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberQuery'
  /website/members/AddOrUpdatePriceAlarm/{productId}/{variantId}:
    post:
      tags:
        - WebSiteMembers
      summary: Add stock alarm prodcut.
      parameters:
        - name: productId
          in: path
          description: product id.
          required: true
          schema:
            type: string
        - name: variantId
          in: path
          description: varyantid.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserProductStockAlarm'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomUserProductStockAlarm'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomUserProductStockAlarm'
      responses:
        '200':
          description: Success
  /website/members/AddRemovePriceAlarm/{productId}/{variantId}:
    post:
      tags:
        - WebSiteMembers
      summary: Add price alarm prodcut.
      parameters:
        - name: productId
          in: path
          description: product id.
          required: true
          schema:
            type: string
        - name: variantId
          in: path
          description: varyantid.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserProductPriceAlarm'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomUserProductPriceAlarm'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomUserProductPriceAlarm'
      responses:
        '200':
          description: Success
  /website/members/SendEmailConfirmMail:
    post:
      tags:
        - WebSiteMembers
      summary: Satıcıya email doğrulama linkini tekrar gönderebilmek için eklendi.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailConfirmModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SendEmailConfirmModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendEmailConfirmModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /website/members/SetCommentFullName:
    post:
      tags:
        - WebSiteMembers
      summary: Müşterinin yaptığı tüm yorumlar listelenir. Onay bekleyen, Onaylanan ve Reddedilen
      requestBody:
        description: Yorum Id ve isim görünme seçeneği
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCommentMemberNameRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SetCommentMemberNameRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SetCommentMemberNameRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommentVM'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommentVM'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommentVM'
  /website/members/EmailConfirm:
    put:
      tags:
        - WebSiteMembers
      summary: Update Email verification.
      requestBody:
        description: User email verification code.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberUpdateEmailVerification'
          text/json:
            schema:
              $ref: '#/components/schemas/MemberUpdateEmailVerification'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MemberUpdateEmailVerification'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MemberQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/MemberQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/MemberQuery'
  /website/members/ForgotPassword:
    put:
      tags:
        - WebSiteMembers
      summary: Şifremi unuttum
      requestBody:
        description: User email.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordModel'
      responses:
        '200':
          description: Success
  /website/members/DeleteComment/{productCommentId}:
    delete:
      tags:
        - WebSiteMembers
      summary: Müşteri kendi yorumu siler
      parameters:
        - name: productCommentId
          in: path
          description: Yorum Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /website/merchantProducts/AllProductsByMerchantSlug/{merchantId}/{q}:
    post:
      tags:
        - WebSiteMerchantProducts
      summary: Satıcıya ait ürünleri filtre eder.
      parameters:
        - name: merchantId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: q
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /website/merchantProducts/AllProducts/{slug}:
    post:
      tags:
        - WebSiteMerchantProducts
      summary: Satıcıya ait yeni ürünler
      parameters:
        - name: slug
          in: path
          description: Merchant Slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /website/merchantProducts/AllProductsByCategorySlug/{slug}/{categorySlug}:
    post:
      tags:
        - WebSiteMerchantProducts
      summary: Satıcı ve kategoriye ait ürünler
      parameters:
        - name: slug
          in: path
          description: Merchant Slug
          required: true
          schema:
            type: string
        - name: categorySlug
          in: path
          description: Category Slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /website/merchantProducts/NewProducts/{slug}:
    post:
      tags:
        - WebSiteMerchantProducts
      summary: Satıcıya ait yeni ürünler
      parameters:
        - name: slug
          in: path
          description: Merchant Slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /website/merchantProducts/OpportunityProducts/{slug}:
    post:
      tags:
        - WebSiteMerchantProducts
      summary: Satıcıya ait fırsat ürünleri
      parameters:
        - name: slug
          in: path
          description: Merchant Slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /website/merchantProducts/DiscountedProducts/{slug}:
    post:
      tags:
        - WebSiteMerchantProducts
      summary: Satıcıya ait indirimli ürünler
      parameters:
        - name: slug
          in: path
          description: Merchant Slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /website/merchantProducts/ShowcaseProducts/{slug}:
    post:
      tags:
        - WebSiteMerchantProducts
      summary: Satıcıya ait vitrin ürünleri
      parameters:
        - name: slug
          in: path
          description: Merchant Slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /website/merchants/GetAllWebApprovedMerchants:
    get:
      tags:
        - WebSiteMerchants
      summary: Tüm aktif satıcılar
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetAllWebApprovedMerchantsOutput'
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllWebApprovedMerchantsOutput'
            text/json:
              schema:
                $ref: '#/components/schemas/GetAllWebApprovedMerchantsOutput'
  /website/merchants/GetMerchant/{slug}:
    get:
      tags:
        - WebSiteMerchants
      summary: Slug'a göre merchant geliyor.
      parameters:
        - name: slug
          in: path
          description: Merchant Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantWebQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantWebQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantWebQuery'
  /website/merchants/{companyContactEmail}:
    get:
      tags:
        - WebSiteMerchants
      summary: Merchant Appeal E-mail control
      parameters:
        - name: companyContactEmail
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /website/orders/GetMemberOrders:
    get:
      tags:
        - WebSiteOrders
      summary: Üyeye ait siparişler
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WebSiteOrderResponseModel'
            application/json:
              schema:
                $ref: '#/components/schemas/WebSiteOrderResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/WebSiteOrderResponseModel'
  /website/orders/GetSelectedOrder/{orderNo}:
    get:
      tags:
        - WebSiteOrders
      summary: Siparişin seçilen detayını getirir.
      parameters:
        - name: orderNo
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: orderDetailId
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WebSiteOrderDetailQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/WebSiteOrderDetailQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/WebSiteOrderDetailQuery'
  /website/orders/GetOrderSelectedDetail/{orderNo}/{orderDetailId}:
    get:
      tags:
        - WebSiteOrders
      summary: Siparişin seçilen detayını getirir.
      parameters:
        - name: orderNo
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: orderDetailId
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WebSiteOrderDetailQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/WebSiteOrderDetailQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/WebSiteOrderDetailQuery'
  /website/orders/IyzicoRequestModel:
    get:
      tags:
        - WebSiteOrders
      summary: Iyzico'ya ödeme için gönderilecek olan modeli dolu olarak döner
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreatePaymentRequest'
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePaymentRequest'
            text/json:
              schema:
                $ref: '#/components/schemas/CreatePaymentRequest'
  /website/orders/GetIyzicoSetting/{secretKey}:
    get:
      tags:
        - WebSiteOrders
      summary: Iyzico api bilgilerini döner
      parameters:
        - name: secretKey
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IyzicoSettingModel'
            application/json:
              schema:
                $ref: '#/components/schemas/IyzicoSettingModel'
            text/json:
              schema:
                $ref: '#/components/schemas/IyzicoSettingModel'
  /website/orders/OrderInstallmentDetail/{cardNumber}:
    get:
      tags:
        - WebSiteOrders
      summary: Banka bilgisine göre üyenin sepetindeki ürünlere taksit sağlanması
      parameters:
        - name: cardNumber
          in: path
          description: ilk 6 hane
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BinNumberInstallmentQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BinNumberInstallmentQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BinNumberInstallmentQuery'
  /website/orders/OrderCreate:
    post:
      tags:
        - WebSiteOrders
      summary: Kredi kartı ile siparişin oluşturulması
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateOrderVM'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateOrderVM'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateOrderVM'
  /website/orders/OrderCreateForMobile:
    post:
      tags:
        - WebSiteOrders
      summary: Mobil için siparişin oluşturulması
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateOrderVM'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateOrderVM'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateOrderVM'
  /website/orders/OrderSuccess:
    post:
      tags:
        - WebSiteOrders
      summary: Sipariş Başarılı
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSuccessRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderSuccessRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderSuccessRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema: {}
            application/json:
              schema: {}
            text/json:
              schema: {}
  /website/orders/OrderUpdatePaymentId:
    post:
      tags:
        - WebSiteOrders
      summary: sipariş PaymentId alanı update eder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdateConversation'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderUpdateConversation'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderUpdateConversation'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /website/orders/OrderDetailNewComment:
    post:
      tags:
        - WebSiteOrders
      summary: Teslim edilen bir ürüne yorum yapmak
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProductCommentRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/NewProductCommentRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NewProductCommentRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /website/orders/OrderDetailCancel:
    post:
      tags:
        - WebSiteOrders
      summary: Sipariş içinden bir detayın iptali
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOrderDetailRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CancelOrderDetailRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CancelOrderDetailRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /website/orders/OrderDetailRefund:
    post:
      tags:
        - WebSiteOrders
      summary: Siparişin iade talebi oluştur
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDetailRefundRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderDetailRefundRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderDetailRefundRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /website/orders/GetOrderDetailMessages:
    post:
      tags:
        - WebSiteOrders
      summary: Sipariş detayına ait olan mesajları listeler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDetailRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderDetailRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderDetailRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderMessageQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderMessageQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderMessageQuery'
  /website/orders/GetMerchantRefundAddress/{merchantId}:
    get:
      tags:
        - WebSiteOrders
      summary: satıcının iade gönderilerinin yapılacağı adres bilgilerini döner
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MerchantRefundAddressQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantRefundAddressQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantRefundAddressQuery'
  /website/orders/OrderRefundReturnLimit:
    post:
      tags:
        - WebSiteOrders
      summary: İade limitli ürünün için iade onay talebi oluşturur
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDetailRefundReturnLimitRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderDetailRefundReturnLimitRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderDetailRefundReturnLimitRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /website/orders/{orderId}/GetOrderDetail:
    post:
      tags:
        - WebSiteOrders
      summary: Bir siparişin detayını website tarafı için listeler
      parameters:
        - name: orderId
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/OrderQuery'
  /website/orders/SetOrderPaymentFailed/{orderNo}:
    post:
      tags:
        - WebSiteOrders
      parameters:
        - name: orderNo
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOrderPaymentFailedRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SetOrderPaymentFailedRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SetOrderPaymentFailedRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: boolean
            application/json:
              schema:
                type: array
                items:
                  type: boolean
            text/json:
              schema:
                type: array
                items:
                  type: boolean
  /website/products/tumUrunler:
    get:
      tags:
        - WebSiteProducts
      summary: List all products.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductQuery'
  /website/products/ProductListWithCategoryId/{categoryId}:
    get:
      tags:
        - WebSiteProducts
      summary: List all products with categoryId.
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/T'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/T'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/T'
  /website/products/ProductListWithCategoryIdAndMerchantId/{categoryId}/{merchantId}:
    get:
      tags:
        - WebSiteProducts
      summary: List all products with categoryId and merchantId.
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/T'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/T'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/T'
  /website/products/ProductDetail/{slug}:
    get:
      tags:
        - WebSiteProducts
      summary: Product Detail
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProductDetailQuery'
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetailQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/ProductDetailQuery'
  /website/products/ProductDetailOtherMerchantPrice/{id}/{variantId}:
    get:
      tags:
        - WebSiteProducts
      summary: Product Detail other merchants products
      parameters:
        - name: id
          in: path
          description: Product Id
          required: true
          schema:
            type: string
        - name: variantId
          in: path
          description: Variant Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDetailMerchantPriceModel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDetailMerchantPriceModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDetailMerchantPriceModel'
  /website/products/ProductDetailOtherMerchantProductsSameLocation/{id}/{variantId}/{districtId}:
    get:
      tags:
        - WebSiteProducts
      summary: Product Detail other merchants products
      parameters:
        - name: id
          in: path
          description: Product Id
          required: true
          schema:
            type: string
        - name: variantId
          in: path
          description: Variant Id
          required: true
          schema:
            type: string
        - name: districtId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDetailMerchantPriceModel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDetailMerchantPriceModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDetailMerchantPriceModel'
  /website/products/AllProducts:
    get:
      tags:
        - WebSiteProducts
      summary: Tüm ürünler
      responses:
        '200':
          description: Success
  /website/products/NewProducts/{take}:
    get:
      tags:
        - WebSiteProducts
      summary: Yeni ürünler
      parameters:
        - name: take
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: Success
  /website/products/DiscountedProducts/{take}:
    get:
      tags:
        - WebSiteProducts
      summary: İndirimli ürünler
      parameters:
        - name: take
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: Success
  /website/products/ShowcaseProducts/{take}:
    get:
      tags:
        - WebSiteProducts
      summary: Vitrin ürünleri
      parameters:
        - name: take
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: Success
  /website/products/OpportunityProducts/{take}:
    get:
      tags:
        - WebSiteProducts
      summary: Fırsat ürünleri
      parameters:
        - name: take
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: Success
  /website/products/ProductInstallmentDetail/{slug}/{unitePrice}/{quantity}:
    get:
      tags:
        - WebSiteProducts
      summary: ürünün kartlara göre taksit listesini döner
      parameters:
        - name: slug
          in: path
          description: Product slug
          required: true
          schema:
            type: string
        - name: unitePrice
          in: path
          required: true
          schema:
            type: number
            format: double
        - name: quantity
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BinNumberInstallmentQuery'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BinNumberInstallmentQuery'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BinNumberInstallmentQuery'
  /website/products/GetProductComments/{page}/{pageSize}:
    get:
      tags:
        - WebSiteProducts
      summary: Bir ürüne yapılmış ve onaylanmış yorumları listeler. Yalznızca productId gönderilirse ürün yorumlarının sayfalanmış listesini, merchantId gönderilirse satıcıya yapılmış yorumların sayfalanmış listesini döner. Ürünün tüm varyantları buna dahildir.
      parameters:
        - name: productId
          in: query
          description: Ürün Id
          schema:
            type: string
        - name: merchantId
          in: query
          schema:
            type: string
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 1
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommentVM'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommentVM'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCommentVM'
  /website/products/SearchEngine:
    post:
      tags:
        - WebSiteProducts
      summary: search engine.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEngineRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SearchEngineRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SearchEngineRequestModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items: {}
            application/json:
              schema:
                type: array
                items: {}
            text/json:
              schema:
                type: array
                items: {}
  /website/products/cancel-mail-list:
    get:
      tags:
        - WebSiteProducts
      summary: Cancels the mail list.
      parameters:
        - name: productId
          in: query
          description: The product identifier.
          schema:
            type: string
        - name: variantId
          in: query
          description: The variant identifier.
          schema:
            type: string
        - name: type
          in: query
          description: The type.
          schema:
            type: string
        - name: siteUserId
          in: query
          description: The site user identifier.
          schema:
            type: string
        - name: emailAddress
          in: query
          description: The email address.
          schema:
            type: string
      responses:
        '200':
          description: Success
components:
  schemas:
    Address:
      type: object
      properties:
        description:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        contactName:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
      additionalProperties: false
    AddressCreate:
      type: object
      properties:
        title:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        surname:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        cityName:
          type: string
          nullable: true
        countyName:
          type: string
          nullable: true
        districtName:
          type: string
          nullable: true
        addressText:
          type: string
          nullable: true
        isCorporateInvoice:
          type: boolean
        taxOffice:
          type: string
          nullable: true
        taxNo:
          type: string
          nullable: true
        isDefault:
          type: boolean
      additionalProperties: false
    AddressQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        surname:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        cityName:
          type: string
          nullable: true
        countyName:
          type: string
          nullable: true
        districtName:
          type: string
          nullable: true
        addressText:
          type: string
          nullable: true
        isCorporateInvoice:
          type: boolean
        isCorporateInvoiceString:
          type: string
          nullable: true
        taxOffice:
          type: string
          nullable: true
        taxNo:
          type: string
          nullable: true
        isDefault:
          type: boolean
      additionalProperties: false
    AddressQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/AddressQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    AddressUpdate:
      required:
        - addressText
        - cityName
        - countyName
        - districtName
        - isCorporateInvoice
        - name
        - phone
        - surname
        - title
      type: object
      properties:
        title:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
        surname:
          minLength: 1
          type: string
        phone:
          minLength: 1
          type: string
        cityName:
          minLength: 1
          type: string
        countyName:
          minLength: 1
          type: string
        districtName:
          minLength: 1
          type: string
        addressText:
          minLength: 1
          type: string
        isCorporateInvoice:
          type: boolean
        taxOffice:
          type: string
          nullable: true
        taxNo:
          type: string
          nullable: true
        isDefault:
          type: boolean
      additionalProperties: false
    AddressWebQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        surname:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        cityName:
          type: string
          nullable: true
        countyName:
          type: string
          nullable: true
        districtName:
          type: string
          nullable: true
        addressText:
          type: string
          nullable: true
        isCorporateInvoice:
          type: boolean
        isCorporateInvoiceString:
          type: string
          nullable: true
        taxOffice:
          type: string
          nullable: true
        taxNo:
          type: string
          nullable: true
        isDefault:
          type: boolean
        district:
          $ref: '#/components/schemas/DistrictQuery'
      additionalProperties: false
    AddressWebQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/AddressWebQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    Album:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 50
          minLength: 0
          type: string
        description:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    AlbumIEnumerableStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/Album'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    AlbumStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/Album'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    AppealFileCreate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        summary:
          type: string
          nullable: true
        desc:
          type: string
          nullable: true
      additionalProperties: false
    AppealFileQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        versions:
          type: array
          items:
            $ref: '#/components/schemas/AppealFileVersion'
          nullable: true
      additionalProperties: false
    AppealFileQueryIEnumerableAppealFileCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/AppealFileQuery'
          nullable: true
        model:
          $ref: '#/components/schemas/AppealFileCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    AppealFileQueryIEnumerableAppealFileUpdateActiveApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/AppealFileQuery'
          nullable: true
        model:
          $ref: '#/components/schemas/AppealFileUpdateActive'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    AppealFileQueryIEnumerableAppealFileUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/AppealFileQuery'
          nullable: true
        model:
          $ref: '#/components/schemas/AppealFileUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    AppealFileQueryIEnumerableAppealFileVersionCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/AppealFileQuery'
          nullable: true
        model:
          $ref: '#/components/schemas/AppealFileVersionCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    AppealFileQueryIEnumerableStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/AppealFileQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    AppealFileQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/AppealFileQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    AppealFileUpdate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        url:
          type: string
          nullable: true
        version:
          type: integer
          format: int32
        desc:
          type: string
          nullable: true
        summary:
          type: string
          nullable: true
      additionalProperties: false
    AppealFileUpdateActive:
      type: object
      properties:
        isActive:
          type: boolean
      additionalProperties: false
    AppealFileVersion:
      type: object
      properties:
        version:
          type: integer
          format: int32
        summary:
          type: string
          nullable: true
        desc:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
      additionalProperties: false
    AppealFileVersionCreate:
      type: object
      properties:
        summary:
          type: string
          nullable: true
        desc:
          type: string
          nullable: true
        version:
          type: integer
          format: int32
        url:
          type: string
          nullable: true
      additionalProperties: false
    AppealFileVersionQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isActive:
          type: boolean
        version:
          type: integer
          format: int32
        summary:
          type: string
          nullable: true
        desc:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
      additionalProperties: false
    ApprovedMerchant:
      type: object
      properties:
        id:
          type: string
          nullable: true
        maazaName:
          type: string
          nullable: true
      additionalProperties: false
    Attribute:
      type: object
      properties:
        name:
          type: string
          nullable: true
        isVariant:
          type: boolean
        isFilter:
          type: boolean
        values:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    AuthModel:
      required:
        - email
        - password
      type: object
      properties:
        email:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
      additionalProperties: false
    BannerCreate:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        link:
          type: string
          nullable: true
        target:
          type: boolean
        image:
          type: string
          nullable: true
        mobileImage:
          type: string
          nullable: true
        buttonText:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
        status:
          enum:
            - Active = 1
            - Passive = 2
          type: integer
          format: int32
        backgroundColor:
          type: string
          nullable: true
      additionalProperties: false
    BannerQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        link:
          type: string
          nullable: true
        target:
          type: boolean
        image:
          type: string
          nullable: true
        mobileImage:
          type: string
          nullable: true
        buttonText:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
        status:
          type: string
          nullable: true
        backgroundColor:
          type: string
          nullable: true
      additionalProperties: false
    BannerQueryBannerCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/BannerQuery'
        model:
          $ref: '#/components/schemas/BannerCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BannerQueryBannerUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/BannerQuery'
        model:
          $ref: '#/components/schemas/BannerUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BannerQueryIEnumerableStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/BannerQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BannerQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/BannerQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BannerUpdate:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        link:
          type: string
          nullable: true
        target:
          type: boolean
        image:
          type: string
          nullable: true
        mobileImage:
          type: string
          nullable: true
        buttonText:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
        status:
          enum:
            - Active = 1
            - Passive = 2
          type: integer
          format: int32
        backgroundColor:
          type: string
          nullable: true
      additionalProperties: false
    BannerUpdateStatus:
      type: object
      properties:
        status:
          enum:
            - Active = 1
            - Passive = 2
          type: integer
          format: int32
      additionalProperties: false
    BannerUpdateStatusBannerUpdateStatusApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/BannerUpdateStatus'
        model:
          $ref: '#/components/schemas/BannerUpdateStatus'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BarcodeControlResponseModel:
      type: object
      properties:
        barcode:
          type: string
          nullable: true
        used:
          type: boolean
      additionalProperties: false
    BarcodeRequestModel:
      type: object
      properties:
        barcodes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    BasketItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        price:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        category1:
          type: string
          nullable: true
        category2:
          type: string
          nullable: true
        itemType:
          type: string
          nullable: true
        subMerchantKey:
          type: string
          nullable: true
        subMerchantPrice:
          type: string
          nullable: true
      additionalProperties: false
    BinNumberCreate:
      type: object
      properties:
        bankName:
          type: string
          nullable: true
        creditCartName:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
        number:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
      additionalProperties: false
    BinNumberInstallmentQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        bankName:
          type: string
          nullable: true
        creditCartName:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
        number:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
        installmentDetails:
          type: array
          items:
            $ref: '#/components/schemas/InstallmentDetail'
          nullable: true
      additionalProperties: false
    BinNumberQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        bankName:
          type: string
          nullable: true
        creditCartName:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
        number:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
      additionalProperties: false
    BinNumberQueryBinNumberCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/BinNumberQuery'
        model:
          $ref: '#/components/schemas/BinNumberCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BinNumberQueryBinNumberUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/BinNumberQuery'
        model:
          $ref: '#/components/schemas/BinNumberUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BinNumberQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/BinNumberQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BinNumberQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/BinNumberQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BinNumberUpdate:
      type: object
      properties:
        bankName:
          type: string
          nullable: true
        creditCartName:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
        number:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
      additionalProperties: false
    BooleanCargoPriceUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: boolean
        model:
          $ref: '#/components/schemas/CargoPriceUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BooleanMaazaNameAndSlugModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: boolean
        model:
          $ref: '#/components/schemas/MaazaNameAndSlugModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BooleanMerchantEmailModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: boolean
        model:
          $ref: '#/components/schemas/MerchantEmailModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BooleanMerchantNewAboutApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: boolean
        model:
          $ref: '#/components/schemas/MerchantNewAbout'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BooleanMerchantProductListOptionResultViewModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: boolean
        model:
          $ref: '#/components/schemas/MerchantProductListOptionResultViewModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BooleanMerchantProductParameterCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: boolean
        model:
          $ref: '#/components/schemas/MerchantProductParameterCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BooleanMerchantUpdateProfileApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: boolean
        model:
          $ref: '#/components/schemas/MerchantUpdateProfile'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BooleanSendEmailConfirmModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: boolean
        model:
          $ref: '#/components/schemas/SendEmailConfirmModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BooleanStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: boolean
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BrandCreate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
      additionalProperties: false
    BrandQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        productCount:
          type: number
          format: double
      additionalProperties: false
    BrandQueryBrandCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/BrandQuery'
        model:
          $ref: '#/components/schemas/BrandCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BrandQueryBrandUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/BrandQuery'
        model:
          $ref: '#/components/schemas/BrandUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BrandQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/BrandQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BrandQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/BrandQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    BrandUpdate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
      additionalProperties: false
    Buyer:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        surname:
          type: string
          nullable: true
        identityNumber:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        gsmNumber:
          type: string
          nullable: true
        registrationDate:
          type: string
          nullable: true
        lastLoginDate:
          type: string
          nullable: true
        registrationAddress:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        ip:
          type: string
          nullable: true
      additionalProperties: false
    CancelMerchantModel:
      type: object
      properties:
        cancelReason:
          type: string
          nullable: true
      additionalProperties: false
    CancelOrderDetailRequest:
      type: object
      properties:
        orderDetailId:
          type: string
          nullable: true
        orderId:
          type: string
          nullable: true
        cancelMessage:
          type: string
          nullable: true
      additionalProperties: false
    CancelOrderRequest:
      type: object
      properties:
        orderId:
          type: string
          nullable: true
        cancelMessage:
          type: string
          nullable: true
        merchantId:
          $ref: '#/components/schemas/ObjectId'
      additionalProperties: false
    CargoPriceCreate:
      type: object
      properties:
        desi:
          type: integer
          format: int32
        price:
          type: number
          format: double
      additionalProperties: false
    CargoPriceModel:
      type: object
      properties:
        id:
          type: string
          nullable: true
        desi:
          type: integer
          format: int32
        price:
          type: number
          format: double
      additionalProperties: false
    CargoPriceModelCargoPriceCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CargoPriceModel'
        model:
          $ref: '#/components/schemas/CargoPriceCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CargoPriceModelListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/CargoPriceModel'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CargoPriceModelStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CargoPriceModel'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CargoPriceQuery:
      type: object
      properties:
        merchantId:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        price:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    CargoPriceQueryModel:
      type: object
      properties:
        merchantId:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        amount:
          type: integer
          format: int32
      additionalProperties: false
    CargoPriceResponseModel:
      type: object
      properties:
        totalPrice:
          type: number
          format: double
          readOnly: true
        cargoPrices:
          type: array
          items:
            $ref: '#/components/schemas/CargoPriceQuery'
          nullable: true
      additionalProperties: false
    CargoPriceResponseModelCargoPriceQueryModelListApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CargoPriceResponseModel'
        model:
          type: array
          items:
            $ref: '#/components/schemas/CargoPriceQueryModel'
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CargoPriceUpdate:
      type: object
      properties:
        desi:
          type: integer
          format: int32
        price:
          type: number
          format: double
      additionalProperties: false
    CargoSettings:
      type: object
      properties:
        id:
          type: integer
          format: int32
        key:
          type: string
          nullable: true
        browseBaseUrl:
          type: string
          nullable: true
      additionalProperties: false
    CargoSettingsListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/CargoSettings'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CargoViewModel:
      type: object
      properties:
        key:
          type: string
          nullable: true
        browseBaseUrl:
          type: string
          nullable: true
      additionalProperties: false
    CargoViewModelCargoCompanyApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CargoViewModel'
        model:
          enum:
            - YUTRICI = 1
            - ARAS = 2
            - MNG = 3
            - SURAT = 4
            - PTT = 5
            - UPS = 6
            - HOROZ = 7
            - CEVA = 8
            - BORUSAN = 9
            - FILLO = 10
            - TNT = 11
            - DHL = 12
            - InterGlobal = 13
          type: integer
          format: int32
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CartCreate:
      type: object
      properties:
        memberId:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
        amount:
          type: integer
          format: int32
        cartInstallmentInfo:
          $ref: '#/components/schemas/CartInstallmentInfo'
        productParameters:
          type: array
          items:
            $ref: '#/components/schemas/CartProductParameterModel'
          nullable: true
      additionalProperties: false
    CartDetailQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
        amount:
          type: integer
          format: int32
        productSlug:
          type: string
          nullable: true
        price:
          type: number
          format: double
        merchantName:
          type: string
          nullable: true
        merchantSlug:
          type: string
          nullable: true
        defaultImage:
          type: string
          nullable: true
        stock:
          type: integer
          format: int32
        maxSellCount:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        createdDateString:
          type: string
          nullable: true
        sameMerchantProduct:
          type: array
          items:
            $ref: '#/components/schemas/CartSameLocProductModel'
          nullable: true
        productAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
          nullable: true
        productParameters:
          type: array
          items:
            $ref: '#/components/schemas/CartProductParameter'
          nullable: true
      additionalProperties: false
    CartErrorReason:
      type: object
      properties:
        cartCreate:
          $ref: '#/components/schemas/CartCreate'
        message:
          type: string
          nullable: true
      additionalProperties: false
    CartInstallmentInfo:
      type: object
      properties:
        installmentCount:
          type: integer
          format: int32
        installmentPrice:
          type: number
          format: double
        updatedDate:
          type: string
          format: date-time
        cardNumber:
          type: string
          nullable: true
      additionalProperties: false
    CartInstallmentInfoQuery:
      type: object
      properties:
        installmentCount:
          type: integer
          format: int32
        installmentPrice:
          type: string
          nullable: true
        updatedDate:
          type: string
          format: date-time
      additionalProperties: false
    CartInstallmentUpdateRequest:
      type: object
      properties:
        cartId:
          $ref: '#/components/schemas/ObjectId'
        installmentNumber:
          type: integer
          format: int32
        bankNumber:
          type: string
          nullable: true
        price:
          type: number
          format: double
      additionalProperties: false
    CartItemMerchantChangeModel:
      type: object
      properties:
        cartId:
          type: string
          nullable: true
        cartItemId:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
      additionalProperties: false
    CartProductParameter:
      type: object
      properties:
        name:
          type: string
          nullable: true
        inputType:
          enum:
            - Text = 0
            - CheckBox = 1
            - RadioButton = 2
            - Date = 3
            - File = 4
          type: integer
          format: int32
        inputValues:
          type: array
          items:
            type: string
          nullable: true
        memberValue:
          type: string
          nullable: true
        isRequired:
          type: boolean
      additionalProperties: false
    CartProductParameterModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        inputType:
          enum:
            - Text = 0
            - CheckBox = 1
            - RadioButton = 2
            - Date = 3
            - File = 4
          type: integer
          format: int32
        inputValues:
          type: array
          items:
            type: string
          nullable: true
        memberValue:
          type: string
          nullable: true
      additionalProperties: false
    CartProductParametersResponseModel:
      type: object
      properties:
        filePath:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
      additionalProperties: false
    CartProductParametersResponseModelStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CartProductParametersResponseModel'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CartQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        detail:
          type: array
          items:
            $ref: '#/components/schemas/CartDetailQuery'
          nullable: true
        shippingAddress:
          type: string
          nullable: true
        invoiceAddress:
          type: string
          nullable: true
        orderNote:
          type: string
          nullable: true
        orderId:
          type: string
          nullable: true
        cartInstallmentInfo:
          $ref: '#/components/schemas/CartInstallmentInfoQuery'
        cargo:
          $ref: '#/components/schemas/CargoPriceResponseModel'
      additionalProperties: false
    CartQueryCartCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CartQuery'
        model:
          $ref: '#/components/schemas/CartCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CartQueryCartInstallmentUpdateRequestApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CartQuery'
        model:
          $ref: '#/components/schemas/CartInstallmentUpdateRequest'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CartQueryCartItemMerchantChangeModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CartQuery'
        model:
          $ref: '#/components/schemas/CartItemMerchantChangeModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CartQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CartQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CartQueryUpdateAmountModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CartQuery'
        model:
          $ref: '#/components/schemas/UpdateAmountModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CartQueryUpdateCartOrderInfoModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CartQuery'
        model:
          $ref: '#/components/schemas/UpdateCartOrderInfoModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CartResponseListModel:
      type: object
      properties:
        finalCart:
          $ref: '#/components/schemas/CartQuery'
        notAddedCarts:
          type: array
          items:
            $ref: '#/components/schemas/CartErrorReason'
          nullable: true
      additionalProperties: false
    CartResponseListModelCartCreateListApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CartResponseListModel'
        model:
          type: array
          items:
            $ref: '#/components/schemas/CartCreate'
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CartSameLocProductModel:
      type: object
      properties:
        merchantId:
          type: string
          nullable: true
        merchantName:
          type: string
          nullable: true
        merchantSlug:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        productSlug:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
        price:
          type: number
          format: double
      additionalProperties: false
    Category:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        parentCategoryId:
          $ref: '#/components/schemas/ObjectId'
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
        seoDescription:
          type: string
          nullable: true
        commissionRate:
          type: number
          format: double
        termDayCount:
          type: integer
          format: int32
        isActive:
          type: boolean
        isPopular:
          type: boolean
        isVisibleInMenu:
          type: boolean
        isOpenToProduct:
          type: boolean
        logo:
          type: string
          nullable: true
        mobileLogo:
          type: string
          nullable: true
        maxInstallmentCount:
          type: integer
          format: int32
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
          nullable: true
        hasProduct:
          type: boolean
      additionalProperties: false
    CategoryBaseQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
      additionalProperties: false
    CategoryCleanQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        parentCategoryId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
        isActive:
          type: boolean
        isOpenToProduct:
          type: boolean
        isPopular:
          type: boolean
        logo:
          type: string
          nullable: true
        mobileLogo:
          type: string
          nullable: true
        isVisibleInMenu:
          type: boolean
      additionalProperties: false
    CategoryCleanQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/CategoryCleanQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CategoryCreate:
      type: object
      properties:
        parentCategoryId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
        seoDescription:
          type: string
          nullable: true
        commissionRate:
          type: number
          format: double
        termDayCount:
          type: integer
          format: int32
        maxInstallmentCount:
          type: integer
          format: int32
        isActive:
          type: boolean
        isVisibleInMenu:
          type: boolean
      additionalProperties: false
    CategoryMerchantQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        parentCategoryId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
        isActive:
          type: boolean
        isOpenToProduct:
          type: boolean
        isPopular:
          type: boolean
        logo:
          type: string
          nullable: true
        mobileLogo:
          type: string
          nullable: true
        isVisibleInMenu:
          type: boolean
        commissionRate:
          type: number
          format: double
        termDayCount:
          type: integer
          format: int32
      additionalProperties: false
    CategoryMerchantQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/CategoryMerchantQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CategoryQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        parentCategoryId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
        seoDescription:
          type: string
          nullable: true
        commissionRate:
          type: number
          format: double
        logo:
          type: string
          nullable: true
        mobileLogo:
          type: string
          nullable: true
        maxInstallmentCount:
          type: integer
          format: int32
        termDayCount:
          type: integer
          format: int32
        isActive:
          type: boolean
        isVisibleInMenu:
          type: boolean
        isActiveString:
          type: string
          nullable: true
          readOnly: true
        isPopular:
          type: boolean
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
          nullable: true
        parentCategory:
          $ref: '#/components/schemas/CategoryQuery'
      additionalProperties: false
    CategoryQueryCategoryCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CategoryQuery'
        model:
          $ref: '#/components/schemas/CategoryCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CategoryQueryCategoryUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CategoryQuery'
        model:
          $ref: '#/components/schemas/CategoryUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CategoryQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/CategoryQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CategoryQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CategoryQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CategoryRowNumberUpdate:
      type: object
      properties:
        id:
          type: string
          nullable: true
        parentCategoryId:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
      additionalProperties: false
    CategoryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/Category'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CategoryTreeView:
      type: object
      properties:
        parentCategory:
          $ref: '#/components/schemas/CategoryCleanQuery'
        subCategories:
          type: array
          items:
            $ref: '#/components/schemas/SubCategory'
          nullable: true
      additionalProperties: false
    CategoryUpdate:
      type: object
      properties:
        id:
          type: string
          nullable: true
        parentCategoryId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
        seoDescription:
          type: string
          nullable: true
        commissionRate:
          type: number
          format: double
        termDayCount:
          type: integer
          format: int32
        isActive:
          type: boolean
        maxInstallmentCount:
          type: integer
          format: int32
        isVisibleInMenu:
          type: boolean
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
          nullable: true
      additionalProperties: false
    CommentInfo:
      type: object
      properties:
        count:
          type: integer
          format: int32
        point:
          type: number
          format: double
      additionalProperties: false
    CompletedRefundRequest:
      type: object
      properties:
        merchantId:
          type: string
          nullable: true
        orderDateStart:
          type: string
          format: date-time
          nullable: true
        orderDateEnd:
          type: string
          format: date-time
          nullable: true
        orderNo:
          type: string
          nullable: true
        memberEmail:
          type: string
          nullable: true
      additionalProperties: false
    ContestedReportRequest:
      type: object
      properties:
        orderId:
          type: string
          nullable: true
        orderDetailId:
          type: string
          nullable: true
        contestedMessage:
          type: string
          nullable: true
      additionalProperties: false
    ContractQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        tag:
          type: string
          nullable: true
        caption:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
        isActive:
          type: boolean
        type:
          enum:
            - Merchant = 1
            - Member = 2
            - Sales = 3
          type: integer
          format: int32
        replaceable:
          type: boolean
        contractText:
          type: string
          nullable: true
      additionalProperties: false
    Contracts:
      type: object
      properties:
        caption:
          type: string
          nullable: true
        contract:
          type: string
          nullable: true
      additionalProperties: false
    CountyFilterModel:
      type: object
      properties:
        cityName:
          type: string
          nullable: true
      additionalProperties: false
    CreateOrderRequest:
      type: object
      properties:
        orderNote:
          type: string
          nullable: true
        memberId:
          $ref: '#/components/schemas/ObjectId'
        userAgent:
          type: string
          nullable: true
        secretKey:
          type: string
          nullable: true
        shippingAddressId:
          type: string
          nullable: true
        invoiceAddressId:
          type: string
          nullable: true
        userCultureName:
          type: string
          nullable: true
      additionalProperties: false
    CreateOrderVM:
      type: object
      properties:
        orderId:
          type: string
          nullable: true
        orderNo:
          type: string
          nullable: true
      additionalProperties: false
    CreatePaymentRequest:
      type: object
      properties:
        locale:
          type: string
          nullable: true
        conversationId:
          type: string
          nullable: true
        price:
          type: string
          nullable: true
        paidPrice:
          type: string
          nullable: true
        installment:
          type: integer
          format: int32
          nullable: true
        paymentChannel:
          type: string
          nullable: true
        basketId:
          type: string
          nullable: true
        paymentGroup:
          type: string
          nullable: true
        paymentCard:
          $ref: '#/components/schemas/PaymentCard'
        buyer:
          $ref: '#/components/schemas/Buyer'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        billingAddress:
          $ref: '#/components/schemas/Address'
        basketItems:
          type: array
          items:
            $ref: '#/components/schemas/BasketItem'
          nullable: true
        callbackUrl:
          type: string
          nullable: true
        currency:
          type: string
          nullable: true
      additionalProperties: false
    CustomProductAlarmsRequestModel:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
      additionalProperties: false
    CustomProductAlarmsResponseModel:
      type: object
      properties:
        isFavorite:
          type: boolean
        isPriceAlarm:
          type: boolean
        isStockAlarm:
          type: boolean
      additionalProperties: false
    CustomProductAlarmsResponseModelStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CustomProductAlarmsResponseModel'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CustomUserMerchantQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        memberId:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        merchant:
          $ref: '#/components/schemas/MerchantWebQuery'
      additionalProperties: false
    CustomUserMerchantQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/CustomUserMerchantQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CustomUserProductPriceAlarm:
      type: object
      properties:
        alarmPrice:
          type: number
          format: double
        email:
          type: string
          nullable: true
      additionalProperties: false
    CustomUserProductPriceAlarmMember:
      type: object
      properties:
        alarmPrice:
          type: number
          format: double
      additionalProperties: false
    CustomUserProductQuery:
      required:
        - customUserProductType
      type: object
      properties:
        id:
          type: string
          nullable: true
        memberId:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        price:
          type: number
          format: double
        createdDate:
          type: string
          format: date-time
        mailSendDate:
          type: string
          format: date-time
          nullable: true
        customUserProductType:
          enum:
            - FavoriteProduct = 1
            - Discount = 2
            - StockEntry = 3
          type: integer
          format: int32
        isActive:
          type: boolean
        product:
          $ref: '#/components/schemas/ProductQuery'
      additionalProperties: false
    CustomUserProductQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/CustomUserProductQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    CustomUserProductStockAlarm:
      type: object
      properties:
        alarmPrice:
          type: number
          format: double
        email:
          type: string
          nullable: true
      additionalProperties: false
    DateFilter:
      type: object
      properties:
        start:
          type: string
          format: date-time
          nullable: true
        end:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    DateRangeFilter:
      type: object
      properties:
        start:
          type: string
          format: date-time
          nullable: true
        end:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    DeleteFileModel:
      type: object
      properties:
        fileIds:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    DeleteMerchantImage:
      type: object
      properties:
        fileUrls:
          type: array
          items:
            type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
      additionalProperties: false
    DeliveryAddress:
      type: object
      properties:
        fullName:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        county:
          type: string
          nullable: true
        district:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        addressText:
          type: string
          nullable: true
      additionalProperties: false
    DeliveryAddressQuery:
      type: object
      properties:
        fullName:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        county:
          type: string
          nullable: true
        district:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        addressText:
          type: string
          nullable: true
      additionalProperties: false
    Detail:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        merchantOrderId:
          $ref: '#/components/schemas/ObjectId'
        merchantOrderNo:
          type: string
          nullable: true
        merchantId:
          $ref: '#/components/schemas/ObjectId'
        categoryId:
          $ref: '#/components/schemas/ObjectId'
        productId:
          $ref: '#/components/schemas/ObjectId'
        productName:
          type: string
          nullable: true
        variantId:
          $ref: '#/components/schemas/ObjectId'
        unitPrice:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        subTotal:
          type: number
          format: double
        vatRate:
          type: integer
          format: int32
        vatTotal:
          type: number
          format: double
        totalPrice:
          type: number
          format: double
        unitPriceWithoutInstallment:
          type: number
          format: double
          nullable: true
        orderState:
          enum:
            - OrderPendingApprovement = 1
            - OrderApproved = 2
            - OrderPrepairing = 3
            - OrderShipped = 4
            - OrderDelivered = 5
            - OrderCanceled = 6
            - ProductRefundRequest = 7
            - ProductRefund = 8
            - ProductAwaitingSpecialRefundApproval = 9
            - ProductAwaitingSpecialRefundApproved = 10
            - ProductAwaitingSpecialRefundRejected = 11
            - OrderPaymentFailed = 12
          type: integer
          format: int32
        orderPaymentState:
          enum:
            - OrderPendingPayment = 1
            - OrderPaymentReceived = 2
            - OrderPendingPaymentRefund = 3
            - OrderPaymentRefund = 4
          type: integer
          format: int32
        paymentDate:
          type: string
          format: date-time
        merchantPaymentDate:
          type: string
          format: date-time
          nullable: true
        unitCargoPrice:
          type: number
          format: double
        cancelOrderDate:
          type: string
          format: date-time
          nullable: true
        cancelMessage:
          type: string
          nullable: true
        cargoFinalDeliveryDate:
          type: string
          format: date-time
        cargoCompany:
          enum:
            - YUTRICI = 1
            - ARAS = 2
            - MNG = 3
            - SURAT = 4
            - PTT = 5
            - UPS = 6
            - HOROZ = 7
            - CEVA = 8
            - BORUSAN = 9
            - FILLO = 10
            - TNT = 11
            - DHL = 12
            - InterGlobal = 13
          type: integer
          format: int32
        cargoTrackingNumber:
          type: string
          nullable: true
        cargoDeliveredDate:
          type: string
          format: date-time
        refundReasonType:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          type: integer
          format: int32
          nullable: true
        refundReasonMessage:
          type: string
          nullable: true
        refundQuantity:
          type: integer
          format: int32
        refundCargoTrackingNumber:
          type: string
          nullable: true
        refundCargoCompany:
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
          type: integer
          format: int32
          nullable: true
        isContested:
          type: boolean
        contestedDescription:
          type: string
          nullable: true
        refundDate:
          type: string
          format: date-time
          nullable: true
        refundPaymentDate:
          type: string
          format: date-time
          nullable: true
        paymentTransactionId:
          type: string
          nullable: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/OrderMessages'
          nullable: true
        returnLimitDescription:
          type: string
          nullable: true
        returnLimitFiles:
          type: array
          items:
            type: string
          nullable: true
        returnLimitCreateDate:
          type: string
          format: date-time
        returnLimitActionDate:
          type: string
          format: date-time
        productParameters:
          type: array
          items:
            $ref: '#/components/schemas/CartProductParameter'
          nullable: true
        isMerchantPaymentCompleted:
          type: boolean
        cargoDeliveryNumber:
          type: string
          nullable: true
      additionalProperties: false
    DetailQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        barcode:
          type: string
          nullable: true
        stockCode:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
        coverPic:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        unitPrice:
          type: number
          format: double
        unitPriceWithoutInstallment:
          type: number
          format: double
          nullable: true
        vatRate:
          type: integer
          format: int32
        vatTotal:
          type: number
          format: double
        totalPrice:
          type: number
          format: double
        orderState:
          enum:
            - OrderPendingApprovement = 1
            - OrderApproved = 2
            - OrderPrepairing = 3
            - OrderShipped = 4
            - OrderDelivered = 5
            - OrderCanceled = 6
            - ProductRefundRequest = 7
            - ProductRefund = 8
            - ProductAwaitingSpecialRefundApproval = 9
            - ProductAwaitingSpecialRefundApproved = 10
            - ProductAwaitingSpecialRefundRejected = 11
            - OrderPaymentFailed = 12
          type: integer
          format: int32
        orderPaymentState:
          enum:
            - OrderPendingPayment = 1
            - OrderPaymentReceived = 2
            - OrderPendingPaymentRefund = 3
            - OrderPaymentRefund = 4
          type: integer
          format: int32
        returnLimitDescription:
          type: string
          nullable: true
        returnLimitFiles:
          type: array
          items:
            type: string
          nullable: true
        merchant:
          $ref: '#/components/schemas/MerchantQuery'
        merchantId:
          type: string
          nullable: true
        returnLimitCreateDate:
          type: string
          format: date-time
        returnLimitActionDate:
          type: string
          format: date-time
        productParameters:
          type: array
          items:
            $ref: '#/components/schemas/CartProductParameter'
          nullable: true
        cargoDeliveryNumber:
          type: string
          nullable: true
        cargoCompany:
          enum:
            - YUTRICI = 1
            - ARAS = 2
            - MNG = 3
            - SURAT = 4
            - PTT = 5
            - UPS = 6
            - HOROZ = 7
            - CEVA = 8
            - BORUSAN = 9
            - FILLO = 10
            - TNT = 11
            - DHL = 12
            - InterGlobal = 13
          type: integer
          format: int32
      additionalProperties: false
    DistrictFilterModel:
      type: object
      properties:
        cityName:
          type: string
          nullable: true
        countyName:
          type: string
          nullable: true
      additionalProperties: false
    DistrictQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        districtName:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
      additionalProperties: false
    EmptyResult:
      type: object
      additionalProperties: false
    FeedbackCreate:
      type: object
      properties:
        url:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        userAgent:
          type: string
          nullable: true
      additionalProperties: false
    FeedbackFilterModel:
      type: object
      properties:
        query:
          type: string
          nullable: true
        date:
          $ref: '#/components/schemas/DateRangeFilter'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
          nullable: true
        feedbackState:
          enum:
            - 0
            - 1
            - 2
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    FeedbackQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        feedBackState:
          enum:
            - NewRecord = 0
            - UnderReview = 1
            - Completed = 2
          type: integer
          format: int32
        feedBackStateString:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        userNameSurname:
          type: string
          nullable: true
        userEmail:
          type: string
          nullable: true
        createdDate:
          type: string
          format: date-time
        createdDateString:
          type: string
          nullable: true
        alteredDate:
          type: string
          format: date-time
          nullable: true
        alteredDateString:
          type: string
          nullable: true
        userAgent:
          type: string
          nullable: true
      additionalProperties: false
    FeedbackQueryFeedbackCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/FeedbackQuery'
        model:
          $ref: '#/components/schemas/FeedbackCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    FeedbackQueryFeedbackStateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/FeedbackQuery'
        model:
          enum:
            - NewRecord = 0
            - UnderReview = 1
            - Completed = 2
          type: integer
          format: int32
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    FeedbackQueryListFeedbackFilterModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackQuery'
          nullable: true
        model:
          $ref: '#/components/schemas/FeedbackFilterModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    File:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        documentName:
          type: string
          nullable: true
        uploaderId:
          $ref: '#/components/schemas/ObjectId'
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        folder:
          type: string
          nullable: true
        resolution:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        uploadedDate:
          type: string
          format: date-time
      additionalProperties: false
    FileQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        documentName:
          type: string
          nullable: true
        uploaderId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        folder:
          type: string
          nullable: true
        resolution:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        uploadedDate:
          type: string
          format: date-time
      additionalProperties: false
    FileQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/FileQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    FileStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/File'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    FileTag:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        uploaderId:
          $ref: '#/components/schemas/ObjectId'
        tag:
          type: string
          nullable: true
      additionalProperties: false
    FileTagListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/FileTag'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    FileUpdate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
      additionalProperties: false
    FixedPageSettingCreate:
      required:
        - name
        - pageHeader
        - slug
      type: object
      properties:
        name:
          minLength: 1
          type: string
        slug:
          minLength: 1
          type: string
        pageHeader:
          minLength: 1
          type: string
        content:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
      additionalProperties: false
    FixedPageSettingQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        pageHeader:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
      additionalProperties: false
    FixedPageSettingQueryFixedPageSettingCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/FixedPageSettingQuery'
        model:
          $ref: '#/components/schemas/FixedPageSettingCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    FixedPageSettingQueryFixedPageSettingUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/FixedPageSettingQuery'
        model:
          $ref: '#/components/schemas/FixedPageSettingUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    FixedPageSettingQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/FixedPageSettingQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    FixedPageSettingQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/FixedPageSettingQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    FixedPageSettingUpdate:
      required:
        - name
        - pageHeader
        - slug
      type: object
      properties:
        name:
          minLength: 1
          type: string
        slug:
          minLength: 1
          type: string
        pageHeader:
          minLength: 1
          type: string
        content:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
      additionalProperties: false
    ForgotPasswordModel:
      required:
        - eMail
      type: object
      properties:
        eMail:
          maxLength: 50
          minLength: 0
          type: string
          format: email
      additionalProperties: false
    GetActivityLogsByProductIdOutput:
      type: object
      properties:
        productActivityLogs:
          type: array
          items:
            $ref: '#/components/schemas/ProductActivityLog'
          nullable: true
      additionalProperties: false
    GetAllApprovedMerchantsOutput:
      type: object
      properties:
        merchants:
          type: array
          items:
            $ref: '#/components/schemas/ApprovedMerchant'
          nullable: true
      additionalProperties: false
    GetAllApprovedMerchantsOutputStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/GetAllApprovedMerchantsOutput'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    GetAllWebApprovedMerchantsOutput:
      type: object
      properties:
        merchants:
          type: array
          items:
            $ref: '#/components/schemas/WebApprovedMerchant'
          nullable: true
      additionalProperties: false
    GetContentRequestModel:
      type: object
      properties:
        documentName:
          type: string
          nullable: true
        searchQuery:
          type: string
          nullable: true
        tag:
          type: string
          nullable: true
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
      additionalProperties: false
    GetGalleryResponseModel:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileQuery'
          nullable: true
        count:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    GetGalleryResponseModelGetContentRequestModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/GetGalleryResponseModel'
        model:
          $ref: '#/components/schemas/GetContentRequestModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    GetMerchantLocationsOutput:
      type: object
      properties:
        id:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        cities:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    GetMerchantLocationsOutputStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/GetMerchantLocationsOutput'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    GetMerchantOrderRequest:
      type: object
      properties:
        orderState:
          enum:
            - OrderPendingApprovement = 1
            - OrderApproved = 2
            - OrderPrepairing = 3
            - OrderShipped = 4
            - OrderDelivered = 5
            - OrderCanceled = 6
            - ProductRefundRequest = 7
            - ProductRefund = 8
            - ProductAwaitingSpecialRefundApproval = 9
            - ProductAwaitingSpecialRefundApproved = 10
            - ProductAwaitingSpecialRefundRejected = 11
            - OrderPaymentFailed = 12
          type: integer
          format: int32
      additionalProperties: false
    GetProductDescriptionHistoriesOutput:
      type: object
      properties:
        productDescriptionHistories:
          type: array
          items:
            $ref: '#/components/schemas/ProductDescriptionHistoryModel'
          nullable: true
      additionalProperties: false
    GiftVoucherCreate:
      type: object
      properties:
        memberId:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        used:
          type: boolean
        createdDate:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
          nullable: true
        usedDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    GiftVoucherQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        memberId:
          type: string
          nullable: true
        member:
          $ref: '#/components/schemas/MemberQuery'
        code:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        used:
          type: boolean
        createdDate:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
          nullable: true
        usedDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    GiftVoucherQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/GiftVoucherQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    GiftVoucherQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/GiftVoucherQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    GiftVoucherUpdate:
      type: object
      properties:
        amount:
          type: number
          format: double
        dueDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    IdNameModel:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    IdNameSlugModel:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
      additionalProperties: false
    InstallmentDetail:
      type: object
      properties:
        binNumber:
          type: string
          nullable: true
        price:
          type: string
          nullable: true
        cardType:
          type: string
          nullable: true
        cardAssociation:
          type: string
          nullable: true
        cardFamilyName:
          type: string
          nullable: true
        force3Ds:
          type: integer
          format: int32
          nullable: true
        bankCode:
          type: integer
          format: int64
          nullable: true
        bankName:
          type: string
          nullable: true
        forceCvc:
          type: integer
          format: int32
          nullable: true
        installmentPrices:
          type: array
          items:
            $ref: '#/components/schemas/InstallmentPrice'
          nullable: true
      additionalProperties: false
    InstallmentPrice:
      type: object
      properties:
        price:
          type: string
          nullable: true
        totalPrice:
          type: string
          nullable: true
        installmentNumber:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    Int32StringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: integer
          format: int32
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    Int64StringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: integer
          format: int64
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    IntegrationDocCreate:
      type: object
      properties:
        pageName:
          type: string
          nullable: true
        active:
          type: boolean
        data:
          type: string
          nullable: true
      additionalProperties: false
    IntegrationDocQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        pageName:
          type: string
          nullable: true
        active:
          type: boolean
        lastModifiedDate:
          type: string
          format: date-time
        data:
          type: string
          nullable: true
      additionalProperties: false
    IntegrationDocQueryIntegrationDocCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/IntegrationDocQuery'
        model:
          $ref: '#/components/schemas/IntegrationDocCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    IntegrationDocQueryIntegrationDocUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/IntegrationDocQuery'
        model:
          $ref: '#/components/schemas/IntegrationDocUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    IntegrationDocQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationDocQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    IntegrationDocQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/IntegrationDocQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    IntegrationDocUpdate:
      type: object
      properties:
        pageName:
          type: string
          nullable: true
        active:
          type: boolean
        data:
          type: string
          nullable: true
      additionalProperties: false
    IntegrationDocUpdateStatus:
      type: object
      properties:
        active:
          type: boolean
      additionalProperties: false
    IntegrationDocUpdateStatusIntegrationDocUpdateStatusApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/IntegrationDocUpdateStatus'
        model:
          $ref: '#/components/schemas/IntegrationDocUpdateStatus'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    IntegratorNewProduct:
      type: object
      properties:
        name:
          type: string
          nullable: true
        brand:
          type: string
          nullable: true
        categoryId:
          type: string
          nullable: true
        desc:
          type: string
          nullable: true
        desi:
          type: integer
          format: int32
        vatRate:
          type: integer
          format: int32
        isInstallmentPayment:
          type: boolean
        barcode:
          type: string
          nullable: true
        listPrice:
          type: number
          format: double
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
          nullable: true
      additionalProperties: false
    IntegratorNewProductResultModel:
      type: object
      properties:
        barcode:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        result:
          enum:
            - Success = 0
            - Error = 1
          type: integer
          format: int32
        resultMessage:
          type: string
          nullable: true
      additionalProperties: false
    IntegratorNewProductResultModelListIntegratorNewProductListApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/IntegratorNewProductResultModel'
          nullable: true
        model:
          type: array
          items:
            $ref: '#/components/schemas/IntegratorNewProduct'
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    IntegratorOrderFilterRequest:
      type: object
      properties:
        orderState:
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
          type: integer
          format: int32
          nullable: true
        orderDateStart:
          type: string
          format: date-time
          nullable: true
        orderDateEnd:
          type: string
          format: date-time
          nullable: true
        orderNo:
          type: string
          nullable: true
      additionalProperties: false
    IntegratorSetWebhookEndPointModel:
      type: object
      properties:
        url:
          type: string
          nullable: true
      additionalProperties: false
    IntegratorUpdateOnSaleViewModel:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
      additionalProperties: false
    IntegratorUpdatePriceAndStockAmountViewModel:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
        price:
          type: number
          format: double
        stockAmount:
          type: integer
          format: int32
      additionalProperties: false
    IntegratorUpdatePriceViewModel:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
        price:
          type: number
          format: double
      additionalProperties: false
    IntegratorUpdateStockAmountViewModel:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
        stockAmount:
          type: integer
          format: int32
      additionalProperties: false
    InvoiceAddress:
      type: object
      properties:
        fullName:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        county:
          type: string
          nullable: true
        district:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        addressText:
          type: string
          nullable: true
        isCorporateInvoice:
          type: boolean
        taxOffice:
          type: string
          nullable: true
        taxNo:
          type: string
          nullable: true
      additionalProperties: false
    InvoiceAddressQuery:
      type: object
      properties:
        fullName:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        county:
          type: string
          nullable: true
        district:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        addressText:
          type: string
          nullable: true
        isCorporateInvoice:
          type: boolean
        taxOffice:
          type: string
          nullable: true
        taxNo:
          type: string
          nullable: true
      additionalProperties: false
    IsHideModel:
      type: object
      properties:
        isHide:
          type: boolean
      additionalProperties: false
    ItemTransaction:
      type: object
      properties:
        itemId:
          type: string
          nullable: true
        paymentTransactionId:
          type: string
          nullable: true
      additionalProperties: false
    IyzicoSettingModel:
      type: object
      properties:
        apiKey:
          type: string
          nullable: true
        secretKey:
          type: string
          nullable: true
        uri:
          type: string
          nullable: true
      additionalProperties: false
    LeadDataCreate:
      required:
        - email
        - nameSurname
        - type
      type: object
      properties:
        nameSurname:
          maxLength: 130
          minLength: 0
          type: string
        email:
          maxLength: 50
          minLength: 0
          type: string
          format: email
        type:
          enum:
            - Merchant = 0
            - Member = 1
          type: integer
          format: int32
      additionalProperties: false
    LeadDataQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        nameSurname:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        type:
          enum:
            - Merchant = 0
            - Member = 1
          type: integer
          format: int32
        phone:
          type: string
          nullable: true
        createDate:
          type: string
          format: date-time
        contactDate:
          type: string
          format: date-time
          nullable: true
        note:
          type: string
          nullable: true
        accountCreated:
          type: boolean
        memberId:
          type: string
          nullable: true
        giftVoucherDefined:
          type: boolean
        giftVoucherAmount:
          type: number
          format: double
        giftVoucherCode:
          type: string
          nullable: true
      additionalProperties: false
    LeadDataQueryEmptyResultApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/LeadDataQuery'
        model:
          $ref: '#/components/schemas/EmptyResult'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    LeadDataQueryLeadDataCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/LeadDataQuery'
        model:
          $ref: '#/components/schemas/LeadDataCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    LeadDataQueryLeadDataUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/LeadDataQuery'
        model:
          $ref: '#/components/schemas/LeadDataUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    LeadDataQueryListEmptyResultApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/LeadDataQuery'
          nullable: true
        model:
          $ref: '#/components/schemas/EmptyResult'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    LeadDataUpdate:
      type: object
      properties:
        nameSurname:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        type:
          enum:
            - Merchant = 0
            - Member = 1
          type: integer
          format: int32
        phone:
          type: string
          nullable: true
        contactDate:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        giftVoucherAmount:
          type: number
          format: double
      additionalProperties: false
    LocationCreate:
      type: object
      properties:
        cityName:
          type: string
          nullable: true
        countyName:
          type: string
          nullable: true
        districtName:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        cityCode:
          type: string
          nullable: true
        districtCode:
          type: string
          nullable: true
      additionalProperties: false
    LocationQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        cityName:
          type: string
          nullable: true
        countyName:
          type: string
          nullable: true
        districtName:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        cityCode:
          type: string
          nullable: true
        districtCode:
          type: string
          nullable: true
      additionalProperties: false
    LocationQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/LocationQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    LocationQueryLocationCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/LocationQuery'
        model:
          $ref: '#/components/schemas/LocationCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    LocationQueryLocationUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/LocationQuery'
        model:
          $ref: '#/components/schemas/LocationUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    LocationQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/LocationQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    LocationUpdate:
      type: object
      properties:
        cityName:
          type: string
          nullable: true
        countyName:
          type: string
          nullable: true
        districtName:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        cityCode:
          type: string
          nullable: true
        districtCode:
          type: string
          nullable: true
      additionalProperties: false
    Log:
      required:
        - appId
        - workspaceId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        workspaceId:
          $ref: '#/components/schemas/ObjectId'
        appId:
          $ref: '#/components/schemas/ObjectId'
        type:
          enum:
            - error = 0
            - info = 1
            - warning = 2
            - debug = 3
          type: integer
          format: int32
        type2:
          type: string
          nullable: true
        created:
          type: string
          format: date-time
        createdStr:
          type: string
          nullable: true
        identity:
          type: string
          nullable: true
        identityStr:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        desc:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        ip:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        entityId:
          type: string
          nullable: true
        entityType:
          type: string
          nullable: true
      additionalProperties: false
    LogCreate:
      type: object
      properties:
        type:
          enum:
            - error = 0
            - info = 1
            - warning = 2
            - debug = 3
          type: integer
          format: int32
        type2:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        created:
          type: string
          format: date-time
        createdStr:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        identity:
          type: string
          nullable: true
        identityStr:
          type: string
          nullable: true
        desc:
          type: string
          nullable: true
        entityId:
          type: string
          nullable: true
        entityType:
          type: string
          nullable: true
        ip:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
      additionalProperties: false
    LogLogCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/Log'
        model:
          $ref: '#/components/schemas/LogCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    LogSelectFilterViewModel:
      type: object
      properties:
        created:
          $ref: '#/components/schemas/DateFilter'
        identity:
          type: string
          nullable: true
        ip:
          type: string
          nullable: true
        type:
          enum:
            - 0
            - 1
            - 2
            - 3
          type: integer
          format: int32
          nullable: true
        type2:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
      additionalProperties: false
    LogViewModel:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/Log'
          nullable: true
      additionalProperties: false
    MaazaNameAndSlugModel:
      type: object
      properties:
        maazaName:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
      additionalProperties: false
    MaxInstallmentCountUpdateModel:
      type: object
      properties:
        maxInstallmentCount:
          type: integer
          format: int32
      additionalProperties: false
    MemberApnsIdCreate:
      type: object
      properties:
        memberId:
          type: string
          nullable: true
        apnsId:
          type: string
          nullable: true
        mobileOS:
          type: string
          nullable: true
      additionalProperties: false
    MemberContract:
      type: object
      properties:
        tag:
          type: string
          nullable: true
        caption:
          type: string
          nullable: true
        fileUrl:
          type: string
          nullable: true
      additionalProperties: false
    MemberCreate:
      required:
        - eMail
        - name
        - password
        - rePassword
      type: object
      properties:
        name:
          maxLength: 30
          minLength: 0
          type: string
        eMail:
          maxLength: 50
          minLength: 0
          type: string
          format: email
        password:
          maxLength: 16
          minLength: 8
          type: string
          format: password
        rePassword:
          maxLength: 16
          minLength: 8
          type: string
          format: password
        phoneNumber:
          type: string
          nullable: true
        birthDay:
          type: string
          nullable: true
        mobile:
          $ref: '#/components/schemas/MemberMobile'
        resetCode:
          type: string
          nullable: true
        resetCodeVerifyTime:
          type: string
          format: date-time
        notificationPermission:
          type: boolean
      additionalProperties: false
    MemberMobile:
      type: object
      properties:
        apnsId:
          type: string
          nullable: true
        mobileOS:
          type: string
          nullable: true
      additionalProperties: false
    MemberQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
        photo:
          type: string
          nullable: true
        confirmCode:
          type: string
          nullable: true
        confirm:
          type: boolean
        confirmString:
          type: string
          nullable: true
        active:
          type: boolean
        activeString:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        birthDay:
          type: string
          nullable: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/AddressQuery'
          nullable: true
        mobile:
          $ref: '#/components/schemas/MemberMobile'
        notificationPermission:
          type: boolean
      additionalProperties: false
    MemberQueryAddressCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MemberQuery'
        model:
          $ref: '#/components/schemas/AddressCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MemberQueryAddressUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MemberQuery'
        model:
          $ref: '#/components/schemas/AddressUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MemberQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/MemberQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MemberQueryMemberCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MemberQuery'
        model:
          $ref: '#/components/schemas/MemberCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MemberQueryMemberUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MemberQuery'
        model:
          $ref: '#/components/schemas/MemberUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MemberQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MemberQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MemberUpdate:
      required:
        - eMail
        - name
      type: object
      properties:
        name:
          maxLength: 30
          minLength: 0
          type: string
        eMail:
          maxLength: 50
          minLength: 0
          type: string
          format: email
        phoneNumber:
          type: string
          nullable: true
        birthDay:
          type: string
          nullable: true
      additionalProperties: false
    MemberUpdateEmailVerification:
      required:
        - confirmCode
        - memberId
      type: object
      properties:
        confirmCode:
          minLength: 1
          type: string
        memberId:
          minLength: 1
          type: string
      additionalProperties: false
    MemberUpdatePassword:
      required:
        - password
        - rePassword
      type: object
      properties:
        password:
          maxLength: 16
          minLength: 8
          type: string
          format: password
        rePassword:
          maxLength: 16
          minLength: 8
          type: string
          format: password
      additionalProperties: false
    MerchantAppealBankUpdate:
      type: object
      properties:
        bankOwner:
          type: string
          nullable: true
        bankName:
          type: string
          nullable: true
        branchName:
          type: string
          nullable: true
        branchCode:
          type: string
          nullable: true
        accountNumber:
          type: string
          nullable: true
        iban:
          type: string
          nullable: true
      additionalProperties: false
    MerchantAppealCompanyUpdate:
      type: object
      properties:
        companyCommercialTitle:
          type: string
          nullable: true
        companyContactEMail:
          type: string
          nullable: true
        companyContactPhone:
          type: string
          nullable: true
        companyFaxNo:
          type: string
          nullable: true
        companyWebSiteUrl:
          type: string
          nullable: true
        companyType:
          type: string
          nullable: true
        companyMersisNo:
          type: string
          nullable: true
        companyCommercialRegisterNo:
          type: string
          nullable: true
        companyKepEMailAddress:
          type: string
          nullable: true
      additionalProperties: false
    MerchantAppealCreate:
      type: object
      properties:
        maazaName:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        maazaLink:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        confirmPassword:
          type: string
          nullable: true
        companyCommercialTitle:
          type: string
          nullable: true
        companyContactEMail:
          type: string
          nullable: true
        companyContactPhone:
          type: string
          nullable: true
        companyFaxNo:
          type: string
          nullable: true
        companyWebSiteUrl:
          type: string
          nullable: true
        companyType:
          type: string
          nullable: true
        companyMersisNo:
          type: string
          nullable: true
        companyCommercialRegisterNo:
          type: string
          nullable: true
        companyKepEMailAddress:
          type: string
          nullable: true
        bankOwner:
          type: string
          nullable: true
        bankName:
          type: string
          nullable: true
        branchName:
          type: string
          nullable: true
        branchCode:
          type: string
          nullable: true
        accountNumber:
          type: string
          nullable: true
        iban:
          type: string
          nullable: true
        invoiceCity:
          type: string
          nullable: true
        invoiceState:
          type: string
          nullable: true
        invoiceDistrict:
          type: string
          nullable: true
        invoicePostalCode:
          type: string
          nullable: true
        invoiceCompanyAddress:
          type: string
          nullable: true
        invoiceEMailAddress:
          type: string
          nullable: true
        isInvoiceAddressDifferent:
          type: boolean
        invoiceShippingCity:
          type: string
          nullable: true
        invoiceShippingState:
          type: string
          nullable: true
        invoiceShippingDistrict:
          type: string
          nullable: true
        invoiceShippingPostalCode:
          type: string
          nullable: true
        invoiceShippingCompanyAddress:
          type: string
          nullable: true
        taxAdministrationCity:
          type: string
          nullable: true
        taxAdministrationName:
          type: string
          nullable: true
        taxNo:
          type: string
          nullable: true
        isEInvoicePayer:
          type: boolean
        isEArchivePayer:
          type: boolean
        companyProfile:
          type: string
          nullable: true
        hasAnotherECommerceSiteAccount:
          type: boolean
        otherECommerceSites:
          type: array
          items:
            type: string
          nullable: true
        signatoryNameSurname:
          type: string
          nullable: true
        signatorySex:
          type: string
          nullable: true
        signatoryTitle:
          type: string
          nullable: true
        signatoryEMailAddress:
          type: string
          nullable: true
        signatoryMobilePhoneNo:
          type: string
          nullable: true
        isSignatoryAndContactPersonSame:
          type: boolean
        contactNameSurname:
          type: string
          nullable: true
        contactSex:
          type: string
          nullable: true
        contactTitle:
          type: string
          nullable: true
        contactEMailAddress:
          type: string
          nullable: true
        contactMobilePhoneNo:
          type: string
          nullable: true
        vendorAgreementApproval:
          type: boolean
        ipAddress:
          type: string
          nullable: true
        createdDate:
          type: string
          format: date-time
        taxValidationControl:
          type: boolean
        bankValidationControl:
          type: boolean
        invoiceValidationControl:
          type: boolean
        companyValidationControl:
          type: boolean
        status:
          enum:
            - Approved = 1
            - Waiting = 2
            - Denied = 3
            - Control = 4
            - NewAppeal = 5
            - CancelMerchant = 6
          type: integer
          format: int32
        statusNote:
          type: string
          nullable: true
      additionalProperties: false
    MerchantAppealDeleteFileUrlModel:
      type: object
      properties:
        fileId:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
      additionalProperties: false
    MerchantAppealFileCreateFromAdmin:
      type: object
      properties:
        appealFileId:
          type: string
          nullable: true
        statusFrom:
          type: string
          nullable: true
        statusTo:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        message:
          type: string
          nullable: true
      additionalProperties: false
    MerchantAppealFileCreateFromMerchant:
      type: object
      properties:
        appealFileId:
          type: string
          nullable: true
        urls:
          type: array
          items:
            $ref: '#/components/schemas/MerchantAppealFileUrl'
          nullable: true
        statusFrom:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    MerchantAppealFileLog:
      type: object
      properties:
        statusFrom:
          type: string
          nullable: true
        statusTo:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        message:
          type: string
          nullable: true
      additionalProperties: false
    MerchantAppealFileQuery:
      type: object
      properties:
        appealFileId:
          type: string
          nullable: true
        appealFileQuery:
          $ref: '#/components/schemas/AppealFileQuery'
        urls:
          type: array
          items:
            $ref: '#/components/schemas/MerchantAppealFileUrl'
          nullable: true
        status:
          enum:
            - Waiting = 1
            - Control = 2
            - Approved = 3
          type: integer
          format: int32
        logs:
          type: array
          items:
            $ref: '#/components/schemas/MerchantAppealFileLog'
          nullable: true
      additionalProperties: false
    MerchantAppealFileQueryListMerchantAppealFileCreateFromAdminApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/MerchantAppealFileQuery'
          nullable: true
        model:
          $ref: '#/components/schemas/MerchantAppealFileCreateFromAdmin'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealFileQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/MerchantAppealFileQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealFileStatusUpdate:
      type: object
      properties:
        appealFileId:
          type: string
          nullable: true
        status:
          enum:
            - Waiting = 1
            - Control = 2
            - Approved = 3
          type: integer
          format: int32
        statusFrom:
          type: string
          nullable: true
        statusTo:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        message:
          type: string
          nullable: true
      additionalProperties: false
    MerchantAppealFileUrl:
      type: object
      properties:
        uploadDate:
          type: string
          format: date-time
        url:
          type: string
          nullable: true
      additionalProperties: false
    MerchantAppealInvoiceUpdate:
      type: object
      properties:
        invoiceCity:
          type: string
          nullable: true
        invoiceState:
          type: string
          nullable: true
        invoiceDistrict:
          type: string
          nullable: true
        invoicePostalCode:
          type: string
          nullable: true
        invoiceCompanyAddress:
          type: string
          nullable: true
        invoiceEMailAddress:
          type: string
          nullable: true
        isInvoiceAddressDifferent:
          type: boolean
        invoiceShippingCity:
          type: string
          nullable: true
        invoiceShippingState:
          type: string
          nullable: true
        invoiceShippingDistrict:
          type: string
          nullable: true
        invoiceShippingPostalCode:
          type: string
          nullable: true
        invoiceShippingCompanyAddress:
          type: string
          nullable: true
      additionalProperties: false
    MerchantAppealMembershipUpdate:
      type: object
      properties:
        maazaName:
          type: string
          nullable: true
        maazaLink:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
      additionalProperties: false
    MerchantAppealMessageCreate:
      type: object
      properties:
        direction:
          enum:
            - MerchantToEmployee = 1
            - EmployeeToMerchant = 2
          type: integer
          format: int32
        userId:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
      additionalProperties: false
    MerchantAppealMessageQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        isRead:
          type: boolean
        direction:
          enum:
            - MerchantToEmployee = 1
            - EmployeeToMerchant = 2
          type: integer
          format: int32
        userId:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
      additionalProperties: false
    MerchantAppealQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        maazaName:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        maazaLink:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        status:
          enum:
            - Approved = 1
            - Waiting = 2
            - Denied = 3
            - Control = 4
            - NewAppeal = 5
            - CancelMerchant = 6
          type: integer
          format: int32
        ipAddress:
          type: string
          nullable: true
        createdDate:
          type: string
          nullable: true
        companyCommercialTitle:
          type: string
          nullable: true
        companyContactEMail:
          type: string
          nullable: true
        companyContactPhone:
          type: string
          nullable: true
        companyFaxNo:
          type: string
          nullable: true
        companyWebSiteUrl:
          type: string
          nullable: true
        companyType:
          type: string
          nullable: true
        companyMersisNo:
          type: string
          nullable: true
        companyCommercialRegisterNo:
          type: string
          nullable: true
        companyKepEMailAddress:
          type: string
          nullable: true
        bankOwner:
          type: string
          nullable: true
        bankName:
          type: string
          nullable: true
        branchName:
          type: string
          nullable: true
        branchCode:
          type: string
          nullable: true
        accountNumber:
          type: string
          nullable: true
        iban:
          type: string
          nullable: true
        invoiceCity:
          type: string
          nullable: true
        invoiceState:
          type: string
          nullable: true
        invoiceDistrict:
          type: string
          nullable: true
        invoicePostalCode:
          type: string
          nullable: true
        invoiceCompanyAddress:
          type: string
          nullable: true
        invoiceEMailAddress:
          type: string
          nullable: true
        isInvoiceAddressDifferent:
          type: boolean
        invoiceShippingCity:
          type: string
          nullable: true
        invoiceShippingState:
          type: string
          nullable: true
        invoiceShippingDistrict:
          type: string
          nullable: true
        invoiceShippingPostalCode:
          type: string
          nullable: true
        invoiceShippingCompanyAddress:
          type: string
          nullable: true
        taxAdministrationCity:
          type: string
          nullable: true
        taxAdministrationName:
          type: string
          nullable: true
        taxNo:
          type: string
          nullable: true
        isEInvoicePayer:
          type: boolean
        isEArchivePayer:
          type: boolean
        companyProfile:
          type: string
          nullable: true
        hasAnotherECommerceSiteAccount:
          type: boolean
        otherECommerceSites:
          type: array
          items:
            type: string
          nullable: true
        signatoryNameSurname:
          type: string
          nullable: true
        signatorySex:
          type: string
          nullable: true
        signatoryTitle:
          type: string
          nullable: true
        signatoryEMailAddress:
          type: string
          nullable: true
        signatoryMobilePhoneNo:
          type: string
          nullable: true
        isSignatoryAndContactPersonSame:
          type: boolean
        contactNameSurname:
          type: string
          nullable: true
        contactSex:
          type: string
          nullable: true
        contactTitle:
          type: string
          nullable: true
        contactEMailAddress:
          type: string
          nullable: true
        contactMobilePhoneNo:
          type: string
          nullable: true
        vendorAgreementApproval:
          type: boolean
        files:
          type: array
          items:
            $ref: '#/components/schemas/MerchantAppealFileQuery'
          nullable: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/MerchantAppealMessageQuery'
          nullable: true
        statusNote:
          type: string
          nullable: true
        merchant:
          $ref: '#/components/schemas/MerchantQuery'
        unReadMessageCount:
          type: integer
          format: int32
      additionalProperties: false
    MerchantAppealQueryIEnumerableStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/MerchantAppealQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealQueryMerchantAppealBankUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantAppealQuery'
        model:
          $ref: '#/components/schemas/MerchantAppealBankUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealQueryMerchantAppealCompanyUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantAppealQuery'
        model:
          $ref: '#/components/schemas/MerchantAppealCompanyUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealQueryMerchantAppealCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantAppealQuery'
        model:
          $ref: '#/components/schemas/MerchantAppealCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealQueryMerchantAppealFileCreateFromMerchantApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantAppealQuery'
        model:
          $ref: '#/components/schemas/MerchantAppealFileCreateFromMerchant'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealQueryMerchantAppealFileStatusUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantAppealQuery'
        model:
          $ref: '#/components/schemas/MerchantAppealFileStatusUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealQueryMerchantAppealInvoiceUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantAppealQuery'
        model:
          $ref: '#/components/schemas/MerchantAppealInvoiceUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealQueryMerchantAppealMembershipUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantAppealQuery'
        model:
          $ref: '#/components/schemas/MerchantAppealMembershipUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealQueryMerchantAppealMessageCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantAppealQuery'
        model:
          $ref: '#/components/schemas/MerchantAppealMessageCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealQueryMerchantAppealSignatoryUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantAppealQuery'
        model:
          $ref: '#/components/schemas/MerchantAppealSignatoryUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealQueryMerchantAppealStatusUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantAppealQuery'
        model:
          $ref: '#/components/schemas/MerchantAppealStatusUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealQueryMerchantAppealTaxUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantAppealQuery'
        model:
          $ref: '#/components/schemas/MerchantAppealTaxUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealQueryMerchantSectorUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantAppealQuery'
        model:
          $ref: '#/components/schemas/MerchantSectorUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantAppealQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantAppealSignatoryUpdate:
      type: object
      properties:
        signatoryNameSurname:
          type: string
          nullable: true
        signatorySex:
          type: string
          nullable: true
        signatoryTitle:
          type: string
          nullable: true
        signatoryEMailAddress:
          type: string
          nullable: true
        signatoryMobilePhoneNo:
          type: string
          nullable: true
        isSignatoryAndContactPersonSame:
          type: boolean
        contactNameSurname:
          type: string
          nullable: true
        contactSex:
          type: string
          nullable: true
        contactTitle:
          type: string
          nullable: true
        contactEMailAddress:
          type: string
          nullable: true
        contactMobilePhoneNo:
          type: string
          nullable: true
        vendorAgreementApproval:
          type: boolean
        ipAddress:
          type: string
          nullable: true
      additionalProperties: false
    MerchantAppealStatusUpdate:
      type: object
      properties:
        status:
          enum:
            - Approved = 1
            - Waiting = 2
            - Denied = 3
            - Control = 4
            - NewAppeal = 5
            - CancelMerchant = 6
          type: integer
          format: int32
        statusNote:
          type: string
          nullable: true
      additionalProperties: false
    MerchantAppealTaxUpdate:
      type: object
      properties:
        taxAdministrationCity:
          type: string
          nullable: true
        taxAdministrationName:
          type: string
          nullable: true
        taxNo:
          type: string
          nullable: true
        isEInvoicePayer:
          type: boolean
        isEArchivePayer:
          type: boolean
        companyProfile:
          type: string
          nullable: true
        hasAnotherECommerceSiteAccount:
          type: boolean
        otherECommerceSites:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    MerchantAppealsWithPagingResponseModel:
      type: object
      properties:
        merchantAppeals:
          type: array
          items:
            $ref: '#/components/schemas/MerchantAppealQuery'
          nullable: true
        totalCount:
          type: integer
          format: int32
      additionalProperties: false
    MerchantAppealsWithPagingResponseModelStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantAppealsWithPagingResponseModel'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantCreate:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
        introImage:
          type: string
          nullable: true
        point:
          type: number
          format: double
        active:
          type: boolean
        confirmCode:
          type: string
          nullable: true
        confirm:
          type: boolean
        maazaName:
          type: string
          nullable: true
        about:
          type: string
          nullable: true
        merchantNewAbout:
          $ref: '#/components/schemas/MerchantNewAbout'
        commercialTitle:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        status:
          enum:
            - Approved = 1
            - Waiting = 2
            - Denied = 3
            - Control = 4
            - NewAppeal = 5
            - CancelMerchant = 6
          type: integer
          format: int32
        roles:
          type: array
          items:
            type: string
          nullable: true
        resetCode:
          type: string
          nullable: true
        resetCodeVerifyTime:
          type: string
          format: date-time
        isCanceled:
          type: boolean
        cancelReason:
          type: string
          nullable: true
        sectors:
          type: array
          items:
            $ref: '#/components/schemas/SectorQuery'
          nullable: true
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/MemberContract'
          nullable: true
        isHide:
          type: boolean
      additionalProperties: false
    MerchantEmailModel:
      type: object
      properties:
        email:
          type: string
          nullable: true
      additionalProperties: false
    MerchantNewAbout:
      type: object
      properties:
        text:
          type: string
          nullable: true
        logoImage:
          type: string
          nullable: true
        introImage:
          type: string
          nullable: true
        status:
          enum:
            - Approved = 1
            - Control = 2
            - Denied = 3
          type: integer
          format: int32
        deniedMessage:
          type: string
          nullable: true
      additionalProperties: false
    MerchantPaymentLogQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        orderId:
          type: string
          nullable: true
        orderDetailId:
          type: string
          nullable: true
        orderNo:
          type: string
          nullable: true
        memberId:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        merchantOrderId:
          type: string
          nullable: true
        isSuccess:
          type: boolean
        status:
          type: string
          nullable: true
        errorCode:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        logDate:
          type: string
          format: date-time
        merchantOrderNo:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
      additionalProperties: false
    MerchantPaymentLogQueryListEmptyResultApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/MerchantPaymentLogQuery'
          nullable: true
        model:
          $ref: '#/components/schemas/EmptyResult'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantProductCount:
      type: object
      properties:
        newProduct:
          type: integer
          format: int32
        opportunityProduct:
          type: integer
          format: int32
        discountedProduct:
          type: integer
          format: int32
        showcaseProduct:
          type: integer
          format: int32
      additionalProperties: false
    MerchantProductCreate:
      type: object
      properties:
        merchantId:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        productVariants:
          type: array
          items:
            $ref: '#/components/schemas/MerchantProductVariantCreate'
          nullable: true
        isReturnLimit:
          type: boolean
      additionalProperties: false
    MerchantProductCreateForIntegration:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        productVariants:
          type: array
          items:
            $ref: '#/components/schemas/MerchantProductVariantCreate'
          nullable: true
        isReturnLimit:
          type: boolean
      additionalProperties: false
    MerchantProductInfo:
      type: object
      properties:
        merchantId:
          $ref: '#/components/schemas/ObjectId'
        stockCode:
          type: string
          nullable: true
        price:
          type: number
          format: double
        stockAmount:
          type: integer
          format: int32
        maxSellCount:
          type: integer
          format: int32
        cargoDay:
          type: integer
          format: int32
        vatIncluded:
          type: boolean
        warrantyPeriod:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
      additionalProperties: false
    MerchantProductListOptionCreate:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        isOpportunityProduct:
          type: boolean
        rowNumberOpportunityProduct:
          type: integer
          format: int32
        isNewProduct:
          type: boolean
        rowNumberNewProduct:
          type: integer
          format: int32
        isDiscountedProduct:
          type: boolean
        rowNumberDiscountedProduct:
          type: integer
          format: int32
        isShowcase:
          type: boolean
        rowNumberShowcase:
          type: integer
          format: int32
      additionalProperties: false
    MerchantProductListOptionQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        isOpportunityProduct:
          type: boolean
        rowNumberOpportunityProduct:
          type: integer
          format: int32
        isNewProduct:
          type: boolean
        rowNumberNewProduct:
          type: integer
          format: int32
        isDiscountedProduct:
          type: boolean
        rowNumberDiscountedProduct:
          type: integer
          format: int32
        isShowcase:
          type: boolean
        rowNumberShowcase:
          type: integer
          format: int32
      additionalProperties: false
    MerchantProductListOptionQueryMerchantProductListOptionCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantProductListOptionQuery'
        model:
          $ref: '#/components/schemas/MerchantProductListOptionCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantProductListOptionResultViewModel:
      type: object
      properties:
        id:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
        merchantProductListOptions:
          $ref: '#/components/schemas/MerchantProductListOptionQuery'
        stockCode:
          type: string
          nullable: true
        price:
          type: number
          format: double
        stockAmount:
          type: integer
          format: int32
        maxSellCount:
          type: integer
          format: int32
        cargoDay:
          type: integer
          format: int32
        cargoDate:
          type: string
          format: date-time
        vatIncluded:
          type: boolean
        warrantyPeriod:
          type: integer
          format: int32
        onSale:
          type: boolean
        locked:
          type: boolean
        lockedReason:
          type: array
          items:
            enum:
              - DifferentShipping = 1
              - FromAdmin = 2
              - FromMerchant = 3
              - CloseMerchantAccount = 4
            type: integer
            format: int32
          nullable: true
        productId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        brand:
          type: string
          nullable: true
        barcode:
          type: string
          nullable: true
        images:
          type: array
          items:
            type: string
          nullable: true
        listPrice:
          type: number
          format: double
        coverPic:
          type: string
          nullable: true
        totalSales:
          type: integer
          format: int32
        merchantId:
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
          nullable: true
        freeShipping:
          type: boolean
      additionalProperties: false
    MerchantProductListOptionResultViewModelListProductListOptionFilterViewModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/MerchantProductListOptionResultViewModel'
          nullable: true
        model:
          $ref: '#/components/schemas/ProductListOptionFilterViewModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantProductParameter:
      type: object
      properties:
        name:
          type: string
          nullable: true
        inputType:
          enum:
            - Text = 0
            - CheckBox = 1
            - RadioButton = 2
            - Date = 3
            - File = 4
          type: integer
          format: int32
        inputValues:
          type: array
          items:
            type: string
          nullable: true
        isRequired:
          type: boolean
      additionalProperties: false
    MerchantProductParameterCreate:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        productParameters:
          type: array
          items:
            $ref: '#/components/schemas/ProductParameter'
          nullable: true
      additionalProperties: false
    MerchantProductParameterQuery:
      type: object
      properties:
        name:
          type: string
          nullable: true
        inputType:
          enum:
            - Text = 0
            - CheckBox = 1
            - RadioButton = 2
            - Date = 3
            - File = 4
          type: integer
          format: int32
        inputValues:
          type: array
          items:
            type: string
          nullable: true
        isRequired:
          type: boolean
      additionalProperties: false
    MerchantProductQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        minPrice:
          type: number
          format: double
        product:
          $ref: '#/components/schemas/ProductQuery'
        merchant:
          $ref: '#/components/schemas/MerchantQuery'
        productVariants:
          type: array
          items:
            $ref: '#/components/schemas/MerchantProductVariantQuery'
          nullable: true
        productParameters:
          type: array
          items:
            $ref: '#/components/schemas/MerchantProductParameterQuery'
          nullable: true
        isReturnLimit:
          type: boolean
        freeShipping:
          type: boolean
      additionalProperties: false
    MerchantProductQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/MerchantProductQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantProductQueryMerchantProductCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantProductQuery'
        model:
          $ref: '#/components/schemas/MerchantProductCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantProductQueryMerchantProductCreateForIntegrationApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantProductQuery'
        model:
          $ref: '#/components/schemas/MerchantProductCreateForIntegration'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantProductQueryMerchantProductVariantCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantProductQuery'
        model:
          $ref: '#/components/schemas/MerchantProductVariantCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantProductQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantProductQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantProductVariantCreate:
      type: object
      properties:
        variantId:
          type: string
          nullable: true
        stockCode:
          type: string
          nullable: true
        price:
          type: number
          format: double
        stockAmount:
          type: integer
          format: int32
        maxSellCount:
          type: integer
          format: int32
        cargoDay:
          type: integer
          format: int32
        vatIncluded:
          type: boolean
        warrantyPeriod:
          type: integer
          format: int32
        onSale:
          type: boolean
        locked:
          type: boolean
        lockedReason:
          type: array
          items:
            enum:
              - DifferentShipping = 1
              - FromAdmin = 2
              - FromMerchant = 3
              - CloseMerchantAccount = 4
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    MerchantProductVariantQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
        merchantProductListOptions:
          $ref: '#/components/schemas/MerchantProductListOptionQuery'
        stockCode:
          type: string
          nullable: true
        price:
          type: number
          format: double
        stockAmount:
          type: integer
          format: int32
        maxSellCount:
          type: integer
          format: int32
        cargoDay:
          type: integer
          format: int32
        cargoDate:
          type: string
          format: date-time
        vatIncluded:
          type: boolean
        warrantyPeriod:
          type: integer
          format: int32
        onSale:
          type: boolean
        locked:
          type: boolean
        lockedReason:
          type: array
          items:
            enum:
              - DifferentShipping = 1
              - FromAdmin = 2
              - FromMerchant = 3
              - CloseMerchantAccount = 4
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    MerchantQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        maazaName:
          type: string
          nullable: true
        commercialTitle:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
        introImage:
          type: string
          nullable: true
        point:
          type: number
          format: double
        about:
          type: string
          nullable: true
        confirmCode:
          type: string
          nullable: true
        confirm:
          type: boolean
        status:
          enum:
            - Approved = 1
            - Waiting = 2
            - Denied = 3
            - Control = 4
            - NewAppeal = 5
            - CancelMerchant = 6
          type: integer
          format: int32
        roles:
          type: array
          items:
            type: string
          nullable: true
        isCanceled:
          type: boolean
        cancelReason:
          type: string
          nullable: true
        sectors:
          type: array
          items:
            $ref: '#/components/schemas/SectorQuery'
          nullable: true
        merchantNewAbout:
          $ref: '#/components/schemas/MerchantNewAbout'
        isHide:
          type: boolean
        integrationToken:
          type: string
          nullable: true
        integrationTokenExpireDate:
          type: string
          format: date-time
        webhookEndPoint:
          type: string
          nullable: true
      additionalProperties: false
    MerchantQueryAuthModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantQuery'
        model:
          $ref: '#/components/schemas/AuthModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/MerchantQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantQueryMerchantCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantQuery'
        model:
          $ref: '#/components/schemas/MerchantCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantQueryMerchantUpdatePasswordModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantQuery'
        model:
          $ref: '#/components/schemas/MerchantUpdatePasswordModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantRefundAddressQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        maazaName:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        companyCommercialTitle:
          type: string
          nullable: true
        companyContactPhone:
          type: string
          nullable: true
        invoiceShippingCity:
          type: string
          nullable: true
        invoiceShippingState:
          type: string
          nullable: true
        invoiceShippingDistrict:
          type: string
          nullable: true
        invoiceShippingPostalCode:
          type: string
          nullable: true
        invoiceShippingCompanyAddress:
          type: string
          nullable: true
      additionalProperties: false
    MerchantSameDayDeliveryLoc:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        merchantId:
          $ref: '#/components/schemas/ObjectId'
        cities:
          type: array
          items:
            $ref: '#/components/schemas/ObjectId'
          nullable: true
      additionalProperties: false
    MerchantSameDayDeliveryLocListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/MerchantSameDayDeliveryLoc'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantSameDayDeliveryLocQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        cities:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    MerchantSameDayDeliveryLocQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/MerchantSameDayDeliveryLocQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantSectorUpdate:
      type: object
      properties:
        sectors:
          type: array
          items:
            $ref: '#/components/schemas/SectorQuery'
          nullable: true
      additionalProperties: false
    MerchantStatusQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        maazaName:
          type: string
          nullable: true
        status:
          enum:
            - Approved = 1
            - Waiting = 2
            - Denied = 3
            - Control = 4
            - NewAppeal = 5
            - CancelMerchant = 6
          type: integer
          format: int32
      additionalProperties: false
    MerchantStatusQueryMerchantStatusUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/MerchantStatusQuery'
        model:
          $ref: '#/components/schemas/MerchantStatusUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    MerchantStatusUpdate:
      type: object
      properties:
        status:
          enum:
            - Approved = 1
            - Waiting = 2
            - Denied = 3
            - Control = 4
            - NewAppeal = 5
            - CancelMerchant = 6
          type: integer
          format: int32
      additionalProperties: false
    MerchantUpdateModel:
      type: object
      properties:
        maazaName:
          type: string
          nullable: true
      additionalProperties: false
    MerchantUpdatePasswordModel:
      type: object
      properties:
        password:
          type: string
          nullable: true
        rePassword:
          type: string
          nullable: true
      additionalProperties: false
    MerchantUpdateProfile:
      type: object
      properties:
        merchantNewAbout:
          $ref: '#/components/schemas/MerchantNewAbout'
        sectors:
          type: array
          items:
            $ref: '#/components/schemas/SectorQuery'
          nullable: true
      additionalProperties: false
    MerchantWebQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        maazaName:
          type: string
          nullable: true
        commercialTitle:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        about:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
        introImage:
          type: string
          nullable: true
        point:
          type: number
          format: double
        status:
          enum:
            - Approved = 1
            - Waiting = 2
            - Denied = 3
            - Control = 4
            - NewAppeal = 5
            - CancelMerchant = 6
          type: integer
          format: int32
        popularCategories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryBaseQuery'
          nullable: true
        sectors:
          type: array
          items:
            $ref: '#/components/schemas/SectorQuery'
          nullable: true
        locations:
          type: array
          items:
            type: string
          nullable: true
        merchantProductCounts:
          $ref: '#/components/schemas/MerchantProductCount'
      additionalProperties: false
    NewProductCommentRequest:
      type: object
      properties:
        orderId:
          type: string
          nullable: true
        orderDetailId:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
        showFullName:
          type: boolean
        rate:
          type: integer
          format: int32
        images:
          type: array
          items:
            type: string
          nullable: true
        memberId:
          $ref: '#/components/schemas/ObjectId'
      additionalProperties: false
    NewTicketCreate:
      type: object
      properties:
        title:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        ticketFiles:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    NewTicketMessageFromAdmin:
      type: object
      properties:
        message:
          type: string
          nullable: true
        ticketFiles:
          type: array
          items:
            type: string
          nullable: true
        answeredId:
          $ref: '#/components/schemas/ObjectId'
      additionalProperties: false
    NewTicketMessageFromMerchant:
      type: object
      properties:
        message:
          type: string
          nullable: true
        ticketFiles:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ObjectId:
      type: object
      properties:
        timestamp:
          type: integer
          format: int32
          readOnly: true
        machine:
          type: integer
          format: int32
          readOnly: true
          deprecated: true
        pid:
          type: integer
          format: int32
          readOnly: true
          deprecated: true
        increment:
          type: integer
          format: int32
          readOnly: true
          deprecated: true
        creationTime:
          type: string
          format: date-time
          readOnly: true
      additionalProperties: false
    OkResult:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
      additionalProperties: false
    Order:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        orderNo:
          type: string
          nullable: true
        orderDate:
          type: string
          format: date-time
        orderDateByCulture:
          type: string
          nullable: true
        memberId:
          $ref: '#/components/schemas/ObjectId'
        deliveryAddress:
          $ref: '#/components/schemas/DeliveryAddress'
        invoiceAddress:
          $ref: '#/components/schemas/InvoiceAddress'
        orderNote:
          type: string
          nullable: true
        userAgent:
          type: string
          nullable: true
        installmentNumber:
          type: integer
          format: int32
        totalPrice:
          type: number
          format: double
        cargoPrice:
          type: number
          format: double
        vatTotal:
          type: number
          format: double
        discountTotal:
          type: number
          format: double
        netPrice:
          type: number
          format: double
        totalPriceWithoutInstallment:
          type: number
          format: double
          nullable: true
        paymentId:
          type: string
          nullable: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/Detail'
          nullable: true
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/Contracts'
          nullable: true
      additionalProperties: false
    OrderAddressVM:
      type: object
      properties:
        deliveryAddress:
          $ref: '#/components/schemas/DeliveryAddress'
        invoiceAddress:
          $ref: '#/components/schemas/InvoiceAddress'
      additionalProperties: false
    OrderContractsVM:
      type: object
      properties:
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/Contracts'
          nullable: true
      additionalProperties: false
    OrderDeliveredDetailGridVM:
      type: object
      properties:
        id:
          type: string
          nullable: true
        barcode:
          type: string
          nullable: true
        stockCode:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        cargoDeliveredDate:
          type: string
          format: date-time
        paymentDate:
          type: string
          format: date-time
        orderPrice:
          type: number
          format: double
        netRevenue:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        refundReasonMessage:
          type: string
          nullable: true
        refundDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    OrderDeliveredGridVM:
      type: object
      properties:
        id:
          type: string
          nullable: true
        orderNo:
          type: string
          nullable: true
        orderDate:
          type: string
          format: date-time
        quantity:
          type: integer
          format: int32
        memberName:
          type: string
          nullable: true
        memberId:
          type: string
          nullable: true
        orderTotalPrice:
          type: number
          format: double
        orderTotalRevenue:
          type: number
          format: double
        details:
          type: array
          items:
            $ref: '#/components/schemas/OrderDeliveredDetailGridVM'
          nullable: true
      additionalProperties: false
    OrderDetaiLightVM:
      type: object
      properties:
        id:
          type: string
          nullable: true
        orderDetailNo:
          type: string
          nullable: true
        barcode:
          type: string
          nullable: true
        stockCode:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        sameDayDelivery:
          type: boolean
        totalPrice:
          type: number
          format: double
        cargoCompany:
          enum:
            - YUTRICI = 1
            - ARAS = 2
            - MNG = 3
            - SURAT = 4
            - PTT = 5
            - UPS = 6
            - HOROZ = 7
            - CEVA = 8
            - BORUSAN = 9
            - FILLO = 10
            - TNT = 11
            - DHL = 12
            - InterGlobal = 13
          type: integer
          format: int32
        cargoFinalDeliveryDate:
          type: string
          format: date-time
        cargoDeliveredDate:
          type: string
          format: date-time
        cargoTrackingNumber:
          type: string
          nullable: true
        cancelOrderDate:
          type: string
          format: date-time
          nullable: true
        cancelMessage:
          type: string
          nullable: true
        refundDate:
          type: string
          format: date-time
          nullable: true
        refundReasonMessage:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        coverPic:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        orderState:
          enum:
            - OrderPendingApprovement = 1
            - OrderApproved = 2
            - OrderPrepairing = 3
            - OrderShipped = 4
            - OrderDelivered = 5
            - OrderCanceled = 6
            - ProductRefundRequest = 7
            - ProductRefund = 8
            - ProductAwaitingSpecialRefundApproval = 9
            - ProductAwaitingSpecialRefundApproved = 10
            - ProductAwaitingSpecialRefundRejected = 11
            - OrderPaymentFailed = 12
          type: integer
          format: int32
        isMerchantPaymentCompleted:
          type: boolean
        merchantPaymentDate:
          type: string
          format: date-time
          nullable: true
        cargoDeliveryNumber:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        merchantName:
          type: string
          nullable: true
      additionalProperties: false
    OrderDetaiLightVMOrdersGridVM:
      type: object
      properties:
        id:
          type: string
          nullable: true
        orderNo:
          type: string
          nullable: true
        orderDate:
          type: string
          format: date-time
        quantity:
          type: integer
          format: int32
        memberName:
          type: string
          nullable: true
        memberId:
          type: string
          nullable: true
        totalPrice:
          type: number
          format: double
        totalPriceWithoutInstallment:
          type: number
          format: double
        installmentNumber:
          type: number
          format: double
        details:
          type: array
          items:
            $ref: '#/components/schemas/OrderDetaiLightVM'
          nullable: true
      additionalProperties: false
    OrderDetailReadMessageRequest:
      type: object
      properties:
        orderId:
          type: string
          nullable: true
        orderDetailId:
          type: string
          nullable: true
        messagesId:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    OrderDetailRefundRequest:
      type: object
      properties:
        orderId:
          type: string
          nullable: true
        details:
          type: array
          items:
            type: string
          nullable: true
        refundReasonType:
          enum:
            - Vazgecme = 0
            - BedenUymama = 1
            - UrunModeliniBegenmeme = 2
            - UrunKalitesiniBegenmeme = 3
            - KusurluUrun = 4
            - YanlisUrunGelmesi = 5
          type: integer
          format: int32
        refundReasonMessage:
          type: string
          nullable: true
        cargoCompany:
          enum:
            - YUTRICI = 1
            - ARAS = 2
            - MNG = 3
            - SURAT = 4
            - PTT = 5
            - UPS = 6
            - HOROZ = 7
            - CEVA = 8
            - BORUSAN = 9
            - FILLO = 10
            - TNT = 11
            - DHL = 12
            - InterGlobal = 13
          type: integer
          format: int32
        cargoTrackingNumber:
          type: string
          nullable: true
        packageQuantity:
          type: integer
          format: int32
      additionalProperties: false
    OrderDetailRefundReturnLimitRequest:
      type: object
      properties:
        orderId:
          type: string
          nullable: true
        details:
          type: array
          items:
            type: string
          nullable: true
        returnLimitDescription:
          type: string
          nullable: true
        returnLimitFiles:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    OrderDetailRequest:
      type: object
      properties:
        orderId:
          type: string
          nullable: true
        orderDetailId:
          type: string
          nullable: true
      additionalProperties: false
    OrderDetailSpecialRefundRequest:
      type: object
      properties:
        orderId:
          type: string
          nullable: true
        orderDetailId:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        isApproved:
          type: boolean
      additionalProperties: false
    OrderFilterRequest:
      type: object
      properties:
        orderState:
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
          type: integer
          format: int32
          nullable: true
        merchantId:
          type: string
          nullable: true
        orderDateStart:
          type: string
          format: date-time
          nullable: true
        orderDateEnd:
          type: string
          format: date-time
          nullable: true
        orderNo:
          type: string
          nullable: true
        memberEmail:
          type: string
          nullable: true
      additionalProperties: false
    OrderMerchantPaymentRequest:
      type: object
      properties:
        orderId:
          type: string
          nullable: true
        orderDetailId:
          type: string
          nullable: true
        merchantPaymentDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    OrderMessageQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        isRead:
          type: boolean
        direction:
          type: integer
          format: int32
        userId:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
      additionalProperties: false
    OrderMessages:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        date:
          type: string
          format: date-time
        isRead:
          type: boolean
        direction:
          type: integer
          format: int32
        userId:
          $ref: '#/components/schemas/ObjectId'
        message:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
      additionalProperties: false
    OrderPaymentQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        type:
          enum:
            - ProductPayment = 1
            - IyzicoTransactionFee = 2
            - IyzicoFeePerTransaction = 3
            - CodeoveTransactionFee = 4
            - CargoPrice = 5
            - IyzicoCargoFee = 6
            - CodeoveCargoPrice = 7
          type: integer
          format: int32
        rate:
          type: number
          format: double
          nullable: true
        amount:
          type: number
          format: double
        isRefund:
          type: boolean
        debt:
          enum:
            - Debt = 1
            - Credit = 2
          type: integer
          format: int32
        desc:
          type: string
          nullable: true
      additionalProperties: false
    OrderPaymentQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/OrderPaymentQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    OrderPaymentsFilterRequest:
      type: object
      properties:
        merchantId:
          type: string
          nullable: true
        orderNo:
          type: string
          nullable: true
        orderDateStart:
          type: string
          format: date-time
          nullable: true
        orderDateEnd:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    OrderPaymentsGridDetailVM:
      type: object
      properties:
        merchantId:
          type: string
          nullable: true
        merchantName:
          type: string
          nullable: true
        total:
          type: number
          format: double
        iyzicoFee:
          type: number
          format: double
        merchantRevenue:
          type: number
          format: double
        codeoveRevenue:
          type: number
          format: double
      additionalProperties: false
    OrderPaymentsGridVM:
      type: object
      properties:
        orderId:
          type: string
          nullable: true
        orderNo:
          type: string
          nullable: true
        orderDate:
          type: string
          format: date-time
        iyzicoPerFee:
          type: number
          format: double
        total:
          type: number
          format: double
        iyzicoFeeTotal:
          type: number
          format: double
        merchantRevenueTotal:
          type: number
          format: double
        codeoveRevenueTotal:
          type: number
          format: double
        details:
          type: array
          items:
            $ref: '#/components/schemas/OrderPaymentsGridDetailVM'
          nullable: true
      additionalProperties: false
    OrderPaymentsGridVMListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/OrderPaymentsGridVM'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    OrderQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        orderNo:
          type: string
          nullable: true
        orderDate:
          type: string
          format: date-time
        memberName:
          type: string
          nullable: true
        deliveryAddress:
          $ref: '#/components/schemas/DeliveryAddressQuery'
        invoiceAddress:
          $ref: '#/components/schemas/InvoiceAddressQuery'
        orderNote:
          type: string
          nullable: true
        totalPrice:
          type: number
          format: double
        cargoPrice:
          type: number
          format: double
        vatTotal:
          type: number
          format: double
        discountTotal:
          type: number
          format: double
        netPrice:
          type: number
          format: double
        totalPriceWithoutInstallment:
          type: number
          format: double
          nullable: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/DetailQuery'
          nullable: true
        memberId:
          type: string
          nullable: true
        member:
          $ref: '#/components/schemas/MemberQuery'
        memberEmail:
          type: string
          nullable: true
      additionalProperties: false
    OrderQueryListIntegratorOrderFilterRequestApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/OrderQuery'
          nullable: true
        model:
          $ref: '#/components/schemas/IntegratorOrderFilterRequest'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    OrderSetDeliveredModel:
      type: object
      properties:
        orderId:
          type: string
          nullable: true
        orderDetailIds:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    OrderSetShippedModel:
      type: object
      properties:
        cargoCompany:
          type: string
          nullable: true
        cargoTrackingNumber:
          type: string
          nullable: true
        cargoPrice:
          type: number
          format: double
        orderId:
          type: string
          nullable: true
        packageType:
          type: integer
          format: int32
        content:
          type: string
          nullable: true
        packageQuantity:
          type: integer
          format: int32
          nullable: true
        orderDetailIds:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    OrderSuccessRequest:
      type: object
      properties:
        secretKey:
          type: string
          nullable: true
        paymentId:
          type: string
          nullable: true
        conversationId:
          type: string
          nullable: true
        itemTransactions:
          type: array
          items:
            $ref: '#/components/schemas/ItemTransaction'
          nullable: true
      additionalProperties: false
    OrderUpdateConversation:
      type: object
      properties:
        paymentId:
          type: string
          nullable: true
        conversationId:
          type: string
          nullable: true
        secretKey:
          type: string
          nullable: true
      additionalProperties: false
    PaymentCard:
      type: object
      properties:
        cardHolderName:
          type: string
          nullable: true
        cardNumber:
          type: string
          nullable: true
        expireYear:
          type: string
          nullable: true
        expireMonth:
          type: string
          nullable: true
        cvc:
          type: string
          nullable: true
        registerCard:
          type: integer
          format: int32
          nullable: true
        cardAlias:
          type: string
          nullable: true
        cardToken:
          type: string
          nullable: true
        cardUserKey:
          type: string
          nullable: true
      additionalProperties: false
    ProductActivityLog:
      type: object
      properties:
        activityLogTypeSystemKeyword:
          type: string
          nullable: true
        activityLogTypeName:
          type: string
          nullable: true
        transactionEmail:
          type: string
          nullable: true
        transactionName:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
        created:
          type: string
          nullable: true
      additionalProperties: false
    ProductAttribute:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isVariant:
          type: boolean
      additionalProperties: false
    ProductCommentApproveRequest:
      type: object
      properties:
        isApprove:
          type: boolean
        productCommentId:
          type: string
          nullable: true
      additionalProperties: false
    ProductCommentVM:
      type: object
      properties:
        id:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        productSlug:
          type: string
          nullable: true
        memberId:
          type: string
          nullable: true
        memberName:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        merchantName:
          type: string
          nullable: true
        merchantSlug:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        rate:
          type: integer
          format: int32
        commentType:
          enum:
            - AwaitingApproval = 0
            - Approved = 1
            - Reject = 2
          type: integer
          format: int32
        images:
          type: array
          items:
            type: string
          nullable: true
        showFullName:
          type: boolean
      additionalProperties: false
    ProductCommentVMListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/ProductCommentVM'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    ProductCommit:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        productId:
          $ref: '#/components/schemas/ObjectId'
        brand:
          type: string
          nullable: true
        categoryId:
          $ref: '#/components/schemas/ObjectId'
        merchantId:
          $ref: '#/components/schemas/ObjectId'
        merchantName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
        desi:
          type: integer
          format: int32
        vatRate:
          type: integer
          format: int32
        isInstallmentPayment:
          type: boolean
        barcode:
          type: string
          nullable: true
        listPrice:
          type: number
          format: double
        state:
          enum:
            - Waiting = 1
            - Inspecting = 2
            - Denied = 3
            - Approved = 4
          type: integer
          format: int32
        images:
          type: array
          items:
            type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
          nullable: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ProductMessage'
          nullable: true
        notes:
          type: array
          items:
            $ref: '#/components/schemas/ProductNote'
          nullable: true
        reasonForDenied:
          type: array
          items:
            type: string
          nullable: true
        isReturnLimit:
          type: boolean
        returnLimitDescription:
          type: string
          nullable: true
        merchantProductInfos:
          type: array
          items:
            $ref: '#/components/schemas/MerchantProductInfo'
          nullable: true
        isImport:
          type: boolean
      additionalProperties: false
    ProductCommitAttributeCreate:
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
          nullable: true
      additionalProperties: false
    ProductCommitCreate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        brand:
          type: string
          nullable: true
        brandId:
          type: string
          nullable: true
        categoryId:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        merchantName:
          type: string
          nullable: true
        desc:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
        desi:
          type: integer
          format: int32
        vatRate:
          type: integer
          format: int32
        isInstallmentPayment:
          type: boolean
        barcode:
          type: string
          nullable: true
        listPrice:
          type: number
          format: double
        reasonForDenied:
          type: array
          items:
            type: string
          nullable: true
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
          nullable: true
      additionalProperties: false
    ProductCommitQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        brand:
          type: string
          nullable: true
        brandId:
          type: string
          nullable: true
        categoryId:
          type: string
          nullable: true
        category:
          $ref: '#/components/schemas/CategoryQuery'
        merchantId:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
        desi:
          type: integer
          format: int32
        vatRate:
          type: integer
          format: int32
        isInstallmentPayment:
          type: boolean
        barcode:
          type: string
          nullable: true
        listPrice:
          type: number
          format: double
        state:
          enum:
            - Waiting = 1
            - Inspecting = 2
            - Denied = 3
            - Approved = 4
          type: integer
          format: int32
        images:
          type: array
          items:
            type: string
          nullable: true
        reasonForDenied:
          type: array
          items:
            type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
          nullable: true
        notes:
          type: array
          items:
            $ref: '#/components/schemas/ProductNoteQuery'
          nullable: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ProductMessageQuery'
          nullable: true
        merchantProductInfos:
          type: array
          items:
            $ref: '#/components/schemas/MerchantProductInfo'
          nullable: true
      additionalProperties: false
    ProductCommitResponseModel:
      type: object
      properties:
        productCommitId:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        brandName:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        merchantName:
          type: string
          nullable: true
        reasonForDenied:
          type: array
          items:
            type: string
          nullable: true
        status:
          enum:
            - Waiting = 1
            - Inspecting = 2
            - Denied = 3
            - Approved = 4
          type: integer
          format: int32
        barcode:
          type: string
          nullable: true
      additionalProperties: false
    ProductCommitStatusUpdate:
      type: object
      properties:
        state:
          enum:
            - Waiting = 1
            - Inspecting = 2
            - Denied = 3
            - Approved = 4
          type: integer
          format: int32
      additionalProperties: false
    ProductCommitUpdate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        brand:
          type: string
          nullable: true
        categoryId:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        merchantName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
        desi:
          type: integer
          format: int32
        vatRate:
          type: integer
          format: int32
        isInstallmentPayment:
          type: boolean
        barcode:
          type: string
          nullable: true
        listPrice:
          type: number
          format: double
        state:
          enum:
            - Waiting = 1
            - Inspecting = 2
            - Denied = 3
            - Approved = 4
          type: integer
          format: int32
        images:
          type: array
          items:
            type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
          nullable: true
        merchantProductInfos:
          type: array
          items:
            $ref: '#/components/schemas/MerchantProductInfo'
          nullable: true
      additionalProperties: false
    ProductCommitWithPagingResponseModel:
      type: object
      properties:
        productCommits:
          type: array
          items:
            $ref: '#/components/schemas/ProductCommitResponseModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
      additionalProperties: false
    ProductCoverPicUpdate:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
        coverPic:
          type: string
          nullable: true
      additionalProperties: false
    ProductCreateFromProductCommit:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        brand:
          type: string
          nullable: true
        categoryId:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        merchantName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
        desi:
          type: integer
          format: int32
        vatRate:
          type: integer
          format: int32
        isInstallmentPayment:
          type: boolean
        barcode:
          type: string
          nullable: true
        listPrice:
          type: number
          format: double
        state:
          enum:
            - Waiting = 1
            - Inspecting = 2
            - Denied = 3
            - Approved = 4
          type: integer
          format: int32
        images:
          type: array
          items:
            type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
          nullable: true
        coverPic:
          type: string
          nullable: true
        isReturnLimit:
          type: boolean
        returnLimitDescription:
          type: string
          nullable: true
        isRestrictedProduct:
          type: boolean
      additionalProperties: false
    ProductDescriptionHistoryModel:
      type: object
      properties:
        userEmail:
          type: string
          nullable: true
        desc:
          type: string
          nullable: true
        updatedDate:
          type: string
          nullable: true
      additionalProperties: false
    ProductDetailMerchantPriceModel:
      type: object
      properties:
        merchantId:
          type: string
          nullable: true
        merchantName:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        point:
          type: number
          format: double
        price:
          type: number
          format: double
        image:
          type: string
          nullable: true
        cargoDay:
          type: integer
          format: int32
      additionalProperties: false
    ProductDetailQuery:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductQuery'
        merchantProduct:
          type: array
          items:
            $ref: '#/components/schemas/MerchantProductQuery'
          nullable: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryBaseQuery'
          nullable: true
        commentInfo:
          $ref: '#/components/schemas/CommentInfo'
        category:
          $ref: '#/components/schemas/CategoryQuery'
      additionalProperties: false
    ProductExcelModel:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        barcode:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        brandName:
          type: string
          nullable: true
        categoryId:
          type: string
          nullable: true
        categoryName:
          type: string
          nullable: true
        isInstallmentPayment:
          type: boolean
        maxInstallmentPaymentCount:
          type: integer
          format: int32
        vatRate:
          type: integer
          format: int32
        coverPic:
          type: string
          nullable: true
        listPrice:
          type: string
          nullable: true
        stockAmount:
          type: integer
          format: int32
        onSale:
          type: boolean
        isOpportunityProduct:
          type: boolean
        isNewProduct:
          type: boolean
        isDiscountedProduct:
          type: boolean
        isShowcase:
          type: boolean
        isReturnLimit:
          type: boolean
        onCatalog:
          type: boolean
      additionalProperties: false
    ProductListOptionCreate:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        isOpportunityProduct:
          type: boolean
        rowNumberOpportunityProduct:
          type: integer
          format: int32
        isNewProduct:
          type: boolean
        rowNumberNewProduct:
          type: integer
          format: int32
        isDiscountedProduct:
          type: boolean
        rowNumberDiscountedProduct:
          type: integer
          format: int32
        isShowcase:
          type: boolean
        rowNumberShowcase:
          type: integer
          format: int32
      additionalProperties: false
    ProductListOptionFilterViewModel:
      type: object
      properties:
        isOpportunityProduct:
          type: boolean
        isNewProduct:
          type: boolean
        isDiscountedProduct:
          type: boolean
        isShowcase:
          type: boolean
        query:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
      additionalProperties: false
    ProductListOptionQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        isOpportunityProduct:
          type: boolean
        rowNumberOpportunityProduct:
          type: integer
          format: int32
        isNewProduct:
          type: boolean
        rowNumberNewProduct:
          type: integer
          format: int32
        isDiscountedProduct:
          type: boolean
        rowNumberDiscountedProduct:
          type: integer
          format: int32
        isShowcase:
          type: boolean
        rowNumberShowcase:
          type: integer
          format: int32
      additionalProperties: false
    ProductListOptionQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/ProductListOptionQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    ProductListOptionQueryProductListOptionCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/ProductListOptionQuery'
        model:
          $ref: '#/components/schemas/ProductListOptionCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    ProductListOptionResultViewModel:
      type: object
      properties:
        productListOption:
          $ref: '#/components/schemas/ProductListOptionQuery'
        product:
          $ref: '#/components/schemas/ProductQuery'
      additionalProperties: false
    ProductListOptionResultViewModelListProductListOptionFilterViewModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/ProductListOptionResultViewModel'
          nullable: true
        model:
          $ref: '#/components/schemas/ProductListOptionFilterViewModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    ProductListPriceUpdate:
      type: object
      properties:
        productId:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
        listPrice:
          type: number
          format: double
      additionalProperties: false
    ProductMessage:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        date:
          type: string
          format: date-time
        isRead:
          type: boolean
        direction:
          enum:
            - MerchantToEmployee = 1
            - EmployeeToMerchant = 2
          type: integer
          format: int32
        employeeId:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    ProductMessageCreate:
      type: object
      properties:
        direction:
          enum:
            - MerchantToEmployee = 1
            - EmployeeToMerchant = 2
          type: integer
          format: int32
        employeeId:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    ProductMessageQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        isRead:
          type: boolean
        direction:
          enum:
            - MerchantToEmployee = 1
            - EmployeeToMerchant = 2
          type: integer
          format: int32
        employeeId:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    ProductNote:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        date:
          type: string
          format: date-time
        employeeId:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    ProductNoteCreate:
      type: object
      properties:
        employeeId:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    ProductNoteQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        employeeId:
          type: string
          nullable: true
        employeeName:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    ProductNoteUpdate:
      type: object
      properties:
        id:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    ProductParameter:
      type: object
      properties:
        name:
          type: string
          nullable: true
        inputType:
          enum:
            - Text = 0
            - CheckBox = 1
            - RadioButton = 2
            - Date = 3
            - File = 4
          type: integer
          format: int32
        inputValues:
          type: array
          items:
            type: string
          nullable: true
        isRequired:
          type: boolean
      additionalProperties: false
    ProductParameterListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/ProductParameter'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    ProductQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        brand:
          type: string
          nullable: true
        brandId:
          type: string
          nullable: true
        categoryId:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
        desi:
          type: integer
          format: int32
        vatRate:
          type: integer
          format: int32
        isInstallmentPayment:
          type: boolean
        barcode:
          type: string
          nullable: true
        isAdded:
          type: boolean
        categoryName:
          type: string
          nullable: true
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariantQuery'
          nullable: true
        isReturnLimit:
          type: boolean
        returnLimitDescription:
          type: string
          nullable: true
        isRestrictedProduct:
          type: boolean
      additionalProperties: false
    ProductQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/ProductQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    ProductQueryPagingDataViewModel:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProductQuery'
          nullable: true
      additionalProperties: false
    ProductQueryPagingDataViewModelListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/ProductQueryPagingDataViewModel'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    ProductQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/ProductQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    ProductUpdate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        brand:
          type: string
          nullable: true
        brandId:
          type: string
          nullable: true
        categoryId:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
        coverPic:
          type: string
          nullable: true
        desi:
          type: integer
          format: int32
        vatRate:
          type: integer
          format: int32
        isInstallmentPayment:
          type: boolean
        barcode:
          type: string
          nullable: true
        replacedTitle:
          type: string
          nullable: true
        isReturnLimit:
          type: boolean
        returnLimitDescription:
          type: string
          nullable: true
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariantQuery'
          nullable: true
      additionalProperties: false
    ProductVariant:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        desc:
          type: string
          nullable: true
        barcode:
          type: string
          nullable: true
        listPrice:
          type: number
          format: double
        coverPic:
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
          nullable: true
        images:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ProductVariantAttributeCreate:
      type: object
      properties:
        variantId:
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
          nullable: true
      additionalProperties: false
    ProductVariantQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        desc:
          type: string
          nullable: true
        barcode:
          type: string
          nullable: true
        isAdded:
          type: boolean
        listPrice:
          type: number
          format: double
        coverPic:
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
          nullable: true
        images:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    RefundDetailQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        barcode:
          type: string
          nullable: true
        stockCode:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        refundCargoTrackingNumber:
          type: string
          nullable: true
        refundCargoCompany:
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
          type: integer
          format: int32
          nullable: true
        refundReasonType:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          type: integer
          format: int32
          nullable: true
        refundReasonMessage:
          type: string
          nullable: true
        refundQuantity:
          type: integer
          format: int32
        refundDate:
          type: string
          format: date-time
          nullable: true
        contestedDescription:
          type: string
          nullable: true
        orderState:
          enum:
            - OrderPendingApprovement = 1
            - OrderApproved = 2
            - OrderPrepairing = 3
            - OrderShipped = 4
            - OrderDelivered = 5
            - OrderCanceled = 6
            - ProductRefundRequest = 7
            - ProductRefund = 8
            - ProductAwaitingSpecialRefundApproval = 9
            - ProductAwaitingSpecialRefundApproved = 10
            - ProductAwaitingSpecialRefundRejected = 11
            - OrderPaymentFailed = 12
          type: integer
          format: int32
        totalPrice:
          type: number
          format: double
        isContested:
          type: boolean
      additionalProperties: false
    RefundDetailQueryOrdersGridVM:
      type: object
      properties:
        id:
          type: string
          nullable: true
        orderNo:
          type: string
          nullable: true
        orderDate:
          type: string
          format: date-time
        quantity:
          type: integer
          format: int32
        memberName:
          type: string
          nullable: true
        memberId:
          type: string
          nullable: true
        totalPrice:
          type: number
          format: double
        totalPriceWithoutInstallment:
          type: number
          format: double
        installmentNumber:
          type: number
          format: double
        details:
          type: array
          items:
            $ref: '#/components/schemas/RefundDetailQuery'
          nullable: true
      additionalProperties: false
    SearchAttributeModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        values:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    SearchEngineRequestModel:
      type: object
      properties:
        merchantId:
          type: string
          nullable: true
        query:
          type: string
          nullable: true
      additionalProperties: false
    SectorCreate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
      additionalProperties: false
    SectorQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
      additionalProperties: false
    SectorQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/SectorQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    SectorQuerySectorCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/SectorQuery'
        model:
          $ref: '#/components/schemas/SectorCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    SectorQuerySectorUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/SectorQuery'
        model:
          $ref: '#/components/schemas/SectorUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    SectorQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/SectorQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    SectorUpdate:
      type: object
      properties:
        name:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
      additionalProperties: false
    SendEmailConfirmModel:
      required:
        - email
      type: object
      properties:
        email:
          minLength: 1
          type: string
      additionalProperties: false
    SendMessageRequest:
      type: object
      properties:
        orderId:
          type: string
          nullable: true
        orderDetailId:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      additionalProperties: false
    SetCommentMemberNameRequest:
      type: object
      properties:
        showFullName:
          type: boolean
        productCommentId:
          type: string
          nullable: true
      additionalProperties: false
    SetOrderPaymentFailedRequest:
      type: object
      properties:
        secretKey:
          type: string
          nullable: true
      additionalProperties: false
    SlideCreate:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        link:
          type: string
          nullable: true
        target:
          type: boolean
        image:
          type: string
          nullable: true
        mobileImage:
          type: string
          nullable: true
        buttonText:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
        status:
          enum:
            - Active = 1
            - Passive = 2
          type: integer
          format: int32
        mobileLink:
          type: string
          nullable: true
      additionalProperties: false
    SlideQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        link:
          type: string
          nullable: true
        target:
          type: boolean
        image:
          type: string
          nullable: true
        mobileImage:
          type: string
          nullable: true
        buttonText:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
        status:
          type: string
          nullable: true
        mobileLink:
          type: string
          nullable: true
      additionalProperties: false
    SlideQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/SlideQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    SlideQuerySlideCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/SlideQuery'
        model:
          $ref: '#/components/schemas/SlideCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    SlideQuerySlideUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/SlideQuery'
        model:
          $ref: '#/components/schemas/SlideUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    SlideQuerySlideUpdateStatusApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/SlideQuery'
        model:
          $ref: '#/components/schemas/SlideUpdateStatus'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    SlideQueryStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/SlideQuery'
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    SlideUpdate:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        link:
          type: string
          nullable: true
        target:
          type: boolean
        image:
          type: string
          nullable: true
        mobileImage:
          type: string
          nullable: true
        buttonText:
          type: string
          nullable: true
        rowNumber:
          type: integer
          format: int32
        status:
          enum:
            - Active = 1
            - Passive = 2
          type: integer
          format: int32
        mobileLink:
          type: string
          nullable: true
      additionalProperties: false
    SlideUpdateStatus:
      type: object
      properties:
        status:
          enum:
            - Active = 1
            - Passive = 2
          type: integer
          format: int32
      additionalProperties: false
    StringDeleteMerchantImageApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: string
          nullable: true
        model:
          $ref: '#/components/schemas/DeleteMerchantImage'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    StringForgotPasswordModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: string
          nullable: true
        model:
          $ref: '#/components/schemas/ForgotPasswordModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    StringGiftVoucherUpdateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: string
          nullable: true
        model:
          $ref: '#/components/schemas/GiftVoucherUpdate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    StringIntegratorSetWebhookEndPointModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: string
          nullable: true
        model:
          $ref: '#/components/schemas/IntegratorSetWebhookEndPointModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    StringListGiftVoucherCreateApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            type: string
          nullable: true
        model:
          $ref: '#/components/schemas/GiftVoucherCreate'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    StringListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            type: string
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    StringMaxInstallmentCountUpdateModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: string
          nullable: true
        model:
          $ref: '#/components/schemas/MaxInstallmentCountUpdateModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    StringStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: string
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    StringStringListApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: string
          nullable: true
        model:
          type: array
          items:
            type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    StringUpdateVatRateModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: string
          nullable: true
        model:
          $ref: '#/components/schemas/UpdateVatRateModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    SubCategory:
      type: object
      properties:
        childCategory:
          $ref: '#/components/schemas/CategoryCleanQuery'
        child2Categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryCleanQuery'
          nullable: true
      additionalProperties: false
    T:
      type: object
      additionalProperties: false
    TempMerchantProductList:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        productId:
          $ref: '#/components/schemas/ObjectId'
        productName:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        brandName:
          type: string
          nullable: true
        merchantId:
          $ref: '#/components/schemas/ObjectId'
        merchantName:
          type: string
          nullable: true
        brandId:
          $ref: '#/components/schemas/ObjectId'
        categoryId:
          $ref: '#/components/schemas/ObjectId'
        categoryName:
          type: string
          nullable: true
        categorySlugs:
          type: array
          items:
            type: string
          nullable: true
        vatRate:
          type: integer
          format: int32
        isInstallmentPayment:
          type: boolean
        listPrice:
          type: number
          format: double
        price:
          type: number
          format: double
        images:
          type: array
          items:
            type: string
          nullable: true
        coverImage:
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
          nullable: true
        productParameters:
          type: array
          items:
            $ref: '#/components/schemas/MerchantProductParameter'
          nullable: true
        isOpportunityProduct:
          type: boolean
        rowNumberOpportunityProduct:
          type: integer
          format: int32
        isNewProduct:
          type: boolean
        isNewProductSetDate:
          type: string
          format: date-time
          nullable: true
        rowNumberNewProduct:
          type: integer
          format: int32
        isDiscountedProduct:
          type: boolean
        rowNumberDiscountedProduct:
          type: integer
          format: int32
        isShowcase:
          type: boolean
        rowNumberShowcase:
          type: integer
          format: int32
        isReturnLimit:
          type: boolean
        returnLimitDescription:
          type: string
          nullable: true
        freeShipping:
          type: boolean
        isRestrictedProduct:
          type: boolean
      additionalProperties: false
    TempMerchantProductListListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/TempMerchantProductList'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    TempMerchantProductListQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        brandName:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        merchantName:
          type: string
          nullable: true
        brandId:
          type: string
          nullable: true
        categoryId:
          type: string
          nullable: true
        categoryName:
          type: string
          nullable: true
        categorySlugs:
          type: array
          items:
            type: string
          nullable: true
        vatRate:
          type: integer
          format: int32
        isInstallmentPayment:
          type: boolean
        listPrice:
          type: number
          format: double
        price:
          type: number
          format: double
        images:
          type: array
          items:
            type: string
          nullable: true
        coverImage:
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
          nullable: true
        isOpportunityProduct:
          type: boolean
        rowNumberOpportunityProduct:
          type: integer
          format: int32
        isNewProduct:
          type: boolean
        rowNumberNewProduct:
          type: integer
          format: int32
        isDiscountedProduct:
          type: boolean
        rowNumberDiscountedProduct:
          type: integer
          format: int32
        isShowcase:
          type: boolean
        rowNumberShowcase:
          type: integer
          format: int32
        isReturnLimit:
          type: boolean
        returnLimitDescription:
          type: string
          nullable: true
        maxSellCount:
          type: integer
          format: int32
        stockAmount:
          type: integer
          format: int32
        merchantSlug:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
        isRestrictedProduct:
          type: boolean
      additionalProperties: false
    TempMerchantProductListSearchResponseModel:
      type: object
      properties:
        tempMerchantProductListQueries:
          type: array
          items:
            $ref: '#/components/schemas/TempMerchantProductListQuery'
          nullable: true
        brands:
          type: array
          items:
            $ref: '#/components/schemas/IdNameModel'
          nullable: true
        categories:
          type: array
          items:
            $ref: '#/components/schemas/IdNameModel'
          nullable: true
        subCategories:
          type: array
          items:
            $ref: '#/components/schemas/IdNameModel'
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/SearchAttributeModel'
          nullable: true
        count:
          type: integer
          format: int32
        category:
          $ref: '#/components/schemas/CategoryQuery'
      additionalProperties: false
    TempMerchantProductListSearchResponseModelTempProductListSearchModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/TempMerchantProductListSearchResponseModel'
        model:
          $ref: '#/components/schemas/TempProductListSearchModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    TempOrderByModel:
      type: object
      properties:
        prop:
          type: string
          nullable: true
        direction:
          type: string
          nullable: true
      additionalProperties: false
    TempPagingModel:
      type: object
      properties:
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
      additionalProperties: false
    TempProductList:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        productId:
          $ref: '#/components/schemas/ObjectId'
        productName:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        brandName:
          type: string
          nullable: true
        brandId:
          $ref: '#/components/schemas/ObjectId'
        categoryId:
          $ref: '#/components/schemas/ObjectId'
        categoryName:
          type: string
          nullable: true
        categorySlugs:
          type: array
          items:
            type: string
          nullable: true
        merchantId:
          $ref: '#/components/schemas/ObjectId'
        merchantName:
          type: string
          nullable: true
        vatRate:
          type: integer
          format: int32
        isInstallmentPayment:
          type: boolean
        barcode:
          type: string
          nullable: true
        minPrice:
          type: number
          format: double
        maxPrice:
          type: number
          format: double
        listPrice:
          type: number
          format: double
        images:
          type: array
          items:
            type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
          nullable: true
        productParameters:
          type: array
          items:
            $ref: '#/components/schemas/MerchantProductParameter'
          nullable: true
        isOpportunityProduct:
          type: boolean
        rowNumberOpportunityProduct:
          type: integer
          format: int32
        isNewProduct:
          type: boolean
        isNewProductSetDate:
          type: string
          format: date-time
          nullable: true
        rowNumberNewProduct:
          type: integer
          format: int32
        isDiscountedProduct:
          type: boolean
        rowNumberDiscountedProduct:
          type: integer
          format: int32
        isShowcase:
          type: boolean
        rowNumberShowcase:
          type: integer
          format: int32
        replacedTitle:
          type: string
          nullable: true
        isReturnLimit:
          type: boolean
        returnLimitDescription:
          type: string
          nullable: true
        freeShipping:
          type: boolean
        isRestrictedProduct:
          type: boolean
      additionalProperties: false
    TempProductListListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/TempProductList'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    TempProductListQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        brandName:
          type: string
          nullable: true
        brandId:
          type: string
          nullable: true
        categoryId:
          type: string
          nullable: true
        categoryName:
          type: string
          nullable: true
        categorySlugs:
          type: array
          items:
            type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        merchantName:
          type: string
          nullable: true
        vatRate:
          type: integer
          format: int32
        isInstallmentPayment:
          type: boolean
        barcode:
          type: string
          nullable: true
        minPrice:
          type: number
          format: double
        maxPrice:
          type: number
          format: double
        listPrice:
          type: number
          format: double
        images:
          type: array
          items:
            type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
          nullable: true
        isOpportunityProduct:
          type: boolean
        rowNumberOpportunityProduct:
          type: integer
          format: int32
        isNewProduct:
          type: boolean
        rowNumberNewProduct:
          type: integer
          format: int32
        isDiscountedProduct:
          type: boolean
        rowNumberDiscountedProduct:
          type: integer
          format: int32
        isShowcase:
          type: boolean
        rowNumberShowcase:
          type: integer
          format: int32
        maxSellCount:
          type: integer
          format: int32
        stockAmount:
          type: integer
          format: int32
        merchantSlug:
          type: string
          nullable: true
        variantId:
          type: string
          nullable: true
        replacedTitle:
          type: string
          nullable: true
        isReturnLimit:
          type: boolean
        returnLimitDescription:
          type: string
          nullable: true
        isRestrictedProduct:
          type: boolean
      additionalProperties: false
    TempProductListQueryListStringApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          type: array
          items:
            $ref: '#/components/schemas/TempProductListQuery'
          nullable: true
        model:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    TempProductListSearchModel:
      type: object
      properties:
        search:
          $ref: '#/components/schemas/TempSearchModel'
        orderBy:
          $ref: '#/components/schemas/TempOrderByModel'
        categories:
          $ref: '#/components/schemas/TempSearchCategoryModel'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/TempSearchAttribute'
          nullable: true
        brands:
          type: array
          items:
            type: string
          nullable: true
        paging:
          $ref: '#/components/schemas/TempPagingModel'
        slug:
          type: string
          nullable: true
        districtId:
          type: string
          nullable: true
      additionalProperties: false
    TempProductListSearchResponseModel:
      type: object
      properties:
        tempProductListQueries:
          type: array
          items:
            $ref: '#/components/schemas/TempProductListQuery'
          nullable: true
        brands:
          type: array
          items:
            $ref: '#/components/schemas/IdNameModel'
          nullable: true
        subCategories:
          type: array
          items:
            $ref: '#/components/schemas/IdNameSlugModel'
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/SearchAttributeModel'
          nullable: true
        count:
          type: integer
          format: int32
        category:
          $ref: '#/components/schemas/CategoryQuery'
        breadCrumb:
          type: array
          items:
            $ref: '#/components/schemas/IdNameSlugModel'
          nullable: true
        sameLocationTempProductListQueries:
          type: array
          items:
            $ref: '#/components/schemas/TempProductListQuery'
          nullable: true
        sameLocationCount:
          type: integer
          format: int32
      additionalProperties: false
    TempProductListSearchResponseModelTempProductListSearchModelApiResponseObject:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        internalMessage:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/TempProductListSearchResponseModel'
        model:
          $ref: '#/components/schemas/TempProductListSearchModel'
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
      additionalProperties: false
    TempSearchAttribute:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    TempSearchCategoryModel:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    TempSearchModel:
      type: object
      properties:
        prop:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        type:
          enum:
            - Contains = 1
            - Equals = 2
            - Gte = 3
            - Lte = 4
            - Gt = 5
            - Lt = 6
          type: integer
          format: int32
      additionalProperties: false
    TicketDetailQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        answeredId:
          type: string
          nullable: true
        admin:
          $ref: '#/components/schemas/UserQuery'
        merchant:
          $ref: '#/components/schemas/MerchantQuery'
        message:
          type: string
          nullable: true
        ticketFiles:
          type: array
          items:
            type: string
          nullable: true
        messageDate:
          type: string
          format: date-time
      additionalProperties: false
    TicketQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        processingUserId:
          type: string
          nullable: true
        processingUser:
          $ref: '#/components/schemas/UserQuery'
        title:
          type: string
          nullable: true
        ticketNo:
          type: string
          nullable: true
        ticketDetails:
          type: array
          items:
            $ref: '#/components/schemas/TicketDetailQuery'
          nullable: true
        status:
          enum:
            - NewTicket = 1
            - Processing = 2
            - AdminAnswered = 3
            - MerchantAnswered = 4
            - Done = 5
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
      additionalProperties: false
    UpdateAmountModel:
      type: object
      properties:
        cartId:
          type: string
          nullable: true
        cartItemId:
          type: string
          nullable: true
        amount:
          type: integer
          format: int32
        isIncrease:
          type: boolean
      additionalProperties: false
    UpdateCartOrderInfoModel:
      type: object
      properties:
        shippingAddressId:
          type: string
          nullable: true
        invoiceAddressId:
          type: string
          nullable: true
        orderNote:
          type: string
          nullable: true
      additionalProperties: false
    UpdateProcessingUserModel:
      type: object
      properties:
        processingUserId:
          type: string
          nullable: true
      additionalProperties: false
    UpdateStatusModel:
      type: object
      properties:
        status:
          enum:
            - NewTicket = 1
            - Processing = 2
            - AdminAnswered = 3
            - MerchantAnswered = 4
            - Done = 5
          type: integer
          format: int32
      additionalProperties: false
    UpdateVatRateModel:
      type: object
      properties:
        categoryId:
          type: string
          nullable: true
        vatRate:
          type: integer
          format: int32
      additionalProperties: false
    UserCreate:
      required:
        - eMail
        - name
        - password
        - rePassword
      type: object
      properties:
        name:
          maxLength: 30
          minLength: 0
          type: string
        eMail:
          maxLength: 50
          minLength: 0
          type: string
          format: email
        password:
          maxLength: 16
          minLength: 6
          type: string
          format: password
        rePassword:
          maxLength: 16
          minLength: 0
          type: string
          format: password
      additionalProperties: false
    UserQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
        active:
          type: boolean
        roles:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    UserUpdate:
      required:
        - eMail
        - name
      type: object
      properties:
        name:
          maxLength: 30
          minLength: 0
          type: string
        eMail:
          maxLength: 50
          minLength: 0
          type: string
          format: email
      additionalProperties: false
    UserUpdatePassword:
      required:
        - password
        - rePassword
      type: object
      properties:
        password:
          maxLength: 16
          minLength: 6
          type: string
          format: password
        rePassword:
          maxLength: 16
          minLength: 0
          type: string
          format: password
      additionalProperties: false
    WebApprovedMerchant:
      type: object
      properties:
        id:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        maazaName:
          type: string
          nullable: true
        commercialTitle:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        about:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
        introImage:
          type: string
          nullable: true
        point:
          type: number
          format: double
        status:
          enum:
            - Approved = 1
            - Waiting = 2
            - Denied = 3
            - Control = 4
            - NewAppeal = 5
            - CancelMerchant = 6
          type: integer
          format: int32
        locations:
          type: array
          items:
            type: string
          nullable: true
        sectors:
          type: array
          items:
            $ref: '#/components/schemas/SectorQuery'
          nullable: true
      additionalProperties: false
    WebSiteOrderDetailQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        merchantOrderId:
          type: string
          nullable: true
        merchantOrderNo:
          type: string
          nullable: true
        merchantId:
          type: string
          nullable: true
        merchantName:
          type: string
          nullable: true
        merchantSlug:
          type: string
          nullable: true
        categoryId:
          type: string
          nullable: true
        productId:
          type: string
          nullable: true
        product:
          $ref: '#/components/schemas/ProductQuery'
        variantId:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        subTotal:
          type: number
          format: double
        vatRate:
          type: integer
          format: int32
        vatTotal:
          type: number
          format: double
        totalPrice:
          type: number
          format: double
        orderState:
          enum:
            - OrderPendingApprovement = 1
            - OrderApproved = 2
            - OrderPrepairing = 3
            - OrderShipped = 4
            - OrderDelivered = 5
            - OrderCanceled = 6
            - ProductRefundRequest = 7
            - ProductRefund = 8
            - ProductAwaitingSpecialRefundApproval = 9
            - ProductAwaitingSpecialRefundApproved = 10
            - ProductAwaitingSpecialRefundRejected = 11
            - OrderPaymentFailed = 12
          type: integer
          format: int32
        orderPaymentState:
          enum:
            - OrderPendingPayment = 1
            - OrderPaymentReceived = 2
            - OrderPendingPaymentRefund = 3
            - OrderPaymentRefund = 4
          type: integer
          format: int32
        paymentDate:
          type: string
          nullable: true
        merchantPaymentDate:
          type: string
          nullable: true
        unitCargoPrice:
          type: number
          format: double
        cancelOrderDate:
          type: string
          nullable: true
        cancelMessage:
          type: string
          nullable: true
        cargoFinalDeliveryDate:
          type: string
          nullable: true
        cargoCompany:
          enum:
            - YUTRICI = 1
            - ARAS = 2
            - MNG = 3
            - SURAT = 4
            - PTT = 5
            - UPS = 6
            - HOROZ = 7
            - CEVA = 8
            - BORUSAN = 9
            - FILLO = 10
            - TNT = 11
            - DHL = 12
            - InterGlobal = 13
          type: integer
          format: int32
        cargoTrackingNumber:
          type: string
          nullable: true
        cargoTrackingLink:
          type: string
          nullable: true
        cargoDeliveredDate:
          type: string
          nullable: true
        refundReasonType:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          type: integer
          format: int32
          nullable: true
        refundReasonMessage:
          type: string
          nullable: true
        refundQuantity:
          type: integer
          format: int32
        refundDate:
          type: string
          nullable: true
        refundCargoTrackingNumber:
          type: string
          nullable: true
        refundCargoCompany:
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
          type: integer
          format: int32
          nullable: true
        paymentTransactionId:
          type: string
          nullable: true
        isComment:
          type: boolean
        isRefundDateExpired:
          type: boolean
      additionalProperties: false
    WebSiteOrderQuery:
      type: object
      properties:
        id:
          type: string
          nullable: true
        orderNo:
          type: string
          nullable: true
        orderDate:
          type: string
          nullable: true
        memberId:
          type: string
          nullable: true
        deliveryAddress:
          $ref: '#/components/schemas/DeliveryAddressQuery'
        invoiceAddress:
          $ref: '#/components/schemas/InvoiceAddressQuery'
        orderNote:
          type: string
          nullable: true
        userAgent:
          type: string
          nullable: true
        installmentNumber:
          type: integer
          format: int32
        totalPrice:
          type: number
          format: double
        cargoPrice:
          type: number
          format: double
        vatTotal:
          type: number
          format: double
        discountTotal:
          type: number
          format: double
        netPrice:
          type: number
          format: double
        totalPriceWithoutInstallment:
          type: number
          format: double
          nullable: true
        paymentId:
          type: string
          nullable: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/WebSiteOrderDetailQuery'
          nullable: true
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/Contracts'
          nullable: true
      additionalProperties: false
    WebSiteOrderResponseModel:
      type: object
      properties:
        orderQueries:
          type: array
          items:
            $ref: '#/components/schemas/WebSiteOrderQuery'
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: "JWT Authorization header using the Bearer scheme. \\r\\n\\r\\n \r\n                      Enter 'Bearer' [space] and then your token in the text input below.\r\n                      \\r\\n\\r\\nExample: 'Bearer 12345abcdef'"
      name: Authorization
      in: header
security:
  - Bearer: []
